{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/RouteGraph.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\"; // import apiManager from \"../api/apiManager\";\n\nconst RouteGraph = props => {\n  const entries = props.entriesByDate; // if (entries[5] !== undefined) {\n  //   if (Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10)[3] == 0) {\n  //     console.log(Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10)[3]);\n  //   }\n  // }\n  // if (entries[5] !== undefined) {\n  //   console.log(entries[5].time);\n  //   console.log(Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10));\n  //   console.log(Math.round(entries[5].time.split(\":\")[1] / 10) * 10);\n  // }\n\n  const timeFrame = 20;\n  const roundedTimes = entries.map(entry => {\n    console.log(Math.round(entry.time.split(\":\")[1] / timeFrame * timeFrame));\n\n    if (Math.round(entry.time.split(\":\")[1] / timeFrame * timeFrame) < timeFrame / 2) {\n      return `${entry.time.split(\":\")[0]}:${(Math.round(parseInt(entry.time.split(\":\")[1]) / timeFrame) * timeFrame % 60).toString()}0`;\n    } else {\n      return `${entry.time.split(\":\")[0]}:${(Math.round(parseInt(entry.time.split(\":\")[1]) / timeFrame) * timeFrame % 60).toString()}`;\n    }\n  });\n  const uniqueTimes = [...new Set(roundedTimes.map(time => time))];\n  console.log(\"unique times\", uniqueTimes);\n  console.log(\"rounded times\", roundedTimes);\n  const state = {\n    labels: roundedTimes,\n    datasets: [{\n      backgroundColor: \"rgba(75,192,192,1)\",\n      borderColor: \"rgba(0,0,0,1)\",\n      borderWidth: 2,\n      data: entries.map(entry => entry.attendee_count)\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"Attendee counts over time\",\n        fontSize: 20\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RouteGraph;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/RouteGraph.js"],"names":["React","Bar","RouteGraph","props","entries","entriesByDate","timeFrame","roundedTimes","map","entry","console","log","Math","round","time","split","parseInt","toString","uniqueTimes","Set","state","labels","datasets","backgroundColor","borderColor","borderWidth","data","attendee_count","title","display","text","fontSize","legend","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n// import apiManager from \"../api/apiManager\";\n\nconst RouteGraph = (props) => {\n  const entries = props.entriesByDate;\n\n  // if (entries[5] !== undefined) {\n  //   if (Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10)[3] == 0) {\n  //     console.log(Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10)[3]);\n  //   }\n  // }\n\n  // if (entries[5] !== undefined) {\n  //   console.log(entries[5].time);\n  //   console.log(Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10));\n  //   console.log(Math.round(entries[5].time.split(\":\")[1] / 10) * 10);\n  // }\n  const timeFrame = 20\n\n  const roundedTimes = entries.map((entry) => {\n    console.log(Math.round((entry.time.split(\":\")[1] / timeFrame) * timeFrame))\n    if (Math.round((entry.time.split(\":\")[1] / timeFrame) * timeFrame) < timeFrame/2) {\n      return `${entry.time.split(\":\")[0]}:${(\n        (Math.round(parseInt(entry.time.split(\":\")[1]) / timeFrame) * timeFrame) %\n        60\n      ).toString()}0`;\n    } else {\n      return `${entry.time.split(\":\")[0]}:${(\n        (Math.round(parseInt(entry.time.split(\":\")[1]) / timeFrame) * timeFrame) %\n        60\n      ).toString()}`;\n    }\n  });\n\n  const uniqueTimes = [...new Set(roundedTimes.map((time) => time))];\n  \n  console.log(\"unique times\", uniqueTimes);\n\n  console.log(\"rounded times\", roundedTimes);\n\n  const state = {\n    labels: roundedTimes,\n    datasets: [\n      {\n        backgroundColor: \"rgba(75,192,192,1)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n        data: entries.map((entry) => entry.attendee_count),\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Bar\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text: \"Attendee counts over time\",\n            fontSize: 20,\n          },\n          legend: {\n            display: false,\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RouteGraph;\n"]},"metadata":{},"sourceType":"module"}