{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/eventTranspoTracker.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./navbar\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport LocationLog from \"./logs/locationLog\";\nimport Login from \"./auth/login\";\nimport Register from \"./auth/register\";\nimport TestLog from \"./logs/testLog\";\nimport moment from \"moment\";\n\nconst EventTranspoTracker = () => {\n  const isAuthenticated = () => sessionStorage.getItem(\"token\") !== null;\n\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUserToken = resp => {\n    sessionStorage.setItem(\"token\", resp.token);\n    sessionStorage.setItem(\"userID\", resp.user_id);\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [entries, setEntries] = useState([]); // get all entries then find unique dates for the dropdown menus\n\n  const getEntries = () => {\n    apiManager.getAllEntries().then(r => {\n      r.sort((a, b) => a.date.localeCompare(b.date));\n      setEntries(r);\n    });\n  };\n\n  const uniqueDates = [...new Set(entries.map(entry => entry.date))];\n  console.log(uniqueDates[uniqueDates.length - 1]); // locations and events are all locations and events to fill the dropdown menus\n  // chosenLocation and chosenEvent are the choices made from the dropdowns\n  // chosenRoute is dependent upon chosen location (fetch location info with locationId then access .route_id)\n\n  const [locations, setLocations] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [chosenLocation, setChosenLocation] = useState(1);\n  const [chosenRoute, setChosenRoute] = useState(\"\");\n  const [chosenEvent, setChosenEvent] = useState(1);\n  const [chosenDate, setChosenDate] = useState(uniqueDates[uniqueDates.length - 1]); // get and sort in alpha order all locations for the dropdown menus and pass them to the form and the log\n\n  const getLocations = () => {\n    apiManager.getAllLocations().then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setLocations(r);\n    });\n  }; // set choseLocation based on choice from dropdown menu on form and log\n\n\n  const handleChosenLocationChange = e => {\n    const locationId = parseInt(e.target.value);\n    setChosenLocation(locationId);\n  }; // set chosenRoute based on chosenLocation and pass it down to the form\n\n\n  const getRouteByLocation = locationId => {\n    apiManager.getSingleLocation(locationId).then(r => {\n      setChosenRoute(r.route_id);\n    });\n  }; // get and sort in alpha order all events for the dropdown menus\n\n\n  const getEvents = () => {\n    apiManager.getAllEvents().then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setEvents(r);\n    });\n  }; // set chosenEvent based on choice from dropdown menu\n\n\n  const handleChosenEventChange = e => {\n    const eventId = parseInt(e.target.value);\n    setChosenEvent(eventId);\n  }; // set chosenDate based on choice from dropdown menu\n\n\n  const handleChosenDateChange = e => {\n    const dateId = e.target.value;\n    setChosenDate(dateId);\n  }; // watch from change in chosenlocation and update chosenroute at the same time\n\n\n  useEffect(() => {\n    getLocations();\n    getEvents();\n    getEntries();\n    getRouteByLocation(chosenLocation);\n  }, [chosenLocation, chosenEvent]);\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    navArray: hasUser ? [{\n      title: \"Make Entry\",\n      route: \"/entry/form\"\n    }, {\n      title: \"Logs\",\n      route: \"/location/log\"\n    }, {\n      title: \"Reports\",\n      route: \"/route/reports\"\n    }] : [],\n    hasUser: hasUser,\n    clearUser: clearUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => /*#__PURE__*/React.createElement(Login, Object.assign({\n      setUserToken: setUserToken\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 28\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    render: props => /*#__PURE__*/React.createElement(Register, Object.assign({\n      setUserToken: setUserToken\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 28\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(EntryForm, Object.assign({\n      hasUser: hasUser,\n      clearUser: clearUser,\n      locations: locations,\n      events: events,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenLocation: chosenLocation,\n      chosenRoute: chosenRoute,\n      chosenEvent: chosenEvent,\n      chosenDate: chosenDate,\n      getEntries: getEntries,\n      handleChosenLocationChange: handleChosenLocationChange,\n      handleChosenEventChange: handleChosenEventChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/edit/form/:entryId(\\\\d+)\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(EntryEditForm, Object.assign({\n      hasUser: hasUser,\n      clearUser: clearUser,\n      locations: locations,\n      events: events,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenLocation: chosenLocation,\n      chosenRoute: chosenRoute,\n      chosenEvent: chosenEvent,\n      chosenDate: chosenDate,\n      getEntries: getEntries,\n      handleChosenLocationChange: handleChosenLocationChange,\n      handleChosenEventChange: handleChosenEventChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/location/log\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(LocationLog, Object.assign({\n      hasUser: hasUser,\n      clearUser: clearUser,\n      locations: locations,\n      events: events,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenLocation: chosenLocation,\n      chosenRoute: chosenRoute,\n      chosenEvent: chosenEvent,\n      chosenDate: chosenDate,\n      handleChosenLocationChange: handleChosenLocationChange,\n      handleChosenEventChange: handleChosenEventChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/route/report\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(RouteReport, Object.assign({\n      hasUser: hasUser,\n      clearUser: clearUser,\n      locations: locations,\n      events: events,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenLocation: chosenLocation,\n      chosenRoute: chosenRoute,\n      chosenEvent: chosenEvent,\n      chosenDate: chosenDate,\n      handleChosenLocationChange: handleChosenLocationChange,\n      handleChosenEventChange: handleChosenEventChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/test/log\",\n    render: props => /*#__PURE__*/React.createElement(TestLog, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 28\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default EventTranspoTracker;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/eventTranspoTracker.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Redirect","NavBar","EntryForm","EntryEditForm","apiManager","RouteReport","LocationLog","Login","Register","TestLog","moment","EventTranspoTracker","isAuthenticated","sessionStorage","getItem","hasUser","setHasUser","setUserToken","resp","setItem","token","user_id","clearUser","clear","entries","setEntries","getEntries","getAllEntries","then","r","sort","a","b","date","localeCompare","uniqueDates","Set","map","entry","console","log","length","locations","setLocations","events","setEvents","chosenLocation","setChosenLocation","chosenRoute","setChosenRoute","chosenEvent","setChosenEvent","chosenDate","setChosenDate","getLocations","getAllLocations","name","handleChosenLocationChange","e","locationId","parseInt","target","value","getRouteByLocation","getSingleLocation","route_id","getEvents","getAllEvents","handleChosenEventChange","eventId","handleChosenDateChange","dateId","title","route","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./navbar\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport LocationLog from \"./logs/locationLog\";\nimport Login from \"./auth/login\";\nimport Register from \"./auth/register\";\nimport TestLog from \"./logs/testLog\";\nimport moment from \"moment\";\n\nconst EventTranspoTracker = () => {\n  const isAuthenticated = () => sessionStorage.getItem(\"token\") !== null;\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUserToken = (resp) => {\n    sessionStorage.setItem(\"token\", resp.token);\n    sessionStorage.setItem(\"userID\", resp.user_id);\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [entries, setEntries] = useState([]);\n\n  // get all entries then find unique dates for the dropdown menus\n  const getEntries = () => {\n    apiManager.getAllEntries().then((r) => {\n      r.sort((a, b) => a.date.localeCompare(b.date));\n      setEntries(r);\n    });\n  };\n  const uniqueDates = [...new Set(entries.map((entry) => entry.date))];\n\n  console.log(uniqueDates[uniqueDates.length - 1])\n\n  // locations and events are all locations and events to fill the dropdown menus\n  // chosenLocation and chosenEvent are the choices made from the dropdowns\n  // chosenRoute is dependent upon chosen location (fetch location info with locationId then access .route_id)\n  const [locations, setLocations] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [chosenLocation, setChosenLocation] = useState(1);\n  const [chosenRoute, setChosenRoute] = useState(\"\");\n  const [chosenEvent, setChosenEvent] = useState(1);\n  const [chosenDate, setChosenDate] = useState(uniqueDates[uniqueDates.length - 1]);\n\n  // get and sort in alpha order all locations for the dropdown menus and pass them to the form and the log\n  const getLocations = () => {\n    apiManager.getAllLocations().then((r) => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setLocations(r);\n    });\n  };\n\n  // set choseLocation based on choice from dropdown menu on form and log\n  const handleChosenLocationChange = (e) => {\n    const locationId = parseInt(e.target.value);\n    setChosenLocation(locationId);\n  };\n\n  // set chosenRoute based on chosenLocation and pass it down to the form\n  const getRouteByLocation = (locationId) => {\n    apiManager.getSingleLocation(locationId).then((r) => {\n      setChosenRoute(r.route_id);\n    });\n  };\n\n  // get and sort in alpha order all events for the dropdown menus\n  const getEvents = () => {\n    apiManager.getAllEvents().then((r) => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setEvents(r);\n    });\n  };\n\n  // set chosenEvent based on choice from dropdown menu\n  const handleChosenEventChange = (e) => {\n    const eventId = parseInt(e.target.value);\n    setChosenEvent(eventId);\n  };\n\n  // set chosenDate based on choice from dropdown menu\n  const handleChosenDateChange = (e) => {\n    const dateId = e.target.value;\n    setChosenDate(dateId);\n  };\n\n  // watch from change in chosenlocation and update chosenroute at the same time\n  useEffect(() => {\n    getLocations();\n    getEvents();\n    getEntries();\n    getRouteByLocation(chosenLocation);\n  }, [chosenLocation, chosenEvent]);\n\n  return (\n    <BrowserRouter>\n      <NavBar\n        navArray={\n          hasUser\n            ? [\n                { title: \"Make Entry\", route: \"/entry/form\" },\n                { title: \"Logs\", route: \"/location/log\" },\n                { title: \"Reports\", route: \"/route/reports\" },\n              ]\n            : []\n        }\n        hasUser={hasUser}\n        clearUser={clearUser}\n      />\n      <Route\n        exact\n        path=\"/login\"\n        render={(props) => <Login setUserToken={setUserToken} {...props} />}\n      />\n      <Route\n        exact\n        path=\"/register\"\n        render={(props) => <Register setUserToken={setUserToken} {...props} />}\n      />\n      <Route\n        exact\n        path=\"/entry/form\"\n        render={(props) =>\n          hasUser ? (\n            <EntryForm\n              hasUser={hasUser}\n              clearUser={clearUser}\n              locations={locations}\n              events={events}\n              entries={entries}\n              uniqueDates={uniqueDates}\n              chosenLocation={chosenLocation}\n              chosenRoute={chosenRoute}\n              chosenEvent={chosenEvent}\n              chosenDate={chosenDate}\n              getEntries={getEntries}\n              handleChosenLocationChange={handleChosenLocationChange}\n              handleChosenEventChange={handleChosenEventChange}\n              handleChosenDateChange={handleChosenDateChange}\n              {...props}\n            />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/entry/edit/form/:entryId(\\d+)\"\n        render={(props) =>\n          hasUser ? (\n            <EntryEditForm\n              hasUser={hasUser}\n              clearUser={clearUser}\n              locations={locations}\n              events={events}\n              entries={entries}\n              uniqueDates={uniqueDates}\n              chosenLocation={chosenLocation}\n              chosenRoute={chosenRoute}\n              chosenEvent={chosenEvent}\n              chosenDate={chosenDate}\n              getEntries={getEntries}\n              handleChosenLocationChange={handleChosenLocationChange}\n              handleChosenEventChange={handleChosenEventChange}\n              handleChosenDateChange={handleChosenDateChange}\n              {...props}\n            />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/location/log\"\n        render={(props) =>\n          hasUser ? (\n            <LocationLog\n              hasUser={hasUser}\n              clearUser={clearUser}\n              locations={locations}\n              events={events}\n              entries={entries}\n              uniqueDates={uniqueDates}\n              chosenLocation={chosenLocation}\n              chosenRoute={chosenRoute}\n              chosenEvent={chosenEvent}\n              chosenDate={chosenDate}\n              handleChosenLocationChange={handleChosenLocationChange}\n              handleChosenEventChange={handleChosenEventChange}\n              handleChosenDateChange={handleChosenDateChange}\n              {...props}\n            />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/route/report\"\n        render={(props) =>\n          hasUser ? (\n            <RouteReport\n              hasUser={hasUser}\n              clearUser={clearUser}\n              locations={locations}\n              events={events}\n              entries={entries}\n              uniqueDates={uniqueDates}\n              chosenLocation={chosenLocation}\n              chosenRoute={chosenRoute}\n              chosenEvent={chosenEvent}\n              chosenDate={chosenDate}\n              handleChosenLocationChange={handleChosenLocationChange}\n              handleChosenEventChange={handleChosenEventChange}\n              handleChosenDateChange={handleChosenDateChange}\n              {...props}\n            />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/test/log\"\n        render={(props) => <TestLog {...props} />}\n      />\n    </BrowserRouter>\n  );\n};\n\nexport default EventTranspoTracker;\n"]},"metadata":{},"sourceType":"module"}