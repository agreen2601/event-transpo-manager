{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/AssignmentCard.js\";\nimport React, { useEffect, useState } from \"../../node_modules/react\";\nimport apiManager from \"../api/apiManager\";\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { FaExchangeAlt } from \"react-icons/fa\";\nimport { FaWheelchair } from \"react-icons/fa\";\n\nconst AssignmentCard = props => {\n  const [assignment, setAssignment] = useState([]);\n\n  const getAssignment = (dateId, routeId, driverId) => {\n    apiManager.getAssignmentByDateRouteDriver(dateId, routeId, driverId).then(APIResult => {\n      setAssignment(APIResult);\n    });\n  };\n\n  useEffect(() => {\n    getAssignment(props.date.id, props.route.id, props.assignment.driverId);\n  }, [props.date.id, props.route.id, props.assignment.driverId]);\n  let realAssignment = {};\n  let realDriver = {};\n  let realVehicle = {};\n  let pax = \"\";\n  let ada = \"\";\n\n  if (assignment[0] !== undefined) {\n    realAssignment = assignment[0];\n    realDriver = assignment[0].driver;\n    realVehicle = assignment[0].vehicle;\n\n    if (assignment[0].vehicle.capacity !== \"\") {\n      pax = \"pax \";\n    }\n\n    if (assignment[0].vehicle.isADA !== \"\") {\n      ada = /*#__PURE__*/React.createElement(FaWheelchair, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"driver_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"driver_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, realDriver.name, \" \", \"\\u00A0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"driver_phone_number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, realDriver.phoneNumber, \" \", \"\\u00A0\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, realAssignment.endTime, \" \", \"\\u00A0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"is_local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, realDriver.local), /*#__PURE__*/React.createElement(IoMdRemoveCircleOutline, {\n    className: \"assignment_icon\",\n    onClick: () => props.removeAssignment(\"assignments\", realAssignment.id, props.date.id, props.route.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FaExchangeAlt, {\n    className: \"assignment_icon\",\n    onClick: () => props.history.push(`/edit/${realAssignment.id}/${props.route.id}/${realDriver.id}/${realVehicle.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FaRegEdit, {\n    className: \"assignment_icon\",\n    onClick: () => props.history.push(`/editdriver/${realDriver.id}/${realVehicle.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, realVehicle.number, \" \", \"\\u00A0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold_driver_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, realVehicle.company, \" \", \"\\u00A0\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, realVehicle.capacity, \" \", pax), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold_driver_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, realVehicle.type), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"is_ada\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \" \", \"\\u00A0\", \" \", ada)))));\n};\n\nexport default AssignmentCard;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/AssignmentCard.js"],"names":["React","useEffect","useState","apiManager","IoMdRemoveCircleOutline","FaRegEdit","FaExchangeAlt","FaWheelchair","AssignmentCard","props","assignment","setAssignment","getAssignment","dateId","routeId","driverId","getAssignmentByDateRouteDriver","then","APIResult","date","id","route","realAssignment","realDriver","realVehicle","pax","ada","undefined","driver","vehicle","capacity","isADA","name","phoneNumber","endTime","local","removeAssignment","history","push","number","company","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"../../node_modules/react\";\nimport apiManager from \"../api/apiManager\";\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { FaExchangeAlt } from \"react-icons/fa\";\nimport { FaWheelchair } from \"react-icons/fa\";\n\nconst AssignmentCard = props => {\n  const [assignment, setAssignment] = useState([]);\n\n  const getAssignment = (dateId, routeId, driverId) => {\n    apiManager\n      .getAssignmentByDateRouteDriver(dateId, routeId, driverId)\n      .then(APIResult => {\n        setAssignment(APIResult);\n      });\n  };\n\n  useEffect(() => {\n    getAssignment(props.date.id, props.route.id, props.assignment.driverId);\n  }, [props.date.id, props.route.id, props.assignment.driverId]);\n\n  let realAssignment = {};\n  let realDriver = {};\n  let realVehicle = {};\n  let pax = \"\";\n  let ada = \"\";\n  if (assignment[0] !== undefined) {\n    realAssignment = assignment[0];\n    realDriver = assignment[0].driver;\n    realVehicle = assignment[0].vehicle;\n    if (assignment[0].vehicle.capacity !== \"\") {\n      pax = \"pax \";\n    }\n    if (assignment[0].vehicle.isADA !== \"\") {\n      ada = <FaWheelchair/>\n    }\n  }\n\n  return (\n    <>\n      <section className=\"driver_info\">\n        <div>\n          <div>\n            <span className=\"driver_name\">\n              {realDriver.name} {\"\\u00A0\"}\n            </span>\n            <span className=\"driver_phone_number\">\n              {realDriver.phoneNumber} {\"\\u00A0\"}\n            </span>\n            <span>\n              {realAssignment.endTime} {\"\\u00A0\"}\n            </span>\n            <span className=\"is_local\">{realDriver.local}</span>\n            <IoMdRemoveCircleOutline\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.removeAssignment(\n                  \"assignments\",\n                  realAssignment.id,\n                  props.date.id,\n                  props.route.id\n                )\n              }\n            />\n            <FaExchangeAlt\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.history.push(\n                  `/edit/${realAssignment.id}/${props.route.id}/${realDriver.id}/${realVehicle.id}`\n                )\n              }\n            />\n            <FaRegEdit\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.history.push(\n                  `/editdriver/${realDriver.id}/${realVehicle.id}`\n                )\n              }\n            />\n          </div>\n          <div>\n            <span>\n              {realVehicle.number} {\"\\u00A0\"}\n            </span>\n            <span className=\"bold_driver_info\">\n              {realVehicle.company} {\"\\u00A0\"}\n            </span>\n            <span>\n              {realVehicle.capacity} {pax}\n            </span>\n            <span className=\"bold_driver_info\">\n              {realVehicle.type}\n            </span>\n            <span className=\"is_ada\"> {\"\\u00A0\"} {ada}</span>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default AssignmentCard;\n"]},"metadata":{},"sourceType":"module"}