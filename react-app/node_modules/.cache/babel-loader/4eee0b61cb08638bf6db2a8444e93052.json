{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/drivers/driverList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverList = props => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const chosenDateId = props.chosenDateId;\n  const chosenDateName = props.chosenDateName;\n  const chosenRoute = props.chosenRoute;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const [assignments, setAssignments] = useState([]);\n\n  const getAssignments = () => {\n    apiManager.getAllType(\"assignments\").then(r => {\n      r.sort((a, b) => a.driver.name.localeCompare(b.driver.name));\n      setAssignments(r);\n    });\n  };\n\n  const [searchField, setSearchField] = useState({\n    keyword: \"\"\n  });\n  const filteredAssignments = assignments.filter(each => each.route.name.includes(chosenRoute)).filter(each1 => each1.date.date.includes(chosenDateName)).filter(each2 => (each2.driver.name || each2.vehicle.company).toLowerCase().includes(searchField.keyword)).sort((a, b) => a.route.name.localeCompare(b.route.name)).sort((a, b) => a.date.date.localeCompare(b.date.date));\n\n  const handleSearchChange = e => {\n    const stateToChange = { ...searchField\n    };\n    stateToChange[e.target.id] = e.target.value.toLowerCase();\n    setSearchField(stateToChange);\n  };\n\n  const [mode, setMode] = useState(false);\n\n  const handleModeChange = () => {\n    setMode(!mode);\n  };\n\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = () => {\n    handleModeChange();\n    apiManager.getAllType(\"assignments\").then(arr => {\n      arr.forEach(assignment => {\n        if (assignment.driver.name.toLowerCase().includes(searchField.keyword) || assignment.driver.notes.toLowerCase().includes(searchField.keyword) || assignment.vehicle.company.toLowerCase().includes(searchField.keyword) || assignment.vehicle.number.toLowerCase().includes(searchField.keyword)) {\n          if (searchResults.includes(assignment)) {} else {\n            searchResults.push(assignment);\n          }\n        }\n      });\n      console.log(searchResults);\n      setSearchResults(searchResults);\n    });\n  };\n\n  const clearSearch = () => {\n    handleModeChange();\n    document.getElementById(\"keyword\").value = \"\";\n    setSearchResults([]);\n  };\n\n  useEffect(() => {\n    getAssignments();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Driver List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-downs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"dateId\",\n    native: true,\n    onChange: handleChosenDateChange,\n    fullWidth: true,\n    required: true,\n    value: chosenDateId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"All Dates\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: date.id,\n    \"data-name\": date.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, date.date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"routeId\",\n    native: true,\n    onChange: handleChosenRouteChange,\n    fullWidth: true,\n    required: true,\n    value: chosenRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"All Routes\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Search:\"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"keyword\",\n    fullWidth: true,\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })), mode === false ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      handleSearch();\n    },\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Search\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      clearSearch();\n    },\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Clear Search\"))), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, chosenDateId === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 38\n    }\n  }, \"Date\") : null, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, \"Number\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Company\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 24\n    }\n  }, \"Veh Number\")), chosenRoute === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }, \"Route\") : null, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"Local\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 22\n    }\n  }, \"ADA\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), mode === false ? /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, filteredAssignments.map(assignment => /*#__PURE__*/React.createElement(TableRow, {\n    key: assignment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, chosenDateId === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, assignment.date.date.slice(5)) : null, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, assignment.driver.name, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, assignment.driver.phone_number)), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, assignment.vehicle.company, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, assignment.vehicle.number)), chosenRoute === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, assignment.route.name) : null, assignment.driver.isLocal === true ? /*#__PURE__*/React.createElement(TableCell, {\n    className: \"is_local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"Local\") : /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, assignment.driver.notes), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"action-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FaRegEdit, {\n    style: {\n      fontSize: 20\n    },\n    onClick: () => props.history.push(`/driver/edit/${assignment.driver_id}/${assignment.driver_id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 23\n    }\n  })))))) : /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, searchResults.map(assignment => /*#__PURE__*/React.createElement(TableRow, {\n    key: assignment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, chosenDateId === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, assignment.date.date.slice(5)) : null, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, assignment.driver.name, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, assignment.driver.phone_number)), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, assignment.vehicle.company, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, assignment.vehicle.number)), chosenRoute === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, assignment.route.name) : null, assignment.driver.isLocal === true ? /*#__PURE__*/React.createElement(TableCell, {\n    className: \"is_local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, \"Local\") : /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, assignment.driver.notes), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"action-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FaRegEdit, {\n    style: {\n      fontSize: 20\n    },\n    onClick: () => props.history.push(`/driver/edit/${assignment.driver_id}/${assignment.driver_id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  })))))))));\n};\n\nexport default DriverList;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/drivers/driverList.js"],"names":["React","useEffect","useState","Button","Grid","InputLabel","Select","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","TextField","FaRegEdit","apiManager","DriverList","props","dates","routes","chosenDateId","chosenDateName","chosenRoute","handleChosenDateChange","handleChosenRouteChange","assignments","setAssignments","getAssignments","getAllType","then","r","sort","a","b","driver","name","localeCompare","searchField","setSearchField","keyword","filteredAssignments","filter","each","route","includes","each1","date","each2","vehicle","company","toLowerCase","handleSearchChange","e","stateToChange","target","id","value","mode","setMode","handleModeChange","searchResults","setSearchResults","handleSearch","arr","forEach","assignment","notes","number","push","console","log","clearSearch","document","getElementById","map","description","textDecoration","slice","phone_number","isLocal","fontSize","history","driver_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverList = (props) => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const chosenDateId = props.chosenDateId;\n  const chosenDateName = props.chosenDateName;\n  const chosenRoute = props.chosenRoute;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n\n  const [assignments, setAssignments] = useState([]);\n\n  const getAssignments = () => {\n    apiManager.getAllType(\"assignments\").then((r) => {\n      r.sort((a, b) => a.driver.name.localeCompare(b.driver.name));\n      setAssignments(r);\n    });\n  };\n\n  const [searchField, setSearchField] = useState({\n    keyword: \"\",\n  });\n\n  const filteredAssignments = assignments\n    .filter((each) => each.route.name.includes(chosenRoute))\n    .filter((each1) => each1.date.date.includes(chosenDateName))\n    .filter((each2) => (each2.driver.name || each2.vehicle.company).toLowerCase().includes(searchField.keyword))\n    .sort((a, b) => a.route.name.localeCompare(b.route.name))\n    .sort((a, b) => a.date.date.localeCompare(b.date.date));\n\n  const handleSearchChange = (e) => {\n    const stateToChange = { ...searchField };\n    stateToChange[e.target.id] = e.target.value.toLowerCase();\n    setSearchField(stateToChange);\n  };\n\n  const [mode, setMode] = useState(false);\n  const handleModeChange = () => {\n    setMode(!mode);\n  };\n\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = () => {\n    handleModeChange();\n    apiManager.getAllType(\"assignments\").then((arr) => {\n      arr.forEach((assignment) => {\n        if (\n          assignment.driver.name.toLowerCase().includes(searchField.keyword) ||\n          assignment.driver.notes.toLowerCase().includes(searchField.keyword) ||\n          assignment.vehicle.company\n            .toLowerCase()\n            .includes(searchField.keyword) ||\n          assignment.vehicle.number.toLowerCase().includes(searchField.keyword)\n        ) {\n          if (searchResults.includes(assignment)) {\n          } else {\n            searchResults.push(assignment);\n          }\n        }\n      });\n      console.log(searchResults);\n      setSearchResults(searchResults);\n    });\n  };\n\n  const clearSearch = () => {\n    handleModeChange();\n    document.getElementById(\"keyword\").value = \"\";\n    setSearchResults([]);\n  };\n\n  useEffect(() => {\n    getAssignments();\n  }, []);\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\">\n        Driver List\n      </Typography>\n      <div className=\"drop-downs\">\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Date:</InputLabel>\n            <Select\n              id=\"dateId\"\n              native\n              onChange={handleChosenDateChange}\n              fullWidth\n              required\n              value={chosenDateId}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                All Dates\n              </option>\n              {dates ? (\n                dates.map((date) => (\n                  <option key={date.id} value={date.id} data-name={date.date}>\n                    {date.date}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Route:</InputLabel>\n            <Select\n              id=\"routeId\"\n              native\n              onChange={handleChosenRouteChange}\n              fullWidth\n              required\n              value={chosenRoute}\n            >\n              <option aria-label=\"None\" value=\"\">\n                All Routes\n              </option>\n              {routes ? (\n                routes.map((route) => (\n                  <option key={route.id} value={route.name}>\n                    {route.name} {route.description}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Search:</InputLabel>\n            <TextField\n              type=\"text\"\n              id=\"keyword\"\n              fullWidth\n              onChange={handleSearchChange}\n            />\n          </Grid>\n          {mode === false ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                handleSearch();\n              }}\n              style={{ textDecoration: \"none\" }}\n            >\n              Search\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                clearSearch();\n              }}\n              style={{ textDecoration: \"none\" }}\n            >\n              Clear Search\n            </Button>\n          )}\n        </Grid>\n      </div>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              {chosenDateId === \"\" ? <TableCell>Date</TableCell> : null}\n              <TableCell>\n                Name<div>Number</div>\n              </TableCell>\n              <TableCell>\n                Company<div>Veh Number</div>\n              </TableCell>\n              {chosenRoute === \"\" ? <TableCell>Route</TableCell> : null}\n              <TableCell>\n                Local<div>ADA</div>\n              </TableCell>\n              <TableCell>Notes</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          {mode === false ? (\n            <TableBody>\n              {filteredAssignments.map((assignment) => (\n                <TableRow key={assignment.id}>\n                  {chosenDateId === \"\" ? (\n                    <TableCell>{assignment.date.date.slice(5)}</TableCell>\n                  ) : null}\n                  <TableCell className=\"list_name\">\n                    {assignment.driver.name}\n                    <div>{assignment.driver.phone_number}</div>\n                  </TableCell>\n                  <TableCell className=\"list_phone\">\n                    {assignment.vehicle.company}\n                    <div>{assignment.vehicle.number}</div>\n                  </TableCell>\n                  {chosenRoute === \"\" ? (\n                    <TableCell>{assignment.route.name}</TableCell>\n                  ) : null}\n                  {assignment.driver.isLocal === true ? (\n                    <TableCell className=\"is_local\">Local</TableCell>\n                  ) : (\n                    <TableCell></TableCell>\n                  )}\n                  <TableCell className=\"list_notes\">\n                    {assignment.driver.notes}\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"action-icon\">\n                      <FaRegEdit\n                        style={{ fontSize: 20 }}\n                        onClick={() =>\n                          props.history.push(\n                            `/driver/edit/${assignment.driver_id}/${assignment.driver_id}`\n                          )\n                        }\n                      />\n                    </span>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          ) : (\n            <TableBody>\n              {searchResults.map((assignment) => (\n                <TableRow key={assignment.id}>\n                  {chosenDateId === \"\" ? (\n                    <TableCell>{assignment.date.date.slice(5)}</TableCell>\n                  ) : null}\n                  <TableCell className=\"list_name\">\n                    {assignment.driver.name}\n                    <div>{assignment.driver.phone_number}</div>\n                  </TableCell>\n                  <TableCell className=\"list_phone\">\n                    {assignment.vehicle.company}\n                    <div>{assignment.vehicle.number}</div>\n                  </TableCell>\n                  {chosenRoute === \"\" ? (\n                    <TableCell>{assignment.route.name}</TableCell>\n                  ) : null}\n                  {assignment.driver.isLocal === true ? (\n                    <TableCell className=\"is_local\">Local</TableCell>\n                  ) : (\n                    <TableCell></TableCell>\n                  )}\n                  <TableCell className=\"list_notes\">\n                    {assignment.driver.notes}\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"action-icon\">\n                      <FaRegEdit\n                        style={{ fontSize: 20 }}\n                        onClick={() =>\n                          props.history.push(\n                            `/driver/edit/${assignment.driver_id}/${assignment.driver_id}`\n                          )\n                        }\n                      />\n                    </span>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          )}\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default DriverList;\n"]},"metadata":{},"sourceType":"module"}