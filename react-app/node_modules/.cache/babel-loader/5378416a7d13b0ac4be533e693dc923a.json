{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/shuttleForm.js\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\";\n\nconst ShuttleForm = () => {\n  const [shuttle, setShuttle] = useState({\n    name: \"\"\n  }); // update state of shuttle upon form field change\n\n  const handleShuttleChange = e => {\n    const stateToChange = { ...shuttle\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setShuttle(stateToChange);\n  }; // post shuttle, reset name count to empty \"\", provide user \"success\" alert\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.postType(\"shuttles\", shuttle).then(r => {\n      document.getElementById(\"name\").value = \"\";\n      setShuttle({\n        name: \"\"\n      });\n    });\n    alert(\"Success!\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Shuttle Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    fullWidth: true,\n    onChange: handleShuttleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default ShuttleForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/shuttleForm.js"],"names":["React","useState","Grid","Button","TextField","InputLabel","Typography","apiManager","ShuttleForm","shuttle","setShuttle","name","handleShuttleChange","e","stateToChange","target","id","value","handleSubmit","preventDefault","postType","then","r","document","getElementById","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACrCU,IAAAA,IAAI,EAAE;AAD+B,GAAD,CAAtC,CADwB,CAKxB;;AACA,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AACjC,UAAMC,aAAa,GAAG,EAAE,GAAGL;AAAL,KAAtB;AACAK,IAAAA,aAAa,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,CAAb,GAA6BH,CAAC,CAACE,MAAF,CAASE,KAAtC;AACAP,IAAAA,UAAU,CAACI,aAAD,CAAV;AACD,GAJD,CANwB,CAYxB;;;AACA,QAAMI,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;AACAZ,IAAAA,UAAU,CAACa,QAAX,CAAoB,UAApB,EAAgCX,OAAhC,EAAyCY,IAAzC,CAA+CC,CAAD,IAAO;AACnDC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCP,KAAhC,GAAwC,EAAxC;AACAP,MAAAA,UAAU,CAAC;AACTC,QAAAA,IAAI,EAAE;AADG,OAAD,CAAV;AAGD,KALD;AAMAc,IAAAA,KAAK,CAAC,UAAD,CAAL;AACD,GATD;;AAWA,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEP,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,MAAd;AAAqB,IAAA,SAAS,MAA9B;AAA+B,IAAA,QAAQ,EAAEN,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAPF,CAJF,CADF;AAoBD,CA5CD;;AA8CA,eAAeJ,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\";\n\nconst ShuttleForm = () => {\n  const [shuttle, setShuttle] = useState({\n    name: \"\",\n  });\n\n  // update state of shuttle upon form field change\n  const handleShuttleChange = (e) => {\n    const stateToChange = { ...shuttle };\n    stateToChange[e.target.id] = e.target.value;\n    setShuttle(stateToChange);\n  };\n\n  // post shuttle, reset name count to empty \"\", provide user \"success\" alert\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager.postType(\"shuttles\", shuttle).then((r) => {\n      document.getElementById(\"name\").value = \"\";\n      setShuttle({\n        name: \"\",\n      });\n    });\n    alert(\"Success!\");\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Shuttle Form\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Name: </InputLabel>\n            <TextField id=\"name\" fullWidth onChange={handleShuttleChange} />\n          </Grid>\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default ShuttleForm;\n"]},"metadata":{},"sourceType":"module"}