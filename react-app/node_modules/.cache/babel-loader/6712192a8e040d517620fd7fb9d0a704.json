{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/appViews.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./navbar\";\nimport EventTranspoTracker from \"./eventTranspoTracker\";\nimport EventTranspoManager from \"./eventTranspoManager\";\nimport Login from \"./auth/login\";\nimport Register from \"./auth/register\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport Log from \"./reports/log\";\nimport \"./styles.css\";\n\nconst AppViews = props => {\n  const isAuthenticated = () => sessionStorage.getItem(\"token\") !== null;\n\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUserToken = resp => {\n    sessionStorage.setItem(\"token\", resp.token);\n    sessionStorage.setItem(\"userID\", resp.user_id);\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [mode, setMode] = useState(true);\n\n  const handleModeChange = () => {\n    setMode(!mode);\n  }; // places routes and shuttles fill the dropdown menus\n  // places filter based on chosenRoute\n  // chosenPlace chosenRoute and chosenShuttle are the choices made from the dropdowns\n\n\n  const [places, setPlaces] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [shuttles, setShuttles] = useState([]);\n  const [entries, setEntries] = useState([]);\n  const [chosenPlaceId, setChosenPlaceId] = useState(\"\");\n  const [chosenPlaceName, setChosenPlaceName] = useState(\"\");\n  const [chosenRoute, setChosenRoute] = useState(\"\");\n  const [chosenShuttleId, setChosenShuttleId] = useState(\"\");\n  const [chosenShuttleName, setChosenShuttleName] = useState(\"\");\n  const [chosenDate, setChosenDate] = useState(\"\"); // get and sort in alpha order all places for the dropdown menus\n\n  const getPlaces = () => {\n    apiManager.getAllType(\"places\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setPlaces(r);\n    });\n  }; // set chosePlace based on choice from dropdown menu\n\n\n  const handleChosenPlaceChange = e => {\n    setChosenPlaceId(e.target.value);\n    setChosenPlaceName(e.target.options[e.target.selectedIndex].dataset.name);\n\n    if (e.target.value !== \"\") {// apiManager.getSingleType(\"places\", placeId).then((r) => {\n      //   apiManager.getSingleType(\"routes\", r.route_id).then((re) => {\n      //     // setRoutes([re]);\n      //     // setChosenRoute(re.name)\n      //   });\n      // });\n    } else {\n      getRoutes();\n    }\n  }; // // get and sort in alpha order all routes for the dropdown menus and pass them to the form log and graph\n\n\n  const getRoutes = () => {\n    apiManager.getAllType(\"routes\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setRoutes(r);\n    });\n  }; // // set choseroute based on choice from dropdown menu on form log and graph\n\n\n  const handleChosenRouteChange = e => {\n    const routeId = e.target.value;\n    setChosenRoute(routeId);\n    setChosenPlaceId(\"\");\n    setChosenPlaceName(\"\");\n    apiManager.getAllType(\"places\").then(r => {\n      if (routeId !== \"\") {\n        setPlaces(r.filter(each => each.route.name === routeId).sort((a, b) => a.name.localeCompare(b.name)));\n      } else {\n        setPlaces(r.sort((a, b) => a.name.localeCompare(b.name)));\n      }\n    });\n  }; // get and sort in alpha order all shuttles for the dropdown menus\n\n\n  const getShuttles = () => {\n    apiManager.getAllType(\"shuttles\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setShuttles(r);\n    });\n  }; // set chosenShuttleId based on choice from dropdown menu\n\n\n  const handleChosenShuttleChange = e => {\n    setChosenShuttleId(e.target.value);\n    setChosenShuttleName(e.target.options[e.target.selectedIndex].dataset.name);\n  }; // get all entries then find unique dates for the dropdown menus\n\n\n  const getEntries = () => {\n    apiManager.getAllType(\"entries\").then(r => {\n      r.sort((a, b) => a.date.localeCompare(b.date));\n      setEntries(r);\n    });\n  };\n\n  const uniqueDates = [...new Set(entries.map(entry => entry.date))]; // set chosenDate based on choice from dropdown menu\n\n  const handleChosenDateChange = e => {\n    const dateId = e.target.value;\n    setChosenDate(dateId);\n  };\n\n  useEffect(() => {\n    getShuttles();\n    getEntries();\n    getPlaces();\n    getRoutes();\n  }, []);\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, hasUser ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, Object.assign({\n    hasUser: hasUser,\n    clearUser: clearUser,\n    mode: mode,\n    handleModeChange: handleModeChange\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(EntryForm, Object.assign({\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      chosenPlaceId: chosenPlaceId,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/edit/form/:entryId(\\\\d+)\",\n    render: props =>\n    /*#__PURE__*/\n    // hasUser ? (\n    React.createElement(EntryEditForm, Object.assign({\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      chosenPlaceId: chosenPlaceId,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    })) // ) : (\n    //   <Redirect to=\"/login\" />\n    // )\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/log\",\n    render: props =>\n    /*#__PURE__*/\n    // hasUser ? (\n    React.createElement(Log, Object.assign({\n      getEntries: getEntries,\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenPlaceId: chosenPlaceId,\n      chosenPlaceName: chosenPlaceName,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenShuttleName: chosenShuttleName,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    })) // ) : (\n    //   <Redirect to=\"/login\" />\n    // )\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/graph\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(RouteReport, Object.assign({\n      getEntries: getEntries,\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenPlaceId: chosenPlaceId,\n      chosenPlaceName: chosenPlaceName,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenShuttleName: chosenShuttleName,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"manager\"), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/driver/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/shuttle/form\",\n    render: () => hasUser ? /*#__PURE__*/React.createElement(ShuttleForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/route/form\",\n    render: () => hasUser ? /*#__PURE__*/React.createElement(RouteForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/driver/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(DriverForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 55\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/assignment/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(AssignmentForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/vehicle/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(VehicleForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Login, Object.assign({\n      setUserToken: setUserToken\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Register, Object.assign({\n      setUserToken: setUserToken\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default AppViews;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/appViews.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Redirect","NavBar","EventTranspoTracker","EventTranspoManager","Login","Register","EntryForm","EntryEditForm","apiManager","RouteReport","Log","AppViews","props","isAuthenticated","sessionStorage","getItem","hasUser","setHasUser","setUserToken","resp","setItem","token","user_id","clearUser","clear","mode","setMode","handleModeChange","places","setPlaces","routes","setRoutes","shuttles","setShuttles","entries","setEntries","chosenPlaceId","setChosenPlaceId","chosenPlaceName","setChosenPlaceName","chosenRoute","setChosenRoute","chosenShuttleId","setChosenShuttleId","chosenShuttleName","setChosenShuttleName","chosenDate","setChosenDate","getPlaces","getAllType","then","r","sort","a","b","name","localeCompare","handleChosenPlaceChange","e","target","value","options","selectedIndex","dataset","getRoutes","handleChosenRouteChange","routeId","filter","each","route","getShuttles","handleChosenShuttleChange","getEntries","date","uniqueDates","Set","map","entry","handleChosenDateChange","dateId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./navbar\";\nimport EventTranspoTracker from \"./eventTranspoTracker\";\nimport EventTranspoManager from \"./eventTranspoManager\";\nimport Login from \"./auth/login\";\nimport Register from \"./auth/register\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport Log from \"./reports/log\";\nimport \"./styles.css\";\n\nconst AppViews = (props) => {\n  const isAuthenticated = () => sessionStorage.getItem(\"token\") !== null;\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUserToken = (resp) => {\n    sessionStorage.setItem(\"token\", resp.token);\n    sessionStorage.setItem(\"userID\", resp.user_id);\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [mode, setMode] = useState(true);\n  const handleModeChange = () => {\n    setMode(!mode);\n  };\n\n  // places routes and shuttles fill the dropdown menus\n  // places filter based on chosenRoute\n  // chosenPlace chosenRoute and chosenShuttle are the choices made from the dropdowns\n  const [places, setPlaces] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [shuttles, setShuttles] = useState([]);\n  const [entries, setEntries] = useState([]);\n  const [chosenPlaceId, setChosenPlaceId] = useState(\"\");\n  const [chosenPlaceName, setChosenPlaceName] = useState(\"\");\n  const [chosenRoute, setChosenRoute] = useState(\"\");\n  const [chosenShuttleId, setChosenShuttleId] = useState(\"\");\n  const [chosenShuttleName, setChosenShuttleName] = useState(\"\");\n  const [chosenDate, setChosenDate] = useState(\"\");\n\n  // get and sort in alpha order all places for the dropdown menus\n  const getPlaces = () => {\n    apiManager.getAllType(\"places\").then((r) => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setPlaces(r);\n    });\n  };\n\n  // set chosePlace based on choice from dropdown menu\n  const handleChosenPlaceChange = (e) => {\n    setChosenPlaceId(e.target.value);\n    setChosenPlaceName(e.target.options[e.target.selectedIndex].dataset.name);\n    if (e.target.value !== \"\") {\n      // apiManager.getSingleType(\"places\", placeId).then((r) => {\n      //   apiManager.getSingleType(\"routes\", r.route_id).then((re) => {\n      //     // setRoutes([re]);\n      //     // setChosenRoute(re.name)\n      //   });\n      // });\n    } else {\n      getRoutes();\n    }\n  };\n\n  // // get and sort in alpha order all routes for the dropdown menus and pass them to the form log and graph\n  const getRoutes = () => {\n    apiManager.getAllType(\"routes\").then((r) => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setRoutes(r);\n    });\n  };\n\n  // // set choseroute based on choice from dropdown menu on form log and graph\n  const handleChosenRouteChange = (e) => {\n    const routeId = e.target.value;\n    setChosenRoute(routeId);\n    setChosenPlaceId(\"\");\n    setChosenPlaceName(\"\");\n    apiManager.getAllType(\"places\").then((r) => {\n      if (routeId !== \"\") {\n        setPlaces(\n          r\n            .filter((each) => each.route.name === routeId)\n            .sort((a, b) => a.name.localeCompare(b.name))\n        );\n      } else {\n        setPlaces(r.sort((a, b) => a.name.localeCompare(b.name)));\n      }\n    });\n  };\n\n  // get and sort in alpha order all shuttles for the dropdown menus\n  const getShuttles = () => {\n    apiManager.getAllType(\"shuttles\").then((r) => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setShuttles(r);\n    });\n  };\n\n  // set chosenShuttleId based on choice from dropdown menu\n  const handleChosenShuttleChange = (e) => {\n    setChosenShuttleId(e.target.value);\n    setChosenShuttleName(e.target.options[e.target.selectedIndex].dataset.name);\n  };\n\n  // get all entries then find unique dates for the dropdown menus\n  const getEntries = () => {\n    apiManager.getAllType(\"entries\").then((r) => {\n      r.sort((a, b) => a.date.localeCompare(b.date));\n      setEntries(r);\n    });\n  };\n  const uniqueDates = [...new Set(entries.map((entry) => entry.date))];\n\n  // set chosenDate based on choice from dropdown menu\n  const handleChosenDateChange = (e) => {\n    const dateId = e.target.value;\n    setChosenDate(dateId);\n  };\n\n  useEffect(() => {\n    getShuttles();\n    getEntries();\n    getPlaces();\n    getRoutes();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <>\n        {hasUser ? (\n          <>\n            <NavBar\n              hasUser={hasUser}\n              clearUser={clearUser}\n              mode={mode}\n              handleModeChange={handleModeChange}\n              {...props}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Redirect to=\"/entry/form\" />}\n            />\n            <Route\n              exact\n              path=\"/entry/form\"\n              render={(props) =>\n                hasUser ? (\n                  <EntryForm\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/entry/edit/form/:entryId(\\d+)\"\n              render={\n                (props) => (\n                  // hasUser ? (\n                  <EntryEditForm\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                )\n                // ) : (\n                //   <Redirect to=\"/login\" />\n                // )\n              }\n            />\n            <Route\n              exact\n              path=\"/log\"\n              render={\n                (props) => (\n                  // hasUser ? (\n                  <Log\n                    getEntries={getEntries}\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    entries={entries}\n                    uniqueDates={uniqueDates}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenPlaceName={chosenPlaceName}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenShuttleName={chosenShuttleName}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                )\n                // ) : (\n                //   <Redirect to=\"/login\" />\n                // )\n              }\n            />\n            <Route\n              exact\n              path=\"/graph\"\n              render={(props) =>\n                hasUser ? (\n                  <RouteReport\n                    getEntries={getEntries}\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    entries={entries}\n                    uniqueDates={uniqueDates}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenPlaceName={chosenPlaceName}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenShuttleName={chosenShuttleName}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <div>manager</div>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Redirect to=\"/driver/form\" />}\n            />\n            <Route\n              exact\n              path=\"/shuttle/form\"\n              render={() =>\n                hasUser ? <ShuttleForm /> : <Redirect to=\"/login\" />\n              }\n            />\n            <Route\n              exact\n              path=\"/route/form\"\n              render={() =>\n                hasUser ? <RouteForm /> : <Redirect to=\"/login\" />\n              }\n            />\n            <Route\n              exact\n              path=\"/driver/form\"\n              render={(props) =>\n                hasUser ? <DriverForm {...props} /> : <Redirect to=\"/login\" />\n              }\n            />\n            <Route\n              exact\n              path=\"/assignment/form\"\n              render={(props) =>\n                hasUser ? (\n                  <AssignmentForm {...props} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/vehicle/form\"\n              render={(props) =>\n                hasUser ? <VehicleForm {...props} /> : <Redirect to=\"/login\" />\n              }\n            />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) =>\n                hasUser ? (\n                  <Redirect to=\"/entry/form\" />\n                ) : (\n                  <Login setUserToken={setUserToken} {...props} />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={(props) =>\n                hasUser ? (\n                  <Redirect to=\"/entry/form\" />\n                ) : (\n                  <Register setUserToken={setUserToken} {...props} />\n                )\n              }\n            />\n          </>\n        )}\n      </>\n    </BrowserRouter>\n  );\n};\n\nexport default AppViews;\n"]},"metadata":{},"sourceType":"module"}