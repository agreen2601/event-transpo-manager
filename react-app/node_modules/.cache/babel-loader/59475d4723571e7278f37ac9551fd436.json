{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/assignmentCard.js\";\nimport React, { useEffect, useState } from \"../../node_modules/react\";\nimport apiManager from \"../api/apiManager\"; // import { IoMdRemoveCircleOutline } from \"react-icons/io\";\n// import { FaRegEdit } from \"react-icons/fa\";\n// import { FaExchangeAlt } from \"react-icons/fa\";\n// import { FaWheelchair } from \"react-icons/fa\";\n\nconst AssignmentCard = props => {\n  const assignment = props.assignment;\n  console.log(\"assignment\", assignment); // const [assignment, setAssignment] = useState([]);\n  // const getAssignment = (dateId, routeId, driverId) => {\n  //   apiManager\n  //     .getAssignmentByDateRouteDriver(dateId, routeId, driverId)\n  //     .then(APIResult => {\n  //       setAssignment(APIResult);\n  //     });\n  // };\n  // useEffect(() => {\n  //   getAssignment(props.date.id, props.route.id, props.assignment.driverId);\n  // }, [props.date.id, props.route.id, props.assignment.driverId]);\n  // let realAssignment = {};\n  // let realDriver = {};\n  // let realVehicle = {};\n  // let pax = \"\";\n  // let ada = \"\";\n  // if (assignment[0] !== undefined) {\n  //   realAssignment = assignment[0];\n  //   realDriver = assignment[0].driver;\n  //   realVehicle = assignment[0].vehicle;\n  //   if (assignment[0].vehicle.capacity !== \"\") {\n  //     pax = \"pax \";\n  //   }\n  //   if (assignment[0].vehicle.isADA !== \"\") {\n  //     ada = <span>ada</span>\n  //   }\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, assignment.driver.name));\n};\n\nexport default AssignmentCard;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/assignmentCard.js"],"names":["React","useEffect","useState","apiManager","AssignmentCard","props","assignment","console","log","driver","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,0BAA3C;AACA,OAAOC,UAAP,MAAuB,mBAAvB,C,CACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B,EAF8B,CAG9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,UAAU,CAACG,MAAX,CAAkBC,IAAxB,CADA,CADF;AA+DD,CAjGD;;AAmGA,eAAeN,cAAf","sourcesContent":["import React, { useEffect, useState } from \"../../node_modules/react\";\nimport apiManager from \"../api/apiManager\";\n// import { IoMdRemoveCircleOutline } from \"react-icons/io\";\n// import { FaRegEdit } from \"react-icons/fa\";\n// import { FaExchangeAlt } from \"react-icons/fa\";\n// import { FaWheelchair } from \"react-icons/fa\";\n\nconst AssignmentCard = props => {\n  const assignment = props.assignment\n  console.log(\"assignment\", assignment)\n  // const [assignment, setAssignment] = useState([]);\n\n  // const getAssignment = (dateId, routeId, driverId) => {\n  //   apiManager\n  //     .getAssignmentByDateRouteDriver(dateId, routeId, driverId)\n  //     .then(APIResult => {\n  //       setAssignment(APIResult);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   getAssignment(props.date.id, props.route.id, props.assignment.driverId);\n  // }, [props.date.id, props.route.id, props.assignment.driverId]);\n\n  // let realAssignment = {};\n  // let realDriver = {};\n  // let realVehicle = {};\n  // let pax = \"\";\n  // let ada = \"\";\n  // if (assignment[0] !== undefined) {\n  //   realAssignment = assignment[0];\n  //   realDriver = assignment[0].driver;\n  //   realVehicle = assignment[0].vehicle;\n  //   if (assignment[0].vehicle.capacity !== \"\") {\n  //     pax = \"pax \";\n  //   }\n  //   if (assignment[0].vehicle.isADA !== \"\") {\n  //     ada = <span>ada</span>\n  //   }\n  // }\n\n  return (\n    <>\n    <div>{assignment.driver.name}</div>\n      {/* <section className=\"driver_info\">\n        <div>\n          <div>\n            <span className=\"driver_name\">\n              {realDriver.name} {\"\\u00A0\"}\n            </span>\n            <span className=\"driver_phone_number\">\n              {realDriver.phoneNumber} {\"\\u00A0\"}\n            </span>\n            <span>\n              {realAssignment.endTime} {\"\\u00A0\"}\n            </span>\n            <span className=\"is_local\">{realDriver.local}</span>\n            <span\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.removeAssignment(\n                  \"assignments\",\n                  realAssignment.id,\n                  props.date.id,\n                  props.route.id\n                )\n              }\n            >remove</span>\n            <span\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.history.push(\n                  `/edit/${realAssignment.id}/${props.route.id}/${realDriver.id}/${realVehicle.id}`\n                )\n              }\n            >edit assignment</span>\n            <span\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.history.push(\n                  `/editdriver/${realDriver.id}/${realVehicle.id}`\n                )\n              }\n            >edit driver</span>\n          </div>\n          <div>\n            <span>\n              {realVehicle.number} {\"\\u00A0\"}\n            </span>\n            <span className=\"bold_driver_info\">\n              {realVehicle.company} {\"\\u00A0\"}\n            </span>\n            <span>\n              {realVehicle.capacity} {pax}\n            </span>\n            <span className=\"bold_driver_info\">\n              {realVehicle.type}\n            </span>\n            <span className=\"is_ada\"> {\"\\u00A0\"} {ada}</span>\n          </div>\n        </div>\n      </section> */}\n    </>\n  );\n};\n\nexport default AssignmentCard;\n"]},"metadata":{},"sourceType":"module"}