{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/drivers/driverList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverList = props => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const chosenDateId = props.chosenDateId;\n  const chosenDateName = props.chosenDateName;\n  const chosenRoute = props.chosenRoute;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const [assignments, setAssignments] = useState([]);\n\n  const getAssignments = () => {\n    apiManager.getAllType(\"assignments\").then(r => {\n      r.sort((a, b) => a.driver.name.localeCompare(b.driver.name));\n      setAssignments(r);\n    });\n  };\n\n  const [searchField, setSearchField] = useState(\"\");\n\n  const handleSearchChange = e => {\n    setSearchField(e.target.value.toLowerCase());\n  };\n\n  const filteredAssignments = assignments.filter(each => each.route.name.includes(chosenRoute)).filter(each1 => each1.date.date.includes(chosenDateName)).filter(each2 => each2.driver.name.toLowerCase().includes(searchField) || each2.driver.notes.toLowerCase().includes(searchField) || each2.vehicle.company.toLowerCase().includes(searchField) || each2.vehicle.number.includes(searchField)).sort((a, b) => a.route.name.localeCompare(b.route.name)).sort((a, b) => a.date.date.localeCompare(b.date.date));\n  useEffect(() => {\n    getAssignments();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Driver List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-downs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"dateId\",\n    native: true,\n    onChange: handleChosenDateChange,\n    fullWidth: true,\n    required: true,\n    value: chosenDateId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"All Dates\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: date.id,\n    \"data-name\": date.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, date.date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"routeId\",\n    native: true,\n    onChange: handleChosenRouteChange,\n    fullWidth: true,\n    required: true,\n    value: chosenRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"All Routes\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Search:\"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"keyword\",\n    fullWidth: true,\n    onChange: handleSearchChange,\n    value: searchField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, chosenDateId === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 38\n    }\n  }, \"Date\") : null, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"Number\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Company\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 24\n    }\n  }, \"Veh Number\")), chosenRoute === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }, \"Route\") : null, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Local\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 22\n    }\n  }, \"ADA\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, filteredAssignments.map(assignment => /*#__PURE__*/React.createElement(TableRow, {\n    key: assignment.id,\n    className: \"table_rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, chosenDateId === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, assignment.date.date.slice(5)) : null, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, assignment.driver.name, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, assignment.driver.phone_number)), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, assignment.vehicle.company, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, assignment.vehicle.number)), chosenRoute === \"\" ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, assignment.route.name) : null, assignment.driver.isLocal === true ? /*#__PURE__*/React.createElement(TableCell, {\n    className: \"is_local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, \"Local\") : /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"list_notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, assignment.driver.notes), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"action-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FaRegEdit, {\n    style: {\n      fontSize: 20\n    },\n    onClick: () => props.history.push(`/driver/edit/${assignment.driver_id}/${assignment.vehicle_id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  })))))))));\n};\n\nexport default DriverList;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/drivers/driverList.js"],"names":["React","useEffect","useState","Grid","InputLabel","Select","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","TextField","FaRegEdit","apiManager","DriverList","props","dates","routes","chosenDateId","chosenDateName","chosenRoute","handleChosenDateChange","handleChosenRouteChange","assignments","setAssignments","getAssignments","getAllType","then","r","sort","a","b","driver","name","localeCompare","searchField","setSearchField","handleSearchChange","e","target","value","toLowerCase","filteredAssignments","filter","each","route","includes","each1","date","each2","notes","vehicle","company","number","map","id","description","assignment","slice","phone_number","isLocal","fontSize","history","push","driver_id","vehicle_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverList = (props) => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const chosenDateId = props.chosenDateId;\n  const chosenDateName = props.chosenDateName;\n  const chosenRoute = props.chosenRoute;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n\n  const [assignments, setAssignments] = useState([]);\n\n  const getAssignments = () => {\n    apiManager.getAllType(\"assignments\").then((r) => {\n      r.sort((a, b) => a.driver.name.localeCompare(b.driver.name));\n      setAssignments(r);\n    });\n  };\n\n  const [searchField, setSearchField] = useState(\"\");\n\n  const handleSearchChange = (e) => {\n    setSearchField(e.target.value.toLowerCase());\n  };\n\n  const filteredAssignments = assignments\n    .filter((each) => each.route.name.includes(chosenRoute))\n    .filter((each1) => each1.date.date.includes(chosenDateName))\n    .filter(\n      (each2) =>\n        each2.driver.name.toLowerCase().includes(searchField) ||\n        each2.driver.notes.toLowerCase().includes(searchField) ||\n        each2.vehicle.company.toLowerCase().includes(searchField) ||\n        each2.vehicle.number.includes(searchField)\n    )\n    .sort((a, b) => a.route.name.localeCompare(b.route.name))\n    .sort((a, b) => a.date.date.localeCompare(b.date.date));\n\n  useEffect(() => {\n    getAssignments();\n  }, []);\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\">\n        Driver List\n      </Typography>\n      <div className=\"drop-downs\">\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Date:</InputLabel>\n            <Select\n              id=\"dateId\"\n              native\n              onChange={handleChosenDateChange}\n              fullWidth\n              required\n              value={chosenDateId}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                All Dates\n              </option>\n              {dates ? (\n                dates.map((date) => (\n                  <option key={date.id} value={date.id} data-name={date.date}>\n                    {date.date}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Route:</InputLabel>\n            <Select\n              id=\"routeId\"\n              native\n              onChange={handleChosenRouteChange}\n              fullWidth\n              required\n              value={chosenRoute}\n            >\n              <option aria-label=\"None\" value=\"\">\n                All Routes\n              </option>\n              {routes ? (\n                routes.map((route) => (\n                  <option key={route.id} value={route.name}>\n                    {route.name} {route.description}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Search:</InputLabel>\n            <TextField\n              type=\"text\"\n              id=\"keyword\"\n              fullWidth\n              onChange={handleSearchChange}\n              value={searchField}\n            />\n          </Grid>\n        </Grid>\n      </div>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              {chosenDateId === \"\" ? <TableCell>Date</TableCell> : null}\n              <TableCell>\n                Name<div>Number</div>\n              </TableCell>\n              <TableCell>\n                Company<div>Veh Number</div>\n              </TableCell>\n              {chosenRoute === \"\" ? <TableCell>Route</TableCell> : null}\n              <TableCell>\n                Local<div>ADA</div>\n              </TableCell>\n              <TableCell>Notes</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredAssignments.map((assignment) => (\n              <TableRow key={assignment.id} className=\"table_rows\">\n                {chosenDateId === \"\" ? (\n                  <TableCell>{assignment.date.date.slice(5)}</TableCell>\n                ) : null}\n                <TableCell className=\"list_name\">\n                  {assignment.driver.name}\n                  <div>{assignment.driver.phone_number}</div>\n                </TableCell>\n                <TableCell className=\"list_phone\">\n                  {assignment.vehicle.company}\n                  <div>{assignment.vehicle.number}</div>\n                </TableCell>\n                {chosenRoute === \"\" ? (\n                  <TableCell>{assignment.route.name}</TableCell>\n                ) : null}\n                {assignment.driver.isLocal === true ? (\n                  <TableCell className=\"is_local\">Local</TableCell>\n                ) : (\n                  <TableCell></TableCell>\n                )}\n                <TableCell className=\"list_notes\">\n                  {assignment.driver.notes}\n                </TableCell>\n                <TableCell>\n                  <span className=\"action-icon\">\n                    <FaRegEdit\n                      style={{ fontSize: 20 }}\n                      onClick={() =>\n                        props.history.push(\n                          `/driver/edit/${assignment.driver_id}/${assignment.vehicle_id}`\n                        )\n                      }\n                    />\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default DriverList;\n"]},"metadata":{},"sourceType":"module"}