{"ast":null,"code":"import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nconst Test2 = props => {\n  const entries = props.filteredEntries;\n  const timeNumberfied = entries.map(entry => parseFloat(`${entry.time.split(\":\")[0]}.${(entry.time.split(\":\")[1] / 60).toString().split(\".\")[1]}`.slice(0, 5)));\n  var barValues = [{\n    x: 360,\n    y: 1\n  }, {\n    x: 401,\n    y: 2\n  }, {\n    x: 409,\n    y: 7\n  }, {\n    x: 417,\n    y: 4\n  }, {\n    x: 425,\n    y: 0\n  }, {\n    x: 433,\n    y: 3\n  }, {\n    x: 441,\n    y: 2\n  }, {\n    x: 449,\n    y: 1\n  }, {\n    x: 457,\n    y: 0\n  }];\n  var lineValues = [{\n    x: 354.29271401244233,\n    y: 0.000008965755086759367\n  }, {\n    x: 355.29619781055254,\n    y: 0.00001170551578337369\n  }, {\n    x: 356.29968160866275,\n    y: 0.000015213581459165245\n  }, {\n    x: 357.30316540677296,\n    y: 0.000019683829711961023\n  }, {\n    x: 358.3066492048832,\n    y: 0.000025352743346015723\n  }, {\n    x: 359.3101330029934,\n    y: 0.00003250704903497256\n  }, {\n    x: 360.3136168011036,\n    y: 0.00004149228559178569\n  }, {\n    x: 361.3171005992138,\n    y: 0.00005272230586340696\n  }, {\n    x: 362.320584397324,\n    y: 0.00006668968403940673\n  }, {\n    x: 363.3240681954342,\n    y: 0.00008397696002143379\n  }, {\n    x: 364.32755199354443,\n    y: 0.00010526860408019042\n  }, {\n    x: 365.33103579165464,\n    y: 0.00013136352828400165\n  }, {\n    x: 366.33451958976485,\n    y: 0.00016318790648317335\n  }, {\n    x: 367.33800338787506,\n    y: 0.00020180799284058357\n  }, {\n    x: 368.3414871859853,\n    y: 0.0002484425514552098\n  }, {\n    x: 369.3449709840955,\n    y: 0.00030447442862410046\n  }, {\n    x: 370.3484547822057,\n    y: 0.000371460717517228\n  }, {\n    x: 371.3519385803159,\n    y: 0.0004511408859972965\n  }, {\n    x: 372.3554223784261,\n    y: 0.0005454421661898241\n  }, {\n    x: 373.3589061765363,\n    y: 0.0006564814440034648\n  }, {\n    x: 374.36238997464653,\n    y: 0.0007865628434191882\n  }, {\n    x: 375.36587377275674,\n    y: 0.0009381701796297249\n  }, {\n    x: 376.36935757086695,\n    y: 0.0011139534627180026\n  }, {\n    x: 377.37284136897716,\n    y: 0.0013167086750031545\n  }, {\n    x: 378.3763251670874,\n    y: 0.0015493501253895062\n  }, {\n    x: 379.3798089651976,\n    y: 0.001814874807031403\n  }, {\n    x: 380.3832927633078,\n    y: 0.0021163183530504377\n  }, {\n    x: 381.386776561418,\n    y: 0.0024567023998639283\n  }, {\n    x: 382.3902603595282,\n    y: 0.0028389734277656847\n  }, {\n    x: 383.3937441576384,\n    y: 0.0032659334501998144\n  }, {\n    x: 384.39722795574863,\n    y: 0.0037401632605126053\n  }, {\n    x: 385.40071175385884,\n    y: 0.004263939308939999\n  }, {\n    x: 386.40419555196905,\n    y: 0.004839145661556971\n  }, {\n    x: 387.40767935007926,\n    y: 0.00546718287272223\n  }, {\n    x: 388.4111631481895,\n    y: 0.006148875966878388\n  }, {\n    x: 389.4146469462997,\n    y: 0.006884384056478237\n  }, {\n    x: 390.4181307444099,\n    y: 0.0076731144014652\n  }, {\n    x: 391.4216145425201,\n    y: 0.008513643923269802\n  }, {\n    x: 392.4250983406303,\n    y: 0.009403651304775247\n  }, {\n    x: 393.4285821387405,\n    y: 0.010339862821245178\n  }, {\n    x: 394.43206593685073,\n    y: 0.011318014942972878\n  }, {\n    x: 395.43554973496094,\n    y: 0.012332836519693729\n  }, {\n    x: 396.43903353307115,\n    y: 0.01337805299591794\n  }, {\n    x: 397.44251733118136,\n    y: 0.014446414617355805\n  }, {\n    x: 398.4460011292916,\n    y: 0.015529749979820335\n  }, {\n    x: 399.4494849274018,\n    y: 0.01661904555810165\n  }, {\n    x: 400.452968725512,\n    y: 0.01770455105424748\n  }, {\n    x: 401.4564525236222,\n    y: 0.01877590954908564\n  }, {\n    x: 402.4599363217324,\n    y: 0.019822310559118983\n  }, {\n    x: 403.4634201198426,\n    y: 0.02083266322810364\n  }, {\n    x: 404.46690391795283,\n    y: 0.02179578605571327\n  }, {\n    x: 405.47038771606304,\n    y: 0.02270060882200526\n  }, {\n    x: 406.47387151417325,\n    y: 0.023536381741655017\n  }, {\n    x: 407.47735531228346,\n    y: 0.024292886408330612\n  }, {\n    x: 408.4808391103937,\n    y: 0.024960642794048478\n  }, {\n    x: 409.4843229085039,\n    y: 0.025531106470860456\n  }, {\n    x: 410.4878067066141,\n    y: 0.02599685033451557\n  }, {\n    x: 411.4912905047243,\n    y: 0.02635172543441231\n  }, {\n    x: 412.4947743028345,\n    y: 0.0265909960442124\n  }, {\n    x: 413.4982581009447,\n    y: 0.026711444826402395\n  }, {\n    x: 414.50174189905493,\n    y: 0.026711444826402416\n  }, {\n    x: 415.50522569716514,\n    y: 0.026590996044212462\n  }, {\n    x: 416.50870949527535,\n    y: 0.026351725434412415\n  }, {\n    x: 417.51219329338556,\n    y: 0.02599685033451571\n  }, {\n    x: 418.5156770914958,\n    y: 0.025531106470860633\n  }, {\n    x: 419.519160889606,\n    y: 0.024960642794048686\n  }, {\n    x: 420.5226446877162,\n    y: 0.02429288640833085\n  }, {\n    x: 421.5261284858264,\n    y: 0.02353638174165529\n  }, {\n    x: 422.5296122839366,\n    y: 0.022700608822005558\n  }, {\n    x: 423.5330960820468,\n    y: 0.021795786055713588\n  }, {\n    x: 424.53657988015703,\n    y: 0.020832663228103978\n  }, {\n    x: 425.54006367826724,\n    y: 0.019822310559119333\n  }, {\n    x: 426.54354747637746,\n    y: 0.018775909549086\n  }, {\n    x: 427.54703127448767,\n    y: 0.017704551054247845\n  }, {\n    x: 428.5505150725979,\n    y: 0.016619045558102022\n  }, {\n    x: 429.5539988707081,\n    y: 0.015529749979820706\n  }, {\n    x: 430.5574826688183,\n    y: 0.01444641461735617\n  }, {\n    x: 431.5609664669285,\n    y: 0.013378052995918299\n  }, {\n    x: 432.5644502650387,\n    y: 0.012332836519694081\n  }, {\n    x: 433.5679340631489,\n    y: 0.011318014942973216\n  }, {\n    x: 434.57141786125914,\n    y: 0.0103398628212455\n  }, {\n    x: 435.57490165936935,\n    y: 0.009403651304775556\n  }, {\n    x: 436.57838545747956,\n    y: 0.008513643923270097\n  }, {\n    x: 437.58186925558977,\n    y: 0.007673114401465477\n  }, {\n    x: 438.5853530537,\n    y: 0.006884384056478495\n  }, {\n    x: 439.5888368518102,\n    y: 0.006148875966878628\n  }, {\n    x: 440.5923206499204,\n    y: 0.005467182872722453\n  }, {\n    x: 441.5958044480306,\n    y: 0.004839145661557175\n  }, {\n    x: 442.5992882461408,\n    y: 0.004263939308940185\n  }, {\n    x: 443.602772044251,\n    y: 0.003740163260512774\n  }, {\n    x: 444.60625584236124,\n    y: 0.0032659334501999684\n  }, {\n    x: 445.60973964047145,\n    y: 0.0028389734277658217\n  }, {\n    x: 446.61322343858166,\n    y: 0.0024567023998640506\n  }, {\n    x: 447.61670723669187,\n    y: 0.002116318353050547\n  }, {\n    x: 448.6201910348021,\n    y: 0.0018148748070314989\n  }, {\n    x: 449.6236748329123,\n    y: 0.0015493501253895908\n  }, {\n    x: 450.6271586310225,\n    y: 0.0013167086750032286\n  }, {\n    x: 451.6306424291327,\n    y: 0.0011139534627180663\n  }, {\n    x: 452.6341262272429,\n    y: 0.00093817017962978\n  }, {\n    x: 453.6376100253531,\n    y: 0.0007865628434192361\n  }, {\n    x: 454.64109382346334,\n    y: 0.0006564814440035056\n  }, {\n    x: 455.64457762157355,\n    y: 0.000545442166189859\n  }, {\n    x: 456.64806141968376,\n    y: 0.00045114088599732585\n  }, {\n    x: 457.65154521779397,\n    y: 0.0003714607175172527\n  }, {\n    x: 458.6550290159042,\n    y: 0.0003044744286241213\n  }, {\n    x: 459.6585128140144,\n    y: 0.000248442551455227\n  }, {\n    x: 460.6619966121246,\n    y: 0.00020180799284059807\n  }, {\n    x: 461.6654804102348,\n    y: 0.00016318790648318522\n  }, {\n    x: 462.668964208345,\n    y: 0.00013136352828401133\n  }, {\n    x: 463.6724480064552,\n    y: 0.00010526860408019838\n  }, {\n    x: 464.67593180456544,\n    y: 0.00008397696002144035\n  }, {\n    x: 465.67941560267565,\n    y: 0.00006668968403941198\n  }, {\n    x: 466.68289940078586,\n    y: 0.00005272230586341121\n  }, {\n    x: 467.68638319889607,\n    y: 0.000041492285591789125\n  }, {\n    x: 468.6898669970063,\n    y: 0.00003250704903497527\n  }, {\n    x: 469.6933507951165,\n    y: 0.000025352743346017885\n  }, {\n    x: 470.6968345932267,\n    y: 0.000019683829711962734\n  }, {\n    x: 471.7003183913369,\n    y: 0.000015213581459166595\n  }, {\n    x: 472.7038021894471,\n    y: 0.00001170551578337474\n  }, {\n    x: 473.7072859875573,\n    y: 0.000008965755086760187\n  }];\n\n  function barValue(x) {\n    const barDistance = barValues[1].x - barValues[0].x;\n\n    for (let barValue of barValues) {\n      console.log(Math.abs(barValue.x - x));\n\n      if (Math.floor(x) == barValue.x) {\n        return barValue.y;\n      }\n    }\n\n    return 0;\n  }\n\n  var ctx = document.getElementById(\"chart-js\").getContext(\"2d\");\n  new Chart(ctx, {\n    type: \"bar\",\n    data: {\n      labels: lineValues.map(v => v.x),\n      datasets: [{\n        label: \"Label nº A\",\n        backgroundColor: \"#000\",\n        borderWidth: 2,\n        fill: false,\n        data: lineValues.map(v => barValue(v.x)),\n        yAxisID: \"A\"\n      }, {\n        type: \"line\",\n        label: \"Label nº B\",\n        backgroundColor: \"#cc99ff\",\n        data: lineValues,\n        yAxisID: \"B\",\n        pointRadius: 0\n      }]\n    },\n    options: {\n      responsive: true,\n      scales: {\n        xAxes: [{\n          display: true,\n          ticks: {\n            maxTicksLimit: 10,\n            callback: value => Math.floor(value)\n          }\n        }],\n        yAxes: [{\n          id: \"A\",\n          display: true,\n          type: \"linear\"\n        }, {\n          id: \"B\",\n          display: true,\n          type: \"linear\",\n          position: \"right\",\n          ticks: {\n            max: 0.03,\n            min: 0\n          }\n        }]\n      }\n    }\n  });\n};\n\nexport default Test2;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/test2.js"],"names":["React","Chart","Test2","props","entries","filteredEntries","timeNumberfied","map","entry","parseFloat","time","split","toString","slice","barValues","x","y","lineValues","barValue","barDistance","console","log","Math","abs","floor","ctx","document","getElementById","getContext","type","data","labels","v","datasets","label","backgroundColor","borderWidth","fill","yAxisID","pointRadius","options","responsive","scales","xAxes","display","ticks","maxTicksLimit","callback","value","yAxes","id","position","max","min"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nconst Test2 = (props) => {\n  const entries = props.filteredEntries;\n\n  const timeNumberfied = entries.map((entry) =>\n    parseFloat(\n      `${entry.time.split(\":\")[0]}.${\n        (entry.time.split(\":\")[1] / 60).toString().split(\".\")[1]\n      }`.slice(0, 5)\n    )\n  );\n\n  var barValues = [\n    {\n      x: 360,\n      y: 1,\n    },\n    {\n      x: 401,\n      y: 2,\n    },\n    {\n      x: 409,\n      y: 7,\n    },\n    {\n      x: 417,\n      y: 4,\n    },\n    {\n      x: 425,\n      y: 0,\n    },\n    {\n      x: 433,\n      y: 3,\n    },\n    {\n      x: 441,\n      y: 2,\n    },\n    {\n      x: 449,\n      y: 1,\n    },\n    {\n      x: 457,\n      y: 0,\n    },\n  ];\n\n  var lineValues = [{\n    x: 354.29271401244233,\n    y: 0.000008965755086759367\n  }, {\n    x: 355.29619781055254,\n    y: 0.00001170551578337369\n  }, {\n    x: 356.29968160866275,\n    y: 0.000015213581459165245\n  }, {\n    x: 357.30316540677296,\n    y: 0.000019683829711961023\n  }, {\n    x: 358.3066492048832,\n    y: 0.000025352743346015723\n  }, {\n    x: 359.3101330029934,\n    y: 0.00003250704903497256\n  }, {\n    x: 360.3136168011036,\n    y: 0.00004149228559178569\n  }, {\n    x: 361.3171005992138,\n    y: 0.00005272230586340696\n  }, {\n    x: 362.320584397324,\n    y: 0.00006668968403940673\n  }, {\n    x: 363.3240681954342,\n    y: 0.00008397696002143379\n  }, {\n    x: 364.32755199354443,\n    y: 0.00010526860408019042\n  }, {\n    x: 365.33103579165464,\n    y: 0.00013136352828400165\n  }, {\n    x: 366.33451958976485,\n    y: 0.00016318790648317335\n  }, {\n    x: 367.33800338787506,\n    y: 0.00020180799284058357\n  }, {\n    x: 368.3414871859853,\n    y: 0.0002484425514552098\n  }, {\n    x: 369.3449709840955,\n    y: 0.00030447442862410046\n  }, {\n    x: 370.3484547822057,\n    y: 0.000371460717517228\n  }, {\n    x: 371.3519385803159,\n    y: 0.0004511408859972965\n  }, {\n    x: 372.3554223784261,\n    y: 0.0005454421661898241\n  }, {\n    x: 373.3589061765363,\n    y: 0.0006564814440034648\n  }, {\n    x: 374.36238997464653,\n    y: 0.0007865628434191882\n  }, {\n    x: 375.36587377275674,\n    y: 0.0009381701796297249\n  }, {\n    x: 376.36935757086695,\n    y: 0.0011139534627180026\n  }, {\n    x: 377.37284136897716,\n    y: 0.0013167086750031545\n  }, {\n    x: 378.3763251670874,\n    y: 0.0015493501253895062\n  }, {\n    x: 379.3798089651976,\n    y: 0.001814874807031403\n  }, {\n    x: 380.3832927633078,\n    y: 0.0021163183530504377\n  }, {\n    x: 381.386776561418,\n    y: 0.0024567023998639283\n  }, {\n    x: 382.3902603595282,\n    y: 0.0028389734277656847\n  }, {\n    x: 383.3937441576384,\n    y: 0.0032659334501998144\n  }, {\n    x: 384.39722795574863,\n    y: 0.0037401632605126053\n  }, {\n    x: 385.40071175385884,\n    y: 0.004263939308939999\n  }, {\n    x: 386.40419555196905,\n    y: 0.004839145661556971\n  }, {\n    x: 387.40767935007926,\n    y: 0.00546718287272223\n  }, {\n    x: 388.4111631481895,\n    y: 0.006148875966878388\n  }, {\n    x: 389.4146469462997,\n    y: 0.006884384056478237\n  }, {\n    x: 390.4181307444099,\n    y: 0.0076731144014652\n  }, {\n    x: 391.4216145425201,\n    y: 0.008513643923269802\n  }, {\n    x: 392.4250983406303,\n    y: 0.009403651304775247\n  }, {\n    x: 393.4285821387405,\n    y: 0.010339862821245178\n  }, {\n    x: 394.43206593685073,\n    y: 0.011318014942972878\n  }, {\n    x: 395.43554973496094,\n    y: 0.012332836519693729\n  }, {\n    x: 396.43903353307115,\n    y: 0.01337805299591794\n  }, {\n    x: 397.44251733118136,\n    y: 0.014446414617355805\n  }, {\n    x: 398.4460011292916,\n    y: 0.015529749979820335\n  }, {\n    x: 399.4494849274018,\n    y: 0.01661904555810165\n  }, {\n    x: 400.452968725512,\n    y: 0.01770455105424748\n  }, {\n    x: 401.4564525236222,\n    y: 0.01877590954908564\n  }, {\n    x: 402.4599363217324,\n    y: 0.019822310559118983\n  }, {\n    x: 403.4634201198426,\n    y: 0.02083266322810364\n  }, {\n    x: 404.46690391795283,\n    y: 0.02179578605571327\n  }, {\n    x: 405.47038771606304,\n    y: 0.02270060882200526\n  }, {\n    x: 406.47387151417325,\n    y: 0.023536381741655017\n  }, {\n    x: 407.47735531228346,\n    y: 0.024292886408330612\n  }, {\n    x: 408.4808391103937,\n    y: 0.024960642794048478\n  }, {\n    x: 409.4843229085039,\n    y: 0.025531106470860456\n  }, {\n    x: 410.4878067066141,\n    y: 0.02599685033451557\n  }, {\n    x: 411.4912905047243,\n    y: 0.02635172543441231\n  }, {\n    x: 412.4947743028345,\n    y: 0.0265909960442124\n  }, {\n    x: 413.4982581009447,\n    y: 0.026711444826402395\n  }, {\n    x: 414.50174189905493,\n    y: 0.026711444826402416\n  }, {\n    x: 415.50522569716514,\n    y: 0.026590996044212462\n  }, {\n    x: 416.50870949527535,\n    y: 0.026351725434412415\n  }, {\n    x: 417.51219329338556,\n    y: 0.02599685033451571\n  }, {\n    x: 418.5156770914958,\n    y: 0.025531106470860633\n  }, {\n    x: 419.519160889606,\n    y: 0.024960642794048686\n  }, {\n    x: 420.5226446877162,\n    y: 0.02429288640833085\n  }, {\n    x: 421.5261284858264,\n    y: 0.02353638174165529\n  }, {\n    x: 422.5296122839366,\n    y: 0.022700608822005558\n  }, {\n    x: 423.5330960820468,\n    y: 0.021795786055713588\n  }, {\n    x: 424.53657988015703,\n    y: 0.020832663228103978\n  }, {\n    x: 425.54006367826724,\n    y: 0.019822310559119333\n  }, {\n    x: 426.54354747637746,\n    y: 0.018775909549086\n  }, {\n    x: 427.54703127448767,\n    y: 0.017704551054247845\n  }, {\n    x: 428.5505150725979,\n    y: 0.016619045558102022\n  }, {\n    x: 429.5539988707081,\n    y: 0.015529749979820706\n  }, {\n    x: 430.5574826688183,\n    y: 0.01444641461735617\n  }, {\n    x: 431.5609664669285,\n    y: 0.013378052995918299\n  }, {\n    x: 432.5644502650387,\n    y: 0.012332836519694081\n  }, {\n    x: 433.5679340631489,\n    y: 0.011318014942973216\n  }, {\n    x: 434.57141786125914,\n    y: 0.0103398628212455\n  }, {\n    x: 435.57490165936935,\n    y: 0.009403651304775556\n  }, {\n    x: 436.57838545747956,\n    y: 0.008513643923270097\n  }, {\n    x: 437.58186925558977,\n    y: 0.007673114401465477\n  }, {\n    x: 438.5853530537,\n    y: 0.006884384056478495\n  }, {\n    x: 439.5888368518102,\n    y: 0.006148875966878628\n  }, {\n    x: 440.5923206499204,\n    y: 0.005467182872722453\n  }, {\n    x: 441.5958044480306,\n    y: 0.004839145661557175\n  }, {\n    x: 442.5992882461408,\n    y: 0.004263939308940185\n  }, {\n    x: 443.602772044251,\n    y: 0.003740163260512774\n  }, {\n    x: 444.60625584236124,\n    y: 0.0032659334501999684\n  }, {\n    x: 445.60973964047145,\n    y: 0.0028389734277658217\n  }, {\n    x: 446.61322343858166,\n    y: 0.0024567023998640506\n  }, {\n    x: 447.61670723669187,\n    y: 0.002116318353050547\n  }, {\n    x: 448.6201910348021,\n    y: 0.0018148748070314989\n  }, {\n    x: 449.6236748329123,\n    y: 0.0015493501253895908\n  }, {\n    x: 450.6271586310225,\n    y: 0.0013167086750032286\n  }, {\n    x: 451.6306424291327,\n    y: 0.0011139534627180663\n  }, {\n    x: 452.6341262272429,\n    y: 0.00093817017962978\n  }, {\n    x: 453.6376100253531,\n    y: 0.0007865628434192361\n  }, {\n    x: 454.64109382346334,\n    y: 0.0006564814440035056\n  }, {\n    x: 455.64457762157355,\n    y: 0.000545442166189859\n  }, {\n    x: 456.64806141968376,\n    y: 0.00045114088599732585\n  }, {\n    x: 457.65154521779397,\n    y: 0.0003714607175172527\n  }, {\n    x: 458.6550290159042,\n    y: 0.0003044744286241213\n  }, {\n    x: 459.6585128140144,\n    y: 0.000248442551455227\n  }, {\n    x: 460.6619966121246,\n    y: 0.00020180799284059807\n  }, {\n    x: 461.6654804102348,\n    y: 0.00016318790648318522\n  }, {\n    x: 462.668964208345,\n    y: 0.00013136352828401133\n  }, {\n    x: 463.6724480064552,\n    y: 0.00010526860408019838\n  }, {\n    x: 464.67593180456544,\n    y: 0.00008397696002144035\n  }, {\n    x: 465.67941560267565,\n    y: 0.00006668968403941198\n  }, {\n    x: 466.68289940078586,\n    y: 0.00005272230586341121\n  }, {\n    x: 467.68638319889607,\n    y: 0.000041492285591789125\n  }, {\n    x: 468.6898669970063,\n    y: 0.00003250704903497527\n  }, {\n    x: 469.6933507951165,\n    y: 0.000025352743346017885\n  }, {\n    x: 470.6968345932267,\n    y: 0.000019683829711962734\n  }, {\n    x: 471.7003183913369,\n    y: 0.000015213581459166595\n  }, {\n    x: 472.7038021894471,\n    y: 0.00001170551578337474\n  }, {\n    x: 473.7072859875573,\n    y: 0.000008965755086760187\n  }];\n  \n\n  function barValue(x) {\n    const barDistance = barValues[1].x - barValues[0].x;\n    for (let barValue of barValues) {\n      console.log(Math.abs(barValue.x - x));\n      if (Math.floor(x) == barValue.x) {\n        return barValue.y;\n      }\n    }\n    return 0;\n  }\n\n  var ctx = document.getElementById(\"chart-js\").getContext(\"2d\");\n  new Chart(ctx, {\n    type: \"bar\",\n    data: {\n      labels: lineValues.map((v) => v.x),\n      datasets: [\n        {\n          label: \"Label nº A\",\n          backgroundColor: \"#000\",\n          borderWidth: 2,\n          fill: false,\n          data: lineValues.map((v) => barValue(v.x)),\n          yAxisID: \"A\",\n        },\n        {\n          type: \"line\",\n          label: \"Label nº B\",\n          backgroundColor: \"#cc99ff\",\n          data: lineValues,\n          yAxisID: \"B\",\n          pointRadius: 0,\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      scales: {\n        xAxes: [\n          {\n            display: true,\n            ticks: {\n              maxTicksLimit: 10,\n              callback: (value) => Math.floor(value),\n            },\n          },\n        ],\n        yAxes: [\n          {\n            id: \"A\",\n            display: true,\n            type: \"linear\",\n          },\n          {\n            id: \"B\",\n            display: true,\n            type: \"linear\",\n            position: \"right\",\n            ticks: {\n              max: 0.03,\n              min: 0,\n            },\n          },\n        ],\n      },\n    },\n  });\n};\n\nexport default Test2;\n"]},"metadata":{},"sourceType":"module"}