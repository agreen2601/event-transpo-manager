{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/auth/register.js\";\nimport React, { useEffect, useState } from \"react\";\nimport RegisterForm from \"../forms/registerForm\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport UserForm from \"./userForm\";\nimport apiManager from \"../api/apiManager\";\n\nconst Register = props => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    firstName: null,\n    lastName: \"\"\n  });\n  const [failedLogin, setFailedLogin] = useState(false);\n  const [failedLoginMessage, setFailedLoginMessage] = useState(\"false\");\n\n  const handleFieldChange = evt => {\n    const stateToChange = { ...formData\n    };\n    stateToChange[evt.target.id] = evt.target.value;\n    setFormData(stateToChange);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errors = [];\n\n    for (let item in formData) {\n      if (formData[item].trim() == \"\") {\n        let newItem = [];\n        [...item].forEach(element => {\n          if (element == element.toUpperCase()) {\n            newItem.push(\" \");\n          }\n\n          newItem.push(element.toLowerCase());\n        });\n        errors.push(newItem.join(\"\"));\n      }\n    }\n\n    if (errors.length > 0) {\n      setFailedLogin(true);\n      setFailedLoginMessage(\"The following must not only contain spaces: \" + errors.join(\", \"));\n    } else {\n      const user = {\n        username: formData.username.trim(),\n        email: formData.email.trim(),\n        password: formData.password,\n        first_name: formData.firstName.trim(),\n        last_name: formData.lastName.trim()\n      };\n      apiManager.register(user).then(resp => {\n        if (\"token\" in resp) {\n          props.setUserToken(resp);\n          props.history.push(\"/\");\n        }\n      }) // With a 500 HTTP error, no response is given,\n      // so the error must be handled with .catch\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\n      .catch(() => {\n        setFailedLogin(true);\n        setFailedLoginMessage(\"The username you entered is already in use, please try again.\");\n      });\n    }\n  };\n\n  useEffect(() => {}, [failedLogin]); // let formData = {};\n  // if (props.formData) {\n  //   formData = props.formData;\n  // }\n  // const {\n  //   handleSubmit,\n  //   handleFieldChange,\n  //   failedLogin,\n  //   failedLoginMessage,\n  // } = props;\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Create new account\"), /*#__PURE__*/React.createElement(UserForm, {\n    handleFieldChange: handleFieldChange,\n    handleSubmit: handleSubmit,\n    failedLoginMessage: failedLoginMessage,\n    failedLogin: failedLogin,\n    formData: formData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Already have an account? Sign in\")))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/auth/register.js"],"names":["React","useEffect","useState","RegisterForm","CssBaseline","Link","Grid","Typography","Container","UserForm","apiManager","Register","props","formData","setFormData","username","email","password","firstName","lastName","failedLogin","setFailedLogin","failedLoginMessage","setFailedLoginMessage","handleFieldChange","evt","stateToChange","target","id","value","handleSubmit","e","preventDefault","errors","item","trim","newItem","forEach","element","toUpperCase","push","toLowerCase","join","length","user","first_name","last_name","register","then","resp","setUserToken","history","catch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport RegisterForm from \"../forms/registerForm\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport UserForm from \"./userForm\";\nimport apiManager from \"../api/apiManager\";\n\nconst Register = (props) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    firstName: null,\n    lastName: \"\",\n  });\n  const [failedLogin, setFailedLogin] = useState(false);\n  const [failedLoginMessage, setFailedLoginMessage] = useState(\"false\");\n\n  const handleFieldChange = (evt) => {\n    const stateToChange = { ...formData };\n    stateToChange[evt.target.id] = evt.target.value;\n    setFormData(stateToChange);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let errors = [];\n    for (let item in formData) {\n      if (formData[item].trim() == \"\") {\n        let newItem = [];\n        [...item].forEach((element) => {\n          if (element == element.toUpperCase()) {\n            newItem.push(\" \");\n          }\n          newItem.push(element.toLowerCase());\n        });\n        errors.push(newItem.join(\"\"));\n      }\n    }\n\n    if (errors.length > 0) {\n      setFailedLogin(true);\n      setFailedLoginMessage(\n        \"The following must not only contain spaces: \" + errors.join(\", \")\n      );\n    } else {\n      const user = {\n        username: formData.username.trim(),\n        email: formData.email.trim(),\n        password: formData.password,\n        first_name: formData.firstName.trim(),\n        last_name: formData.lastName.trim(),\n      };\n\n      apiManager\n        .register(user)\n        .then((resp) => {\n          if (\"token\" in resp) {\n            props.setUserToken(resp);\n            props.history.push(\"/\");\n          }\n        })\n        // With a 500 HTTP error, no response is given,\n        // so the error must be handled with .catch\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\n        .catch(() => {\n          setFailedLogin(true);\n          setFailedLoginMessage(\n            \"The username you entered is already in use, please try again.\"\n          );\n        });\n    }\n  };\n\n  useEffect(() => {}, [failedLogin]);\n\n  // let formData = {};\n  // if (props.formData) {\n  //   formData = props.formData;\n  // }\n\n  // const {\n  //   handleSubmit,\n  //   handleFieldChange,\n  //   failedLogin,\n  //   failedLoginMessage,\n  // } = props;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create new account\n        </Typography>\n        <UserForm\n          handleFieldChange={handleFieldChange}\n          handleSubmit={handleSubmit}\n          failedLoginMessage={failedLoginMessage}\n          failedLogin={failedLogin}\n          formData={formData}\n        />\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to=\"/login\" variant=\"body2\">\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}