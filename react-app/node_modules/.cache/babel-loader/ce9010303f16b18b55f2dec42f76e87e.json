{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeCard.js\";\nimport React, { useEffect, useState } from \"../../node_modules/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport apiManager from \"../api/apiManager\";\nimport AssignmentCard from \"./assignmentCard\";\n\nconst RouteCard = props => {\n  const chosenDate = props.chosenDate;\n  const route = props.route;\n  const [assignments, setAssignments] = useState([]);\n  useEffect(() => {\n    apiManager.getAssignmentsByDateRoute(parseInt(chosenDate), route.id).then(r => {\n      setAssignments(r);\n    });\n  }, [chosenDate]); // const removeAssignment = (type, id, dateId, routeId) => {\n  //   apiManager.deleteTypeWithId(type, id).then(() =>\n  //     apiManager\n  //       .getAssignmentsByDateRoute(dateId, routeId)\n  //       .then((APIResult) => {\n  //         setAssignments(APIResult);\n  //       })\n  //   );\n  // };\n  // const routeHeader = {\n  //   color: props.route.color,\n  //   fontSize: \"larger\",\n  //   fontWeight: 600,\n  //   marginRight: \"20px\"\n  // };\n\n  const routeBorder = {\n    borderColor: route.color,\n    borderWidth: \"thin\"\n  };\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, parseInt(route.name) < 10 ? /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    style: routeBorder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Route \", route.name.slice(1), \" \", route.description, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add_driver_icon\",\n    onClick: () => props.history.push(`/add/${props.route.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"add driver\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, assignments.map(assignment => /*#__PURE__*/React.createElement(AssignmentCard, Object.assign({\n    key: assignment.id,\n    assignment: assignment // removeAssignment={removeAssignment}\n\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }))))) : /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Route \", route.name, \" \", route.description, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add_driver_icon\",\n    onClick: () => props.history.push(`/add/${props.route.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"add driver\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, assignments.map(assignment => /*#__PURE__*/React.createElement(AssignmentCard, Object.assign({\n    key: assignment.id,\n    assignment: assignment // removeAssignment={removeAssignment}\n\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"route_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default RouteCard;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeCard.js"],"names":["React","useEffect","useState","makeStyles","Grid","Paper","apiManager","AssignmentCard","RouteCard","props","chosenDate","route","assignments","setAssignments","getAssignmentsByDateRoute","parseInt","id","then","r","routeBorder","borderColor","color","borderWidth","useStyles","theme","root","flexGrow","paper","padding","spacing","classes","name","slice","description","history","push","map","assignment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"../../node_modules/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport apiManager from \"../api/apiManager\";\nimport AssignmentCard from \"./assignmentCard\";\n\nconst RouteCard = (props) => {\n  const chosenDate = props.chosenDate;\n  const route = props.route;\n  const [assignments, setAssignments] = useState([]);\n\n  useEffect(() => {\n    apiManager\n      .getAssignmentsByDateRoute(parseInt(chosenDate), route.id)\n      .then((r) => {\n        setAssignments(r);\n      });\n  }, [chosenDate]);\n\n  // const removeAssignment = (type, id, dateId, routeId) => {\n  //   apiManager.deleteTypeWithId(type, id).then(() =>\n  //     apiManager\n  //       .getAssignmentsByDateRoute(dateId, routeId)\n  //       .then((APIResult) => {\n  //         setAssignments(APIResult);\n  //       })\n  //   );\n  // };\n\n  // const routeHeader = {\n  //   color: props.route.color,\n  //   fontSize: \"larger\",\n  //   fontWeight: 600,\n  //   marginRight: \"20px\"\n  // };\n\n  const routeBorder = {\n    borderColor: route.color,\n    borderWidth: \"thin\",\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            {parseInt(route.name) < 10 ? (\n              <Paper className={classes.paper} style={routeBorder}>\n                Route {route.name.slice(1)} {route.description}\n                <span\n                  className=\"add_driver_icon\"\n                  onClick={() => props.history.push(`/add/${props.route.id}`)}\n                >\n                  add driver\n                </span>\n                <div>\n                  {assignments.map((assignment) => (\n                    <AssignmentCard\n                      key={assignment.id}\n                      assignment={assignment}\n                      // removeAssignment={removeAssignment}\n                      {...props}\n                    />\n                  ))}\n                </div>\n              </Paper>\n            ) : (\n              <Paper className={classes.paper}>\n                Route {route.name} {route.description}\n                <span\n                  className=\"add_driver_icon\"\n                  onClick={() => props.history.push(`/add/${props.route.id}`)}\n                >\n                  add driver\n                </span>\n                <div>\n                  {assignments.map((assignment) => (\n                    <AssignmentCard\n                      key={assignment.id}\n                      assignment={assignment}\n                      // removeAssignment={removeAssignment}\n                      {...props}\n                    />\n                  ))}\n                </div>\n              </Paper>\n            )}\n          </Grid>\n        </Grid>\n        <div className=\"route_heading\">\n          {/* <span className=\"assigned\">\n            ({assignments.length} assigned -{\"\\u00A0\"}\n            {props.route.numOfVehNeeded - assignments.length} needed)\n          </span> */}\n          {/* {favoriteRouteIDs.length !== 0 ? (\n            <span className=\"route_icon\" id-=\"unStar\" onClick={unStar}>\n              unstar\n            </span>\n          ) : null}\n          {favoriteRouteIDs.length === 0 ? (\n            <span className=\"route_icon\" id=\"star\" onClick={star}>\n              star\n            </span>\n          ) : null} */}\n        </div>\n      </Grid>\n    </>\n  );\n};\n\nexport default RouteCard;\n"]},"metadata":{},"sourceType":"module"}