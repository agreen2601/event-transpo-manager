{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/driverEditForm.js\";\nimport React, { useState, useEffect } from \"../../node_modules/react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverEditForm = props => {\n  const [driver, setDriver] = useState({\n    name: \"\",\n    phone_number: \"\",\n    notes: \"\",\n    isChecked: false\n  });\n  useEffect(() => {\n    apiManager.getSingleType(\"drivers\", props.match.params.driverId).then(driver => {\n      setDriver(driver);\n    });\n  }, [props.match.params.driverId]);\n  let local = false;\n  driver === undefined ? local = false : local = driver.isLocal;\n  var [isChecked, setIsChecked] = useState(local);\n\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  }; // var isChecked = driver.isLocal\n  // const handleIsCheckedChange = () => {\n  //   isChecked = !isChecked\n  // }\n\n\n  console.log(typeof driver.isLocal);\n\n  const handleDriverChange = event => {\n    const stateToChange = { ...driver\n    };\n    stateToChange[event.target.id] = event.target.value;\n    setDriver(stateToChange);\n  };\n\n  const editedDriver = {\n    id: props.match.params.driverId,\n    name: driver.name,\n    phone_number: driver.phone_number,\n    isLocal: isChecked,\n    notes: driver.notes\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.updateType(\"drivers\", editedDriver).then(() => props.history.push(`/route/view`));\n  }; // `/vehicle/edit/${props.match.params.driverId}/${props.match.params.vehicleId}`\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Edit Driver Info\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    fullWidth: true,\n    required: true,\n    onChange: handleDriverChange,\n    value: driver.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Phone Number: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"phone_number\",\n    fullWidth: true,\n    required: true,\n    onChange: handleDriverChange,\n    value: driver.phone_number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isChecked,\n      onChange: handleIsCheckedChange,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }),\n    label: \"Local driver?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Notes: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"notes\",\n    fullWidth: true,\n    onChange: handleDriverChange,\n    value: driver.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/vehicle/form\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Skip\")))));\n};\n\nexport default DriverEditForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/driverEditForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Typography","FormControlLabel","Checkbox","Link","apiManager","DriverEditForm","props","driver","setDriver","name","phone_number","notes","isChecked","getSingleType","match","params","driverId","then","local","undefined","isLocal","setIsChecked","handleIsCheckedChange","console","log","handleDriverChange","event","stateToChange","target","id","value","editedDriver","handleSubmit","e","preventDefault","updateType","history","push","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"../../node_modules/react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverEditForm = (props) => {\n  const [driver, setDriver] = useState({\n    name: \"\",\n    phone_number: \"\",\n    notes: \"\",\n    isChecked: false,\n  });\n\n  useEffect(() => {\n    apiManager\n      .getSingleType(\"drivers\", props.match.params.driverId)\n      .then((driver) => {\n        setDriver(driver);\n      });\n  }, [props.match.params.driverId]);\n\n  let local = false;\n  driver === undefined ? (local = false) : (local = driver.isLocal);\n\n  var [isChecked, setIsChecked] = useState(local);\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  // var isChecked = driver.isLocal\n  // const handleIsCheckedChange = () => {\n  //   isChecked = !isChecked\n  // }\n\n  console.log(typeof driver.isLocal);\n\n  const handleDriverChange = (event) => {\n    const stateToChange = { ...driver };\n    stateToChange[event.target.id] = event.target.value;\n    setDriver(stateToChange);\n  };\n\n  const editedDriver = {\n    id: props.match.params.driverId,\n    name: driver.name,\n    phone_number: driver.phone_number,\n    isLocal: isChecked,\n    notes: driver.notes,\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager\n      .updateType(\"drivers\", editedDriver)\n      .then(() => props.history.push(`/route/view`));\n  };\n\n  // `/vehicle/edit/${props.match.params.driverId}/${props.match.params.vehicleId}`\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Edit Driver Info\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Name: </InputLabel>\n            <TextField\n              id=\"name\"\n              fullWidth\n              required\n              onChange={handleDriverChange}\n              value={driver.name}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Phone Number: </InputLabel>\n            <TextField\n              id=\"phone_number\"\n              fullWidth\n              required\n              onChange={handleDriverChange}\n              value={driver.phone_number}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isChecked}\n                  onChange={handleIsCheckedChange}\n                  color=\"primary\"\n                />\n              }\n              label=\"Local driver?\"\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Notes: </InputLabel>\n            <TextField\n              id=\"notes\"\n              fullWidth\n              onChange={handleDriverChange}\n              value={driver.notes}\n            />\n          </Grid>\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n        <div className=\"submit-button\">\n          <Link to=\"/vehicle/form\" style={{ textDecoration: \"none\" }}>\n            <Button variant=\"contained\" color=\"primary\">\n              Skip\n            </Button>\n          </Link>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default DriverEditForm;\n"]},"metadata":{},"sourceType":"module"}