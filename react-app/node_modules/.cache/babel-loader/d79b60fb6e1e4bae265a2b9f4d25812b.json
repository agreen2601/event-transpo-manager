{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/RouteCard.js\";\nimport React, { useEffect, useState } from \"../../node_modules/react\";\nimport apiManager from \"../api/apiManager\";\nimport AssignmentCard from \"./AssignmentCard\";\nimport { IoIosStarOutline } from \"react-icons/io\";\nimport { IoIosStar } from \"react-icons/io\";\nimport { IoMdAddCircleOutline } from \"react-icons/io\";\n\nconst RouteCard = props => {\n  const [assignments, setAssignments] = useState([]);\n  const [favoriteRouteIDs, setFavoriteRouteIDs] = useState([]);\n  const [favId, setFavId] = useState([]);\n  const [favorite, setFavorite] = useState({\n    userId: parseInt(sessionStorage.getItem(\"userId\")),\n    routeId: props.route.id\n  });\n  const userId = sessionStorage.getItem(\"userId\");\n\n  const getFavoriteRoutes = userID => {\n    apiManager.getFavorites(userID).then(favs => {\n      const match = favs.find(fav => fav.routeId === props.route.id);\n\n      if (match !== undefined) {\n        setFavoriteRouteIDs(match.routeId);\n        setFavId(match.id);\n      }\n    });\n  };\n\n  getFavoriteRoutes(userId);\n\n  const getAssignments = (dateId, routeId) => {\n    apiManager.getAssignmentsByDateRoute(dateId, routeId).then(APIResult => {\n      setAssignments(APIResult);\n    });\n  };\n\n  const removeAssignment = (type, id, dateId, routeId) => {\n    apiManager.deleteTypeWithId(type, id).then(() => apiManager.getAssignmentsByDateRoute(dateId, routeId).then(APIResult => {\n      setAssignments(APIResult);\n    }));\n  };\n\n  const star = () => {\n    apiManager.addType(\"favoriteRoutes\", favorite).then(APIResult => {\n      setFavorite(APIResult);\n    });\n    getFavoriteRoutes(userId);\n  };\n\n  const unStar = () => {\n    apiManager.deleteTypeWithId(\"favoriteRoutes\", favId);\n    getFavoriteRoutes(userId);\n  };\n\n  useEffect(() => {\n    getAssignments(props.date.id, props.route.id);\n  }, [props.date.id, props.route.id, userId]);\n  const routeHeader = {\n    color: props.route.color,\n    fontSize: \"larger\",\n    fontWeight: 600,\n    marginRight: \"20px\"\n  };\n  const routeBorder = {\n    borderColor: props.route.color\n  };\n  let routeNumber = props.route.number;\n\n  if (props.route.number.startsWith(\"0\")) {\n    routeNumber = props.route.number.split(\"0\")[1];\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: routeBorder,\n    className: \"route_border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"route_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: routeHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Route \", routeNumber, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"assigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"(\", assignments.length, \" assigned -\", \"\\u00A0\", props.route.numOfVehNeeded - assignments.length, \" needed)\"), favoriteRouteIDs.length !== 0 ? /*#__PURE__*/React.createElement(IoIosStar, {\n    className: \"route_icon\",\n    \"id-\": \"unStar\",\n    onClick: unStar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }) : null, favoriteRouteIDs.length === 0 ? /*#__PURE__*/React.createElement(IoIosStarOutline, {\n    className: \"route_icon\",\n    id: \"star\",\n    onClick: star,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(IoMdAddCircleOutline, {\n    className: \"add_driver_icon\",\n    onClick: () => props.history.push(`/add/${props.route.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, assignments.map(assignment => /*#__PURE__*/React.createElement(AssignmentCard, Object.assign({\n    key: assignment.id,\n    assignment: assignment,\n    removeAssignment: removeAssignment\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default RouteCard;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/RouteCard.js"],"names":["React","useEffect","useState","apiManager","AssignmentCard","IoIosStarOutline","IoIosStar","IoMdAddCircleOutline","RouteCard","props","assignments","setAssignments","favoriteRouteIDs","setFavoriteRouteIDs","favId","setFavId","favorite","setFavorite","userId","parseInt","sessionStorage","getItem","routeId","route","id","getFavoriteRoutes","userID","getFavorites","then","favs","match","find","fav","undefined","getAssignments","dateId","getAssignmentsByDateRoute","APIResult","removeAssignment","type","deleteTypeWithId","star","addType","unStar","date","routeHeader","color","fontSize","fontWeight","marginRight","routeBorder","borderColor","routeNumber","number","startsWith","split","length","numOfVehNeeded","history","push","map","assignment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"../../node_modules/react\";\nimport apiManager from \"../api/apiManager\";\nimport AssignmentCard from \"./AssignmentCard\";\nimport { IoIosStarOutline } from \"react-icons/io\";\nimport { IoIosStar } from \"react-icons/io\";\nimport { IoMdAddCircleOutline } from \"react-icons/io\";\n\nconst RouteCard = props => {\n  const [assignments, setAssignments] = useState([]);\n  const [favoriteRouteIDs, setFavoriteRouteIDs] = useState([]);\n  const [favId, setFavId] = useState([]);\n  const [favorite, setFavorite] = useState({\n    userId: parseInt(sessionStorage.getItem(\"userId\")),\n    routeId: props.route.id\n  });\n  const userId = sessionStorage.getItem(\"userId\")\n\n  const getFavoriteRoutes = (userID) => {\n    apiManager.getFavorites(userID).then(favs => {\n      const match = favs.find(fav => fav.routeId === props.route.id);\n      if (match !== undefined) {\n        setFavoriteRouteIDs(match.routeId);\n        setFavId(match.id);\n      }\n    });\n  };\n\n  getFavoriteRoutes(userId)\n\n  const getAssignments = (dateId, routeId) => {\n    apiManager.getAssignmentsByDateRoute(dateId, routeId).then(APIResult => {\n      setAssignments(APIResult);\n    });\n  };\n\n  const removeAssignment = (type, id, dateId, routeId) => {\n    apiManager.deleteTypeWithId(type, id).then(() =>\n      apiManager.getAssignmentsByDateRoute(dateId, routeId).then(APIResult => {\n        setAssignments(APIResult);\n      })\n    );\n  };\n\n  const star = () => {\n    apiManager.addType(\"favoriteRoutes\", favorite).then(APIResult => {\n      setFavorite(APIResult);\n    });\n    getFavoriteRoutes(userId);\n  };\n\n  const unStar = () => {\n    apiManager.deleteTypeWithId(\"favoriteRoutes\", favId)\n    getFavoriteRoutes(userId);\n  };\n\n  useEffect(() => {\n    getAssignments(props.date.id, props.route.id);\n  }, [props.date.id, props.route.id, userId]);\n\n  const routeHeader = {\n    color: props.route.color,\n    fontSize: \"larger\",\n    fontWeight: 600,\n    marginRight: \"20px\"\n  };\n\n  const routeBorder = {\n    borderColor: props.route.color\n  };\n\n  let routeNumber = props.route.number;\n  if (props.route.number.startsWith(\"0\")) {\n    routeNumber = props.route.number.split(\"0\")[1];\n  }\n\n  return (\n    <>\n      <div style={routeBorder} className=\"route_border\">\n        <div className=\"route_heading\">\n          <span style={routeHeader}>Route {routeNumber} </span>\n          <span className=\"assigned\">\n            ({assignments.length} assigned -{\"\\u00A0\"}\n            {props.route.numOfVehNeeded - assignments.length} needed)\n          </span>\n          {favoriteRouteIDs.length !== 0 ? (\n            <IoIosStar className=\"route_icon\" id-=\"unStar\" onClick={unStar} />\n          ) : null}\n          {favoriteRouteIDs.length === 0 ? (\n            <IoIosStarOutline className=\"route_icon\" id=\"star\" onClick={star} />\n          ) : null}\n        </div>\n        <IoMdAddCircleOutline\n          className=\"add_driver_icon\"\n          onClick={() => props.history.push(`/add/${props.route.id}`)}\n        />\n        <div>\n          {assignments.map(assignment => (\n            <AssignmentCard\n              key={assignment.id}\n              assignment={assignment}\n              removeAssignment={removeAssignment}\n              {...props}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RouteCard;\n"]},"metadata":{},"sourceType":"module"}