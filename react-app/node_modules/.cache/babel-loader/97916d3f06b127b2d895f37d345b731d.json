{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/RouteGraph.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport moment from \"moment\"; // import apiManager from \"../api/apiManager\";\n\nconst RouteGraph = props => {\n  const entries = props.entriesByDate; // const uniqueDates = [...new Set(entries.map((entry) => entry.date))]\n\n  if (entries[5] !== undefined) {\n    if (Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10)[3] == 0) {\n      console.log(Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10)[3]);\n    }\n  }\n\n  if (entries[5] !== undefined) {\n    console.log(Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10));\n  }\n\n  const roundedTimes = entries.map(entry => {\n    if (Math.round(parseInt(entry.time.split(\":\")[1] / 10) * 10)[3] == 0) {\n      return `${entry.time.split(\":\")[0]}:${(Math.round(parseInt(entry.time.split(\":\")[1]) / 10) * 10 % 60).toString()}0`;\n    } else {\n      return `${entry.time.split(\":\")[0]}:${(Math.round(parseInt(entry.time.split(\":\")[1]) / 10) * 10 % 60).toString()}`;\n    }\n  });\n  console.log(\"rounded times\", roundedTimes);\n  const state = {\n    labels: roundedTimes,\n    datasets: [{\n      backgroundColor: \"rgba(75,192,192,1)\",\n      borderColor: \"rgba(0,0,0,1)\",\n      borderWidth: 2,\n      data: entries.map(entry => entry.attendee_count)\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"Attendee counts over time\",\n        fontSize: 20\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RouteGraph;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/RouteGraph.js"],"names":["React","Bar","moment","RouteGraph","props","entries","entriesByDate","undefined","Math","round","parseInt","time","split","console","log","roundedTimes","map","entry","toString","state","labels","datasets","backgroundColor","borderColor","borderWidth","data","attendee_count","title","display","text","fontSize","legend","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport moment from \"moment\";\n// import apiManager from \"../api/apiManager\";\n\nconst RouteGraph = (props) => {\n  const entries = props.entriesByDate;\n\n  // const uniqueDates = [...new Set(entries.map((entry) => entry.date))]\n\n  if (entries[5] !== undefined) {\n    if (Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10)[3] == 0) {\n      console.log(Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10)[3]);\n    }\n  }\n\n  if (entries[5] !== undefined) {\n    console.log(Math.round(parseInt(entries[5].time.split(\":\")[1] / 10) * 10))\n  }\n\n  const roundedTimes = entries.map((entry) => {\n    if (Math.round(parseInt(entry.time.split(\":\")[1] / 10) * 10)[3] == 0) {\n      return `${entry.time.split(\":\")[0]}:${(\n        (Math.round(parseInt(entry.time.split(\":\")[1]) / 10) * 10) %\n        60\n      ).toString()}0`;\n    } else {\n      return `${entry.time.split(\":\")[0]}:${(\n        (Math.round(parseInt(entry.time.split(\":\")[1]) / 10) * 10) %\n        60\n      ).toString()}`;\n    }\n  });\n\n  console.log(\"rounded times\", roundedTimes);\n\n  const state = {\n    labels: roundedTimes,\n    datasets: [\n      {\n        backgroundColor: \"rgba(75,192,192,1)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n        data: entries.map((entry) => entry.attendee_count),\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Bar\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text: \"Attendee counts over time\",\n            fontSize: 20,\n          },\n          legend: {\n            display: false,\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RouteGraph;\n"]},"metadata":{},"sourceType":"module"}