{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeView.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport RouteCard from \"./routeCard\";\n\nconst RouteView = props => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const chosenDate = props.chosenDate;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const today = dates.find(each => each.date === moment().format(\"YYYY-MM-DD\"));\n\n  if (today !== undefined) {\n    chosenDate = today.id;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"date_id\",\n    native: true,\n    onChange: handleChosenDateChange,\n    fullWidth: true,\n    required: true,\n    value: chosenDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Choose Date\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: parseInt(date.id),\n    \"data-name\": date.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, date.date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), chosenDate !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"route_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, routes.map(route => /*#__PURE__*/React.createElement(RouteCard, Object.assign({\n    key: route.id,\n    route: route,\n    chosenDate: chosenDate\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })))) : null);\n};\n\nexport default RouteView;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeView.js"],"names":["React","Grid","InputLabel","Select","RouteCard","RouteView","props","dates","routes","chosenDate","handleChosenDateChange","today","find","each","date","moment","format","undefined","id","map","parseInt","route"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,QAAMC,UAAU,GAAGH,KAAK,CAACG,UAAzB;AACA,QAAMC,sBAAsB,GAAGJ,KAAK,CAACI,sBAArC;AAEA,QAAMC,KAAK,GAAGJ,KAAK,CAACK,IAAN,CACXC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcC,MAAM,GAAGC,MAAT,CAAgB,YAAhB,CADZ,CAAd;;AAGA,MAAIL,KAAK,KAAKM,SAAd,EAAyB;AACvBR,IAAAA,UAAU,GAAGE,KAAK,CAACO,EAAnB;AACD;;AAED,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAER,sBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAED,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,iBAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EAWGF,KAAK,GACJA,KAAK,CAACY,GAAN,CAAWL,IAAD,iBACR;AACE,IAAA,GAAG,EAAEA,IAAI,CAACI,EADZ;AAEE,IAAA,KAAK,EAAEE,QAAQ,CAACN,IAAI,CAACI,EAAN,CAFjB;AAGE,iBAAWJ,IAAI,CAACA,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,IAAI,CAACA,IALR,CADF,CADI,gBAWJ,yCAtBJ,CAFF,CADF,EA6BGL,UAAU,KAAK,EAAf,gBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACW,GAAP,CAAYE,KAAD,iBACV,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACH,EADb;AAEE,IAAA,KAAK,EAAEG,KAFT;AAGE,IAAA,UAAU,EAAEZ;AAHd,KAIMH,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADD,GAWG,IAxCN,CADF;AA4CD,CAzDD;;AA2DA,eAAeD,SAAf","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport RouteCard from \"./routeCard\";\n\nconst RouteView = (props) => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const chosenDate = props.chosenDate;\n  const handleChosenDateChange = props.handleChosenDateChange;\n\n  const today = dates.find(\n    (each) => each.date === moment().format(\"YYYY-MM-DD\")\n  );\n  if (today !== undefined) {\n    chosenDate = today.id;\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={3}>\n        <InputLabel>Date:</InputLabel>\n        <Select\n          id=\"date_id\"\n          native\n          onChange={handleChosenDateChange}\n          fullWidth\n          required\n          value={chosenDate}\n        >\n          <option aria-label=\"None\" value=\"\" data-name=\"\">\n            Choose Date\n          </option>\n          {dates ? (\n            dates.map((date) => (\n              <option\n                key={date.id}\n                value={parseInt(date.id)}\n                data-name={date.date}\n              >\n                {date.date}\n              </option>\n            ))\n          ) : (\n            <></>\n          )}\n        </Select>\n      </Grid>\n      {chosenDate !== \"\" ? (\n        <div className=\"route_card\">\n          {routes.map((route) => (\n            <RouteCard\n              key={route.id}\n              route={route}\n              chosenDate={chosenDate}\n              {...props}\n            />\n          ))}\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default RouteView;\n"]},"metadata":{},"sourceType":"module"}