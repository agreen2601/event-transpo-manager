{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/EntryRow.js\";\nimport React, { useState, useEffect } from \"react\";\nimport apiManager from \"./api/apiManager\";\nimport EntryCard from \"./EntryCard\";\n\nconst EntryRow = props => {\n  const [entries, setEntries] = useState([]);\n  const [location, setLocation] = useState([]); // get entries based on location and event chosen from dropdowns\n\n  const getEntries = (locationId, eventId) => {\n    apiManager.getEntriesByLocationAndEvent(locationId, eventId).then(r => {\n      setEntries(r);\n    });\n  };\n\n  if (location.route != undefined) {\n    console.log(location.route.color);\n    const routeColor = {\n      color: location.route.color\n    };\n  }\n\n  useEffect(() => {\n    getEntries(props.chosenLocation, props.chosenEvent);\n  }, [props.chosenLocation, props.chosenEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Time\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Vehicle Number\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Attendee Count\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, entries.map(entry => /*#__PURE__*/React.createElement(EntryCard, Object.assign({\n    key: entry.id,\n    entry: entry\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default EntryRow;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/EntryRow.js"],"names":["React","useState","useEffect","apiManager","EntryCard","EntryRow","props","entries","setEntries","location","setLocation","getEntries","locationId","eventId","getEntriesByLocationAndEvent","then","r","route","undefined","console","log","color","routeColor","chosenLocation","chosenEvent","map","entry","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAF0B,CAI1B;;AACA,QAAMU,UAAU,GAAG,CAACC,UAAD,EAAaC,OAAb,KAAyB;AAC1CV,IAAAA,UAAU,CAACW,4BAAX,CAAwCF,UAAxC,EAAoDC,OAApD,EAA6DE,IAA7D,CAAmEC,CAAD,IAAO;AACvER,MAAAA,UAAU,CAACQ,CAAD,CAAV;AACD,KAFD;AAGD,GAJD;;AAMA,MAAIP,QAAQ,CAACQ,KAAT,IAAkBC,SAAtB,EAAiC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACQ,KAAT,CAAeI,KAA3B;AACA,UAAMC,UAAU,GAAG;AACjBD,MAAAA,KAAK,EAAEZ,QAAQ,CAACQ,KAAT,CAAeI;AADL,KAAnB;AAGD;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAACL,KAAK,CAACiB,cAAP,EAAuBjB,KAAK,CAACkB,WAA7B,CAAV;AACD,GAFQ,EAEN,CAAClB,KAAK,CAACiB,cAAP,EAAuBjB,KAAK,CAACkB,WAA7B,CAFM,CAAT;AAIA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADN,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,OAAO,CAACkB,GAAR,CAAaC,KAAD,iBACX,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,IAAA,KAAK,EAAED;AAAjC,KAA4CpB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CALF,CADF;AAaD,CAnCD;;AAqCA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport apiManager from \"./api/apiManager\";\nimport EntryCard from \"./EntryCard\";\n\nconst EntryRow = (props) => {\n  const [entries, setEntries] = useState([]);\n  const [location, setLocation] = useState([]);\n\n  // get entries based on location and event chosen from dropdowns\n  const getEntries = (locationId, eventId) => {\n    apiManager.getEntriesByLocationAndEvent(locationId, eventId).then((r) => {\n      setEntries(r);\n    });\n  };\n\n  if (location.route != undefined) {\n    console.log(location.route.color);\n    const routeColor = {\n      color: location.route.color,\n    };\n  }\n\n  useEffect(() => {\n    getEntries(props.chosenLocation, props.chosenEvent);\n  }, [props.chosenLocation, props.chosenEvent]);\n\n  return (\n    <>\n      <div>\n        Time<span>Vehicle Number</span>\n        <span>Attendee Count</span>\n      </div>\n      <div>\n        {entries.map((entry) => (\n          <EntryCard key={entry.id} entry={entry} {...props} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default EntryRow;\n"]},"metadata":{},"sourceType":"module"}