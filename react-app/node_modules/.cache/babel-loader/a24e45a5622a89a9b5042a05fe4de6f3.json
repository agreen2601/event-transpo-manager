{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentAddForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\nconst AssignmentAddForm = props => {\n  const [assignment, setAssignment] = useState({\n    startTime: moment().format(\"HH:mm\"),\n    endTime: \"\",\n    driverId: 1,\n    vehicleId: 1,\n    routeId: parseInt(props.match.params.routeId),\n    dateId: props.chosenDate\n  });\n  const [dates, setDates] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const handleAssignmentChange = event => {\n    const stateToChange = { ...assignment\n    };\n\n    if (event.target.id === \"startTime\" || event.target.id === \"endTime\") {\n      stateToChange[event.target.id] = event.target.value;\n    } else {\n      stateToChange[event.target.id] = parseInt(event.target.value);\n    }\n\n    setAssignment(stateToChange);\n  };\n\n  const getAllDropDowns = () => {\n    return apiManager.getType(\"dates\").then(r => {\n      r.sort((a, b) => a.date > b.date ? 1 : -1);\n      setDates(r);\n    }), apiManager.getType(\"routes\").then(r => {\n      r.sort((a, b) => a.name > b.name ? 1 : -1);\n      setRoutes(r);\n    }), apiManager.getType(\"drivers\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setDrivers(r);\n    }), apiManager.getType(\"vehicles\").then(r => {\n      r.sort((a, b) => a.company.localeCompare(b.company)).sort((a, b) => a.number.localeCompare(b.number));\n      setVehicles(r);\n    });\n  };\n\n  useEffect(() => {\n    getAllDropDowns();\n  }, []);\n\n  const submit = () => {\n    apiManager.getAssignments().then(assignments => {\n      const assign = assignments.find(assign => assign.dateId === assignment.dateId && assign.driverId === assignment.driverId);\n\n      if (assign === undefined) {\n        apiManager.addType(\"assignments\", assignment).then(() => props.history.push(`/routeview`));\n      } else {\n        alert(`${assign.driver.name} has already been assigned on ${assign.date.date}.`);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Add Assignment\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Driver: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"driverId\",\n    onChange: handleAssignmentChange,\n    value: assignment.driverId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, drivers.map(driver => /*#__PURE__*/React.createElement(\"option\", {\n    className: \"driver_option\",\n    key: driver.id,\n    value: driver.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, driver.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Vehicle: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"vehicleId\",\n    onChange: handleAssignmentChange,\n    value: assignment.vehicleId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, vehicles.map(vehicle => /*#__PURE__*/React.createElement(\"option\", {\n    key: vehicle.id,\n    value: vehicle.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, vehicle.company, \" \", vehicle.number)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Route: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"routeId\",\n    onChange: handleAssignmentChange,\n    value: assignment.routeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, route.number)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"dateId\",\n    onChange: handleAssignmentChange,\n    value: assignment.dateId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: date.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, date.date)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Start Time: \"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: assignment.startTime,\n    type: \"time\",\n    onChange: handleAssignmentChange,\n    id: \"startTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"End Time: \"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: assignment.endTime,\n    type: \"time\",\n    onChange: handleAssignmentChange,\n    id: \"endTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AssignmentAddForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentAddForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Typography","Select","apiManager","moment","AssignmentAddForm","props","assignment","setAssignment","startTime","format","endTime","driverId","vehicleId","routeId","parseInt","match","params","dateId","chosenDate","dates","setDates","routes","setRoutes","drivers","setDrivers","vehicles","setVehicles","handleAssignmentChange","event","stateToChange","target","id","value","getAllDropDowns","getType","then","r","sort","a","b","date","name","localeCompare","company","number","submit","getAssignments","assignments","assign","find","undefined","addType","history","push","alert","driver","map","vehicle","route"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC;AAC3Cc,IAAAA,SAAS,EAAEL,MAAM,GAAGM,MAAT,CAAgB,OAAhB,CADgC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,QAAQ,EAAE,CAHiC;AAI3CC,IAAAA,SAAS,EAAE,CAJgC;AAK3CC,IAAAA,OAAO,EAAEC,QAAQ,CAACT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBH,OAApB,CAL0B;AAM3CI,IAAAA,MAAM,EAAEZ,KAAK,CAACa;AAN6B,GAAD,CAA5C;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2B,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC6B,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC+B,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMiC,sBAAsB,GAAIC,KAAD,IAAW;AACxC,UAAMC,aAAa,GAAG,EAAE,GAAGvB;AAAL,KAAtB;;AACA,QAAIsB,KAAK,CAACE,MAAN,CAAaC,EAAb,KAAoB,WAApB,IAAmCH,KAAK,CAACE,MAAN,CAAaC,EAAb,KAAoB,SAA3D,EAAsE;AACpEF,MAAAA,aAAa,CAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAb,GAAiCH,KAAK,CAACE,MAAN,CAAaE,KAA9C;AACD,KAFD,MAEO;AACLH,MAAAA,aAAa,CAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAb,GAAiCjB,QAAQ,CAACc,KAAK,CAACE,MAAN,CAAaE,KAAd,CAAzC;AACD;;AACDzB,IAAAA,aAAa,CAACsB,aAAD,CAAb;AACD,GARD;;AAUA,QAAMI,eAAe,GAAG,MAAM;AAC5B,WACE/B,UAAU,CAACgC,OAAX,CAAmB,OAAnB,EAA4BC,IAA5B,CAAkCC,CAAD,IAAO;AACtCA,MAAAA,CAAC,CAACC,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAzC;AACApB,MAAAA,QAAQ,CAACgB,CAAD,CAAR;AACD,KAHD,GAIAlC,UAAU,CAACgC,OAAX,CAAmB,QAAnB,EAA6BC,IAA7B,CAAmCC,CAAD,IAAO;AACvCA,MAAAA,CAAC,CAACC,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAzC;AACAnB,MAAAA,SAAS,CAACc,CAAD,CAAT;AACD,KAHD,CAJA,EAQAlC,UAAU,CAACgC,OAAX,CAAmB,SAAnB,EAA8BC,IAA9B,CAAoCC,CAAD,IAAO;AACxCA,MAAAA,CAAC,CAACC,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,IAAF,CAAOC,aAAP,CAAqBH,CAAC,CAACE,IAAvB,CAAjB;AACAjB,MAAAA,UAAU,CAACY,CAAD,CAAV;AACD,KAHD,CARA,EAYAlC,UAAU,CAACgC,OAAX,CAAmB,UAAnB,EAA+BC,IAA/B,CAAqCC,CAAD,IAAO;AACzCA,MAAAA,CAAC,CAACC,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,OAAF,CAAUD,aAAV,CAAwBH,CAAC,CAACI,OAA1B,CAAjB,EAAqDN,IAArD,CAA0D,CAACC,CAAD,EAAIC,CAAJ,KACxDD,CAAC,CAACM,MAAF,CAASF,aAAT,CAAuBH,CAAC,CAACK,MAAzB,CADF;AAGAlB,MAAAA,WAAW,CAACU,CAAD,CAAX;AACD,KALD,CAbF;AAoBD,GArBD;;AAuBAzC,EAAAA,SAAS,CAAC,MAAM;AACdsC,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMY,MAAM,GAAG,MAAM;AACnB3C,IAAAA,UAAU,CAAC4C,cAAX,GAA4BX,IAA5B,CAAkCY,WAAD,IAAiB;AAChD,YAAMC,MAAM,GAAGD,WAAW,CAACE,IAAZ,CACZD,MAAD,IACEA,MAAM,CAAC/B,MAAP,KAAkBX,UAAU,CAACW,MAA7B,IACA+B,MAAM,CAACrC,QAAP,KAAoBL,UAAU,CAACK,QAHpB,CAAf;;AAKA,UAAIqC,MAAM,KAAKE,SAAf,EAA0B;AACxBhD,QAAAA,UAAU,CACPiD,OADH,CACW,aADX,EAC0B7C,UAD1B,EAEG6B,IAFH,CAEQ,MAAM9B,KAAK,CAAC+C,OAAN,CAAcC,IAAd,CAAoB,YAApB,CAFd;AAGD,OAJD,MAIO;AACLC,QAAAA,KAAK,CACF,GAAEN,MAAM,CAACO,MAAP,CAAcd,IAAK,iCAAgCO,MAAM,CAACR,IAAP,CAAYA,IAAK,GADpE,CAAL;AAGD;AACF,KAfD;AAgBD,GAjBD;;AAmBA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAU,IAAA,SAAS,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,QAAQ,EAAEb,sBAFZ;AAGE,IAAA,KAAK,EAAErB,UAAU,CAACK,QAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGY,OAAO,CAACiC,GAAR,CAAaD,MAAD,iBACX;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,GAAG,EAAEA,MAAM,CAACxB,EAFd;AAGE,IAAA,KAAK,EAAEwB,MAAM,CAACxB,EAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGwB,MAAM,CAACd,IALV,CADD,CALH,CAFF,CADF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,QAAQ,EAAEd,sBAFZ;AAGE,IAAA,KAAK,EAAErB,UAAU,CAACM,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGa,QAAQ,CAAC+B,GAAT,CAAcC,OAAD,iBACZ;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAAC1B,EAArB;AAAyB,IAAA,KAAK,EAAE0B,OAAO,CAAC1B,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG0B,OAAO,CAACd,OADX,OACqBc,OAAO,CAACb,MAD7B,CADD,CALH,CAFF,CApBF,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,QAAQ,EAAEjB,sBAFZ;AAGE,IAAA,KAAK,EAAErB,UAAU,CAACO,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGQ,MAAM,CAACmC,GAAP,CAAYE,KAAD,iBACV;AAAQ,IAAA,GAAG,EAAEA,KAAK,CAAC3B,EAAnB;AAAuB,IAAA,KAAK,EAAE2B,KAAK,CAAC3B,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG2B,KAAK,CAACd,MADT,CADD,CALH,CAFF,CAnCF,eAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,QAAQ,EAAEjB,sBAFZ;AAGE,IAAA,KAAK,EAAErB,UAAU,CAACW,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGE,KAAK,CAACqC,GAAN,CAAWhB,IAAD,iBACT;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACT,EAAlB;AAAsB,IAAA,KAAK,EAAES,IAAI,CAACT,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,IAAI,CAACA,IADR,CADD,CALH,CAFF,CAlDF,eAiEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,IAAA,YAAY,EAAElC,UAAU,CAACE,SAD3B;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEmB,sBAHZ;AAIE,IAAA,EAAE,EAAC,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjEF,eA2EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,YAAY,EAAErB,UAAU,CAACI,OAD3B;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEiB,sBAHZ;AAIE,IAAA,EAAE,EAAC,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA3EF,eAqFE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEkB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArFF,CAFF,CADF,CADF;AAgGD,CAvKD;;AAyKA,eAAezC,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\nconst AssignmentAddForm = (props) => {\n  const [assignment, setAssignment] = useState({\n    startTime: moment().format(\"HH:mm\"),\n    endTime: \"\",\n    driverId: 1,\n    vehicleId: 1,\n    routeId: parseInt(props.match.params.routeId),\n    dateId: props.chosenDate,\n  });\n\n  const [dates, setDates] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const handleAssignmentChange = (event) => {\n    const stateToChange = { ...assignment };\n    if (event.target.id === \"startTime\" || event.target.id === \"endTime\") {\n      stateToChange[event.target.id] = event.target.value;\n    } else {\n      stateToChange[event.target.id] = parseInt(event.target.value);\n    }\n    setAssignment(stateToChange);\n  };\n\n  const getAllDropDowns = () => {\n    return (\n      apiManager.getType(\"dates\").then((r) => {\n        r.sort((a, b) => (a.date > b.date ? 1 : -1));\n        setDates(r);\n      }),\n      apiManager.getType(\"routes\").then((r) => {\n        r.sort((a, b) => (a.name > b.name ? 1 : -1));\n        setRoutes(r);\n      }),\n      apiManager.getType(\"drivers\").then((r) => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setDrivers(r);\n      }),\n      apiManager.getType(\"vehicles\").then((r) => {\n        r.sort((a, b) => a.company.localeCompare(b.company)).sort((a, b) =>\n          a.number.localeCompare(b.number)\n        );\n        setVehicles(r);\n      })\n    );\n  };\n\n  useEffect(() => {\n    getAllDropDowns();\n  }, []);\n\n  const submit = () => {\n    apiManager.getAssignments().then((assignments) => {\n      const assign = assignments.find(\n        (assign) =>\n          assign.dateId === assignment.dateId &&\n          assign.driverId === assignment.driverId\n      );\n      if (assign === undefined) {\n        apiManager\n          .addType(\"assignments\", assignment)\n          .then(() => props.history.push(`/routeview`));\n      } else {\n        alert(\n          `${assign.driver.name} has already been assigned on ${assign.date.date}.`\n        );\n      }\n    });\n  };\n\n  return (\n    <>\n      <form>\n        <h3>Add Assignment</h3>\n        <fieldset className=\"form\">\n          <div>\n            <label>Driver: </label>\n            <select\n              id=\"driverId\"\n              onChange={handleAssignmentChange}\n              value={assignment.driverId}\n            >\n              {drivers.map((driver) => (\n                <option\n                  className=\"driver_option\"\n                  key={driver.id}\n                  value={driver.id}\n                >\n                  {driver.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Vehicle: </label>\n            <select\n              id=\"vehicleId\"\n              onChange={handleAssignmentChange}\n              value={assignment.vehicleId}\n            >\n              {vehicles.map((vehicle) => (\n                <option key={vehicle.id} value={vehicle.id}>\n                  {vehicle.company} {vehicle.number}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Route: </label>\n            <select\n              id=\"routeId\"\n              onChange={handleAssignmentChange}\n              value={assignment.routeId}\n            >\n              {routes.map((route) => (\n                <option key={route.id} value={route.id}>\n                  {route.number}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Date: </label>\n            <select\n              id=\"dateId\"\n              onChange={handleAssignmentChange}\n              value={assignment.dateId}\n            >\n              {dates.map((date) => (\n                <option key={date.id} value={date.id}>\n                  {date.date}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Start Time: </label>\n            <input\n              defaultValue={assignment.startTime}\n              type=\"time\"\n              onChange={handleAssignmentChange}\n              id=\"startTime\"\n            />\n          </div>\n\n          <div>\n            <label>End Time: </label>\n            <input\n              defaultValue={assignment.endTime}\n              type=\"time\"\n              onChange={handleAssignmentChange}\n              id=\"endTime\"\n            />\n          </div>\n\n          <button type=\"button\" onClick={submit}>\n            Submit\n          </button>\n        </fieldset>\n      </form>\n    </>\n  );\n};\n\nexport default AssignmentAddForm;\n"]},"metadata":{},"sourceType":"module"}