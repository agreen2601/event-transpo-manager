{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/appViews.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./navbar\";\nimport EventTranspoTracker from \"./eventTranspoTracker\";\nimport EventTranspoManager from \"./eventTranspoManager\";\nimport Login from \"./auth/login\";\nimport Register from \"./auth/register\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport Log from \"./reports/log\";\nimport \"./styles.css\";\n\nconst AppViews = props => {\n  const isAuthenticated = () => sessionStorage.getItem(\"token\") !== null;\n\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUserToken = resp => {\n    sessionStorage.setItem(\"token\", resp.token);\n    sessionStorage.setItem(\"userID\", resp.user_id);\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [mode, setMode] = useState(true);\n\n  const handleModeChange = () => {\n    setMode(!mode);\n  }; // places routes and shuttles fill the dropdown menus\n  // places filter based on chosenRoute\n  // chosenPlace chosenRoute and chosenShuttle are the choices made from the dropdowns\n  // const [places, setPlaces] = useState([]);\n  // const [routes, setRoutes] = useState([]);\n  // const [shuttles, setShuttles] = useState([]);\n  // const [entries, setEntries] = useState([]);\n  // const [chosenPlaceId, setChosenPlaceId] = useState(\"\");\n  // const [chosenPlaceName, setChosenPlaceName] = useState(\"\");\n  // const [chosenRoute, setChosenRoute] = useState(\"\");\n  // const [chosenShuttleId, setChosenShuttleId] = useState(\"\");\n  // const [chosenShuttleName, setChosenShuttleName] = useState(\"\");\n  // const [chosenDate, setChosenDate] = useState(\"\");\n  // // get and sort in alpha order all places for the dropdown menus\n  // const getPlaces = () => {\n  //   apiManager.getAllType(\"places\").then((r) => {\n  //     r.sort((a, b) => a.name.localeCompare(b.name));\n  //     setPlaces(r);\n  //   });\n  // };\n  // // set chosePlace based on choice from dropdown menu\n  // const handleChosenPlaceChange = (e) => {\n  //   setChosenPlaceId(e.target.value);\n  //   setChosenPlaceName(e.target.options[e.target.selectedIndex].dataset.name);\n  //   if (e.target.value !== \"\") {\n  //     // apiManager.getSingleType(\"places\", placeId).then((r) => {\n  //     //   apiManager.getSingleType(\"routes\", r.route_id).then((re) => {\n  //     //     // setRoutes([re]);\n  //     //     // setChosenRoute(re.name)\n  //     //   });\n  //     // });\n  //   } else {\n  //     getRoutes();\n  //   }\n  // };\n  // // // get and sort in alpha order all routes for the dropdown menus and pass them to the form log and graph\n  // const getRoutes = () => {\n  //   apiManager.getAllType(\"routes\").then((r) => {\n  //     r.sort((a, b) => a.name.localeCompare(b.name));\n  //     setRoutes(r);\n  //   });\n  // };\n  // // // set choseroute based on choice from dropdown menu on form log and graph\n  // const handleChosenRouteChange = (e) => {\n  //   const routeId = e.target.value;\n  //   setChosenRoute(routeId);\n  //   setChosenPlaceId(\"\");\n  //   setChosenPlaceName(\"\");\n  //   apiManager.getAllType(\"places\").then((r) => {\n  //     if (routeId !== \"\") {\n  //       setPlaces(\n  //         r\n  //           .filter((each) => each.route.name === routeId)\n  //           .sort((a, b) => a.name.localeCompare(b.name))\n  //       );\n  //     } else {\n  //       setPlaces(r.sort((a, b) => a.name.localeCompare(b.name)));\n  //     }\n  //   });\n  // };\n  // // get and sort in alpha order all shuttles for the dropdown menus\n  // const getShuttles = () => {\n  //   apiManager.getAllType(\"shuttles\").then((r) => {\n  //     r.sort((a, b) => a.name.localeCompare(b.name));\n  //     setShuttles(r);\n  //   });\n  // };\n  // // set chosenShuttleId based on choice from dropdown menu\n  // const handleChosenShuttleChange = (e) => {\n  //   setChosenShuttleId(e.target.value);\n  //   setChosenShuttleName(e.target.options[e.target.selectedIndex].dataset.name);\n  // };\n  // // get all entries then find unique dates for the dropdown menus\n  // const getEntries = () => {\n  //   apiManager.getAllType(\"entries\").then((r) => {\n  //     r.sort((a, b) => a.date.localeCompare(b.date));\n  //     setEntries(r);\n  //   });\n  // };\n  // const uniqueDates = [...new Set(entries.map((entry) => entry.date))];\n  // // set chosenDate based on choice from dropdown menu\n  // const handleChosenDateChange = (e) => {\n  //   const dateId = e.target.value;\n  //   setChosenDate(dateId);\n  // };\n  // useEffect(() => {\n  //   getShuttles();\n  //   getEntries();\n  //   getPlaces();\n  //   getRoutes();\n  // }, []);\n\n\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, hasUser ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, Object.assign({\n    hasUser: hasUser,\n    clearUser: clearUser,\n    mode: mode,\n    handleModeChange: handleModeChange\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(EntryForm, Object.assign({\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      chosenPlaceId: chosenPlaceId,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/edit/form/:entryId(\\\\d+)\",\n    render: props =>\n    /*#__PURE__*/\n    // hasUser ? (\n    React.createElement(EntryEditForm, Object.assign({\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      chosenPlaceId: chosenPlaceId,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    })) // ) : (\n    //   <Redirect to=\"/login\" />\n    // )\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/log\",\n    render: props =>\n    /*#__PURE__*/\n    // hasUser ? (\n    React.createElement(Log, Object.assign({\n      getEntries: getEntries,\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenPlaceId: chosenPlaceId,\n      chosenPlaceName: chosenPlaceName,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenShuttleName: chosenShuttleName,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    })) // ) : (\n    //   <Redirect to=\"/login\" />\n    // )\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/graph\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(RouteReport, Object.assign({\n      getEntries: getEntries,\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenPlaceId: chosenPlaceId,\n      chosenPlaceName: chosenPlaceName,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenShuttleName: chosenShuttleName,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"manager\"), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/driver/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/shuttle/form\",\n    render: () => hasUser ? /*#__PURE__*/React.createElement(ShuttleForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/route/form\",\n    render: () => hasUser ? /*#__PURE__*/React.createElement(RouteForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/driver/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(DriverForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 55\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/assignment/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(AssignmentForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/vehicle/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(VehicleForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Login, Object.assign({\n      setUserToken: setUserToken\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Register, Object.assign({\n      setUserToken: setUserToken\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default AppViews;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/appViews.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Redirect","NavBar","EventTranspoTracker","EventTranspoManager","Login","Register","EntryForm","EntryEditForm","apiManager","RouteReport","Log","AppViews","props","isAuthenticated","sessionStorage","getItem","hasUser","setHasUser","setUserToken","resp","setItem","token","user_id","clearUser","clear","mode","setMode","handleModeChange","places","routes","shuttles","chosenPlaceId","chosenRoute","chosenShuttleId","chosenDate","handleChosenPlaceChange","handleChosenRouteChange","handleChosenShuttleChange","handleChosenDateChange","getEntries","entries","uniqueDates","chosenPlaceName","chosenShuttleName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./navbar\";\nimport EventTranspoTracker from \"./eventTranspoTracker\";\nimport EventTranspoManager from \"./eventTranspoManager\";\nimport Login from \"./auth/login\";\nimport Register from \"./auth/register\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport Log from \"./reports/log\";\nimport \"./styles.css\";\n\nconst AppViews = (props) => {\n  const isAuthenticated = () => sessionStorage.getItem(\"token\") !== null;\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUserToken = (resp) => {\n    sessionStorage.setItem(\"token\", resp.token);\n    sessionStorage.setItem(\"userID\", resp.user_id);\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [mode, setMode] = useState(true);\n  const handleModeChange = () => {\n    setMode(!mode);\n  };\n\n  // places routes and shuttles fill the dropdown menus\n  // places filter based on chosenRoute\n  // chosenPlace chosenRoute and chosenShuttle are the choices made from the dropdowns\n  // const [places, setPlaces] = useState([]);\n  // const [routes, setRoutes] = useState([]);\n  // const [shuttles, setShuttles] = useState([]);\n  // const [entries, setEntries] = useState([]);\n  // const [chosenPlaceId, setChosenPlaceId] = useState(\"\");\n  // const [chosenPlaceName, setChosenPlaceName] = useState(\"\");\n  // const [chosenRoute, setChosenRoute] = useState(\"\");\n  // const [chosenShuttleId, setChosenShuttleId] = useState(\"\");\n  // const [chosenShuttleName, setChosenShuttleName] = useState(\"\");\n  // const [chosenDate, setChosenDate] = useState(\"\");\n\n  // // get and sort in alpha order all places for the dropdown menus\n  // const getPlaces = () => {\n  //   apiManager.getAllType(\"places\").then((r) => {\n  //     r.sort((a, b) => a.name.localeCompare(b.name));\n  //     setPlaces(r);\n  //   });\n  // };\n\n  // // set chosePlace based on choice from dropdown menu\n  // const handleChosenPlaceChange = (e) => {\n  //   setChosenPlaceId(e.target.value);\n  //   setChosenPlaceName(e.target.options[e.target.selectedIndex].dataset.name);\n  //   if (e.target.value !== \"\") {\n  //     // apiManager.getSingleType(\"places\", placeId).then((r) => {\n  //     //   apiManager.getSingleType(\"routes\", r.route_id).then((re) => {\n  //     //     // setRoutes([re]);\n  //     //     // setChosenRoute(re.name)\n  //     //   });\n  //     // });\n  //   } else {\n  //     getRoutes();\n  //   }\n  // };\n\n  // // // get and sort in alpha order all routes for the dropdown menus and pass them to the form log and graph\n  // const getRoutes = () => {\n  //   apiManager.getAllType(\"routes\").then((r) => {\n  //     r.sort((a, b) => a.name.localeCompare(b.name));\n  //     setRoutes(r);\n  //   });\n  // };\n\n  // // // set choseroute based on choice from dropdown menu on form log and graph\n  // const handleChosenRouteChange = (e) => {\n  //   const routeId = e.target.value;\n  //   setChosenRoute(routeId);\n  //   setChosenPlaceId(\"\");\n  //   setChosenPlaceName(\"\");\n  //   apiManager.getAllType(\"places\").then((r) => {\n  //     if (routeId !== \"\") {\n  //       setPlaces(\n  //         r\n  //           .filter((each) => each.route.name === routeId)\n  //           .sort((a, b) => a.name.localeCompare(b.name))\n  //       );\n  //     } else {\n  //       setPlaces(r.sort((a, b) => a.name.localeCompare(b.name)));\n  //     }\n  //   });\n  // };\n\n  // // get and sort in alpha order all shuttles for the dropdown menus\n  // const getShuttles = () => {\n  //   apiManager.getAllType(\"shuttles\").then((r) => {\n  //     r.sort((a, b) => a.name.localeCompare(b.name));\n  //     setShuttles(r);\n  //   });\n  // };\n\n  // // set chosenShuttleId based on choice from dropdown menu\n  // const handleChosenShuttleChange = (e) => {\n  //   setChosenShuttleId(e.target.value);\n  //   setChosenShuttleName(e.target.options[e.target.selectedIndex].dataset.name);\n  // };\n\n  // // get all entries then find unique dates for the dropdown menus\n  // const getEntries = () => {\n  //   apiManager.getAllType(\"entries\").then((r) => {\n  //     r.sort((a, b) => a.date.localeCompare(b.date));\n  //     setEntries(r);\n  //   });\n  // };\n  // const uniqueDates = [...new Set(entries.map((entry) => entry.date))];\n\n  // // set chosenDate based on choice from dropdown menu\n  // const handleChosenDateChange = (e) => {\n  //   const dateId = e.target.value;\n  //   setChosenDate(dateId);\n  // };\n\n  // useEffect(() => {\n  //   getShuttles();\n  //   getEntries();\n  //   getPlaces();\n  //   getRoutes();\n  // }, []);\n\n  return (\n    <BrowserRouter>\n      <>\n        {hasUser ? (\n          <>\n            <NavBar\n              hasUser={hasUser}\n              clearUser={clearUser}\n              mode={mode}\n              handleModeChange={handleModeChange}\n              {...props}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Redirect to=\"/entry/form\" />}\n            />\n            <Route\n              exact\n              path=\"/entry/form\"\n              render={(props) =>\n                hasUser ? (\n                  <EntryForm\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/entry/edit/form/:entryId(\\d+)\"\n              render={\n                (props) => (\n                  // hasUser ? (\n                  <EntryEditForm\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                )\n                // ) : (\n                //   <Redirect to=\"/login\" />\n                // )\n              }\n            />\n            <Route\n              exact\n              path=\"/log\"\n              render={\n                (props) => (\n                  // hasUser ? (\n                  <Log\n                    getEntries={getEntries}\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    entries={entries}\n                    uniqueDates={uniqueDates}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenPlaceName={chosenPlaceName}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenShuttleName={chosenShuttleName}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                )\n                // ) : (\n                //   <Redirect to=\"/login\" />\n                // )\n              }\n            />\n            <Route\n              exact\n              path=\"/graph\"\n              render={(props) =>\n                hasUser ? (\n                  <RouteReport\n                    getEntries={getEntries}\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    entries={entries}\n                    uniqueDates={uniqueDates}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenPlaceName={chosenPlaceName}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenShuttleName={chosenShuttleName}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <div>manager</div>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Redirect to=\"/driver/form\" />}\n            />\n            <Route\n              exact\n              path=\"/shuttle/form\"\n              render={() =>\n                hasUser ? <ShuttleForm /> : <Redirect to=\"/login\" />\n              }\n            />\n            <Route\n              exact\n              path=\"/route/form\"\n              render={() =>\n                hasUser ? <RouteForm /> : <Redirect to=\"/login\" />\n              }\n            />\n            <Route\n              exact\n              path=\"/driver/form\"\n              render={(props) =>\n                hasUser ? <DriverForm {...props} /> : <Redirect to=\"/login\" />\n              }\n            />\n            <Route\n              exact\n              path=\"/assignment/form\"\n              render={(props) =>\n                hasUser ? (\n                  <AssignmentForm {...props} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/vehicle/form\"\n              render={(props) =>\n                hasUser ? <VehicleForm {...props} /> : <Redirect to=\"/login\" />\n              }\n            />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) =>\n                hasUser ? (\n                  <Redirect to=\"/entry/form\" />\n                ) : (\n                  <Login setUserToken={setUserToken} {...props} />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={(props) =>\n                hasUser ? (\n                  <Redirect to=\"/entry/form\" />\n                ) : (\n                  <Register setUserToken={setUserToken} {...props} />\n                )\n              }\n            />\n          </>\n        )}\n      </>\n    </BrowserRouter>\n  );\n};\n\nexport default AppViews;\n"]},"metadata":{},"sourceType":"module"}