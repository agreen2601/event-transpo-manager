{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/EntryForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\n\nconst EntryForm = props => {\n  const [entry, setEntry] = useState({\n    created_at: \"\",\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    event_id: 1,\n    location_id: \"\",\n    route_id: 1,\n    user_id: 1\n  });\n  const [locations, setLocations] = useState([]);\n\n  const handleEntryChange = e => {\n    const stateToChange = { ...entry\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const token = sessionStorage.getItem(\"token\");\n    apiManager.postEntry(token, entry).then(() => {\n      props.history.push({\n        pathname: `/entry/form`\n      });\n    });\n  };\n\n  useEffect(() => {\n    apiManager.getAllLocations().then(locations => locations.sort((a, b) => a.name.localeCompare(b.name))).then(setLocations);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-form-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"event_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"New Event Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"event_form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"created_at\",\n    label: \"DateTime\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"number\",\n    id: \"attendee_count\",\n    label: \"Attendee Count\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"vehicle_number\",\n    label: \"Vehicle Number\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Location: \"), /*#__PURE__*/React.createElement(Select, {\n    id: \"location_id\",\n    native: true,\n    onChange: handleEntryChange,\n    fullWidth: true,\n    required: true,\n    label: \"Image URL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Choose Item\"), locations ? locations.map(location => /*#__PURE__*/React.createElement(\"option\", {\n    key: location.id,\n    value: location.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, location.name)) : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    content: \"Submit Entry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })))));\n}; // const EntryForm = () => {\n//     return (\n//     <div>Entry Form</div>\n//     )\n// }\n\n\nexport default EntryForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/EntryForm.js"],"names":["React","useState","useEffect","Grid","TextField","InputLabel","Select","apiManager","EntryForm","props","entry","setEntry","created_at","attendee_count","vehicle_number","event_id","location_id","route_id","user_id","locations","setLocations","handleEntryChange","e","stateToChange","target","id","value","handleSubmit","preventDefault","token","sessionStorage","getItem","postEntry","then","history","push","pathname","getAllLocations","sort","a","b","name","localeCompare","map","location"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\n\nconst EntryForm = (props) => {\n  const [entry, setEntry] = useState({\n    created_at: \"\",\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    event_id: 1,\n    location_id: \"\",\n    route_id: 1,\n    user_id: 1,\n  });\n  const [locations, setLocations] = useState([]);\n\n  const handleEntryChange = (e) => {\n    const stateToChange = { ...entry };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const token = sessionStorage.getItem(\"token\");\n    apiManager.postEntry(token, entry).then(() => {\n      props.history.push({\n        pathname: `/entry/form`,\n      });\n    });\n  };\n\n  useEffect(() => {\n    apiManager\n      .getAllLocations()\n      .then((locations) =>\n        locations.sort((a, b) => a.name.localeCompare(b.name))\n      )\n      .then(setLocations);\n  }, []);\n\n  return (\n    <>\n      <div className=\"event-form-page\">\n        <h1 className=\"event_header\">New Event Form</h1>\n        <form className=\"event_form\" onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                required\n                id=\"created_at\"\n                label=\"DateTime\"\n                fullWidth\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <TextField\n                required\n                type=\"number\"\n                id=\"attendee_count\"\n                label=\"Attendee Count\"\n                fullWidth\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <TextField\n                required\n                id=\"vehicle_number\"\n                label=\"Vehicle Number\"\n                fullWidth\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid>\n              <InputLabel htmlFor=\"age-native-simple\">Location: </InputLabel>\n              <Select\n                id=\"location_id\"\n                native\n                onChange={handleEntryChange}\n                fullWidth\n                required\n                label=\"Image URL\"\n              >\n                <option aria-label=\"None\" value=\"\">\n                  Choose Item\n                </option>\n                {locations ? (\n                  locations.map((location) => (\n                    <option key={location.id} value={location.id}>\n                      {location.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <button type=\"submit\" content=\"Submit Entry\"></button>\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\n// const EntryForm = () => {\n//     return (\n//     <div>Entry Form</div>\n//     )\n// }\n\nexport default EntryForm;\n"]},"metadata":{},"sourceType":"module"}