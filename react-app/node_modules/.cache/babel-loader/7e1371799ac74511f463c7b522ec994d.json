{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/entryForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\"; // \"places\" and \"shuttles\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon place work together)\n\nconst EntryForm = props => {\n  const places = props.places;\n  const routes = props.routes;\n  const shuttles = props.shuttles;\n  const dates = props.dates;\n  const chosenPlaceId = props.chosenPlaceId;\n  const chosenRoute = props.chosenRoute;\n  const chosenShuttleId = props.chosenShuttleId;\n  const chosenDate = props.chosenDate;\n  const handleChosenPlaceChange = props.handleChosenPlaceChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const handleChosenShuttleChange = props.handleChosenShuttleChange;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const [entry, setEntry] = useState({\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    time: moment().format(\"HH:mm\")\n  }); // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n\n  entry.place_id = chosenPlaceId;\n  entry.shuttle_id = chosenShuttleId; // entry.date = chosenDate;\n  // dates.map((each) => console.log(each.date));\n  // console.log(moment().format(\"YYYY-MM-DD\"));\n  // dates.filter((each) =>\n  //   console.log(each.date === moment().format(\"YYYY-MM-DD\"))\n  // );\n\n  const today = dates.find(each => each.date === moment().format(\"YYYY-MM-DD\"));\n\n  if (today == undefined) {\n    console.log(\"undefined\");\n  } else {\n    console.log(today.date);\n  } // useEffect(() => {\n  //   getToday();\n  // }, []);\n  // update state of entry upon form field change\n\n\n  const handleEntryChange = e => {\n    const stateToChange = { ...entry\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  }; // post entry, reset attendee count and vehicle number to empty \"\", provide user \"success\" alert\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isChecked === false) {\n      entry.date = moment().format(\"YYYY-MM-DD\");\n      entry.time = moment().format(\"HH:mm\");\n    } else {\n      entry.date = chosenDate;\n    }\n\n    setTimeout(() => {\n      apiManager.postType(\"entries\", entry).then(() => {\n        document.getElementById(\"attendee_count\").value = \"\";\n        document.getElementById(\"vehicle_number\").value = \"\";\n        setEntry({\n          attendee_count: \"\",\n          vehicle_number: \"\",\n          time: moment().format(\"HH:mm\")\n        });\n      });\n    }, 100);\n    alert(\"Success!\");\n    console.log(entry);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Entry Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Shuttle:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"shuttle_id\",\n    native: true,\n    onChange: handleChosenShuttleChange,\n    fullWidth: true,\n    required: true,\n    value: chosenShuttleId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Choose Shuttle\"), shuttles ? shuttles.map(shuttle => /*#__PURE__*/React.createElement(\"option\", {\n    key: shuttle.id,\n    value: parseInt(shuttle.id),\n    \"data-name\": shuttle.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, shuttle.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"routeId\",\n    native: true,\n    onChange: handleChosenRouteChange,\n    fullWidth: true,\n    value: chosenRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Choose Route\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"place_id\",\n    native: true,\n    onChange: handleChosenPlaceChange,\n    fullWidth: true,\n    required: true,\n    value: chosenPlaceId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Choose Location\"), places ? places.map(place => /*#__PURE__*/React.createElement(\"option\", {\n    key: place.id,\n    value: parseInt(place.id),\n    \"data-name\": place.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, place.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Attendee Count:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"number\",\n    id: \"attendee_count\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Vehicle Number:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"vehicle_number\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isChecked,\n      onChange: handleIsCheckedChange,\n      name: \"checkedA\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }),\n    label: \"NOT LIVE? Click if not live to input past date and/or time.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  })), isChecked === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"date_id\",\n    native: true,\n    onChange: handleChosenPlaceChange,\n    fullWidth: true,\n    required: true,\n    value: chosenDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, \"Choose Date\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: parseInt(date.id),\n    \"data-name\": date.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 23\n    }\n  }, date.date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    type: \"time\",\n    fullWidth: true,\n    value: entry.time,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default EntryForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/entryForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Select","Typography","FormControlLabel","Checkbox","apiManager","moment","EntryForm","props","places","routes","shuttles","dates","chosenPlaceId","chosenRoute","chosenShuttleId","chosenDate","handleChosenPlaceChange","handleChosenRouteChange","handleChosenShuttleChange","handleChosenDateChange","entry","setEntry","attendee_count","vehicle_number","time","format","place_id","shuttle_id","today","find","each","date","undefined","console","log","handleEntryChange","e","stateToChange","target","id","value","isChecked","setIsChecked","handleIsCheckedChange","handleSubmit","preventDefault","setTimeout","postType","then","document","getElementById","alert","map","shuttle","parseInt","name","route","description","place"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACI,KAApB;AACA,QAAMC,aAAa,GAAGL,KAAK,CAACK,aAA5B;AACA,QAAMC,WAAW,GAAGN,KAAK,CAACM,WAA1B;AACA,QAAMC,eAAe,GAAGP,KAAK,CAACO,eAA9B;AACA,QAAMC,UAAU,GAAGR,KAAK,CAACQ,UAAzB;AACA,QAAMC,uBAAuB,GAAGT,KAAK,CAACS,uBAAtC;AACA,QAAMC,uBAAuB,GAAGV,KAAK,CAACU,uBAAtC;AACA,QAAMC,yBAAyB,GAAGX,KAAK,CAACW,yBAAxC;AACA,QAAMC,sBAAsB,GAAGZ,KAAK,CAACY,sBAArC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC;AACjC4B,IAAAA,cAAc,EAAE,EADiB;AAEjCC,IAAAA,cAAc,EAAE,EAFiB;AAGjCC,IAAAA,IAAI,EAAEnB,MAAM,GAAGoB,MAAT,CAAgB,OAAhB;AAH2B,GAAD,CAAlC,CAb2B,CAmB3B;;AACAL,EAAAA,KAAK,CAACM,QAAN,GAAiBd,aAAjB;AACAQ,EAAAA,KAAK,CAACO,UAAN,GAAmBb,eAAnB,CArB2B,CAsB3B;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMc,KAAK,GAAGjB,KAAK,CAACkB,IAAN,CAAYC,IAAD,IACvBA,IAAI,CAACC,IAAL,KAAe1B,MAAM,GAAGoB,MAAT,CAAgB,YAAhB,CADH,CAAd;;AAGA,MAAIG,KAAK,IAAII,SAAb,EAAwB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,IAAlB;AACD,GArC0B,CAuC3B;AACA;AACA;AAEA;;;AACA,QAAMI,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,aAAa,GAAG,EAAE,GAAGjB;AAAL,KAAtB;AACAiB,IAAAA,aAAa,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,CAAb,GAA6BH,CAAC,CAACE,MAAF,CAASE,KAAtC;AACAnB,IAAAA,QAAQ,CAACgB,aAAD,CAAR;AACD,GAJD;;AAMA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BhD,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMiD,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD,CAnD2B,CAuD3B;;;AACA,QAAMG,YAAY,GAAIR,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACS,cAAF;;AACA,QAAIJ,SAAS,KAAK,KAAlB,EAAyB;AACvBrB,MAAAA,KAAK,CAACW,IAAN,GAAa1B,MAAM,GAAGoB,MAAT,CAAgB,YAAhB,CAAb;AACAL,MAAAA,KAAK,CAACI,IAAN,GAAanB,MAAM,GAAGoB,MAAT,CAAgB,OAAhB,CAAb;AACD,KAHD,MAGO;AACLL,MAAAA,KAAK,CAACW,IAAN,GAAahB,UAAb;AACD;;AACD+B,IAAAA,UAAU,CAAC,MAAM;AACf1C,MAAAA,UAAU,CAAC2C,QAAX,CAAoB,SAApB,EAA+B3B,KAA/B,EAAsC4B,IAAtC,CAA2C,MAAM;AAC/CC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CV,KAA1C,GAAkD,EAAlD;AACAS,QAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CV,KAA1C,GAAkD,EAAlD;AACAnB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,cAAc,EAAE,EADT;AAEPC,UAAAA,cAAc,EAAE,EAFT;AAGPC,UAAAA,IAAI,EAAEnB,MAAM,GAAGoB,MAAT,CAAgB,OAAhB;AAHC,SAAD,CAAR;AAKD,OARD;AASD,KAVS,EAUP,GAVO,CAAV;AAWA0B,IAAAA,KAAK,CAAC,UAAD,CAAL;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD,GArBD;;AAuBA,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEwB,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAE1B,yBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAEJ,eANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,iBAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,EAWGJ,QAAQ,GACPA,QAAQ,CAAC0C,GAAT,CAAcC,OAAD,iBACX;AACE,IAAA,GAAG,EAAEA,OAAO,CAACd,EADf;AAEE,IAAA,KAAK,EAAEe,QAAQ,CAACD,OAAO,CAACd,EAAT,CAFjB;AAGE,iBAAWc,OAAO,CAACE,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,OAAO,CAACE,IALX,CADF,CADO,gBAWP,yCAtBJ,CAFF,CADF,eA6BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAEtC,uBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,KAAK,EAAEJ,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,EAUGJ,MAAM,GACLA,MAAM,CAAC2C,GAAP,CAAYI,KAAD,iBACT;AAAQ,IAAA,GAAG,EAAEA,KAAK,CAACjB,EAAnB;AAAuB,IAAA,KAAK,EAAEiB,KAAK,CAACD,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACD,IADT,OACgBC,KAAK,CAACC,WADtB,CADF,CADK,gBAOL,yCAjBJ,CAFF,CA7BF,eAoDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAEzC,uBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAEJ,aANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,iBAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,EAWGJ,MAAM,GACLA,MAAM,CAAC4C,GAAP,CAAYM,KAAD,iBACT;AACE,IAAA,GAAG,EAAEA,KAAK,CAACnB,EADb;AAEE,IAAA,KAAK,EAAEe,QAAQ,CAACI,KAAK,CAACnB,EAAP,CAFjB;AAGE,iBAAWmB,KAAK,CAACH,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGG,KAAK,CAACH,IALT,CADF,CADK,gBAWL,yCAtBJ,CAFF,CApDF,eAgFE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkB,GADlB,CADF,eAIE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,gBAHL;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,EAAEpB,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAhFF,eA4FE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkB,GADlB,CADF,eAIE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,QAAQ,EAAEA,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CA5FF,eAsGE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,OAAO,eACL,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEM,SADX;AAEE,MAAA,QAAQ,EAAEE,qBAFZ;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AASE,IAAA,KAAK,EAAC,6DATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtGF,EAmHGF,SAAS,KAAK,IAAd,gBACC,uDACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAEzB,uBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAED,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,iBAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EAWGJ,KAAK,GACJA,KAAK,CAACyC,GAAN,CAAWrB,IAAD,iBACR;AACE,IAAA,GAAG,EAAEA,IAAI,CAACQ,EADZ;AAEE,IAAA,KAAK,EAAEe,QAAQ,CAACvB,IAAI,CAACQ,EAAN,CAFjB;AAGE,iBAAWR,IAAI,CAACA,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,IAAI,CAACA,IALR,CADF,CADI,gBAWJ,yCAtBJ,CAFF,CADF,eA6BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAEX,KAAK,CAACI,IAJf;AAKE,IAAA,QAAQ,EAAEW,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA7BF,CADD,gBA0CC,yCA7JJ,CADF,eAiKE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAjKF,CAJF,CADF;AA8KD,CA7PD;;AA+PA,eAAe7B,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\n// \"places\" and \"shuttles\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon place work together)\nconst EntryForm = (props) => {\n  const places = props.places;\n  const routes = props.routes;\n  const shuttles = props.shuttles;\n  const dates = props.dates;\n  const chosenPlaceId = props.chosenPlaceId;\n  const chosenRoute = props.chosenRoute;\n  const chosenShuttleId = props.chosenShuttleId;\n  const chosenDate = props.chosenDate;\n  const handleChosenPlaceChange = props.handleChosenPlaceChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const handleChosenShuttleChange = props.handleChosenShuttleChange;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const [entry, setEntry] = useState({\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    time: moment().format(\"HH:mm\"),\n  });\n\n  // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n  entry.place_id = chosenPlaceId;\n  entry.shuttle_id = chosenShuttleId;\n  // entry.date = chosenDate;\n\n  // dates.map((each) => console.log(each.date));\n  // console.log(moment().format(\"YYYY-MM-DD\"));\n  // dates.filter((each) =>\n  //   console.log(each.date === moment().format(\"YYYY-MM-DD\"))\n  // );\n\n  const today = dates.find((each) =>\n    each.date === (moment().format(\"YYYY-MM-DD\"))\n  );\n  if (today == undefined) {\n    console.log(\"undefined\");\n  } else {\n    console.log(today.date);\n  }\n\n  // useEffect(() => {\n  //   getToday();\n  // }, []);\n\n  // update state of entry upon form field change\n  const handleEntryChange = (e) => {\n    const stateToChange = { ...entry };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  const [isChecked, setIsChecked] = useState(false);\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  // post entry, reset attendee count and vehicle number to empty \"\", provide user \"success\" alert\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isChecked === false) {\n      entry.date = moment().format(\"YYYY-MM-DD\");\n      entry.time = moment().format(\"HH:mm\");\n    } else {\n      entry.date = chosenDate;\n    }\n    setTimeout(() => {\n      apiManager.postType(\"entries\", entry).then(() => {\n        document.getElementById(\"attendee_count\").value = \"\";\n        document.getElementById(\"vehicle_number\").value = \"\";\n        setEntry({\n          attendee_count: \"\",\n          vehicle_number: \"\",\n          time: moment().format(\"HH:mm\"),\n        });\n      });\n    }, 100);\n    alert(\"Success!\");\n    console.log(entry);\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Entry Form\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Shuttle:</InputLabel>\n            <Select\n              id=\"shuttle_id\"\n              native\n              onChange={handleChosenShuttleChange}\n              fullWidth\n              required\n              value={chosenShuttleId}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Shuttle\n              </option>\n              {shuttles ? (\n                shuttles.map((shuttle) => (\n                  <option\n                    key={shuttle.id}\n                    value={parseInt(shuttle.id)}\n                    data-name={shuttle.name}\n                  >\n                    {shuttle.name}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Route:</InputLabel>\n            <Select\n              id=\"routeId\"\n              native\n              onChange={handleChosenRouteChange}\n              fullWidth\n              value={chosenRoute}\n            >\n              <option aria-label=\"None\" value=\"\">\n                Choose Route\n              </option>\n              {routes ? (\n                routes.map((route) => (\n                  <option key={route.id} value={route.name}>\n                    {route.name} {route.description}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Location:</InputLabel>\n            <Select\n              id=\"place_id\"\n              native\n              onChange={handleChosenPlaceChange}\n              fullWidth\n              required\n              value={chosenPlaceId}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Location\n              </option>\n              {places ? (\n                places.map((place) => (\n                  <option\n                    key={place.id}\n                    value={parseInt(place.id)}\n                    data-name={place.name}\n                  >\n                    {place.name}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">\n              Attendee Count:{\" \"}\n            </InputLabel>\n            <TextField\n              required\n              type=\"number\"\n              id=\"attendee_count\"\n              fullWidth\n              onChange={handleEntryChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">\n              Vehicle Number:{\" \"}\n            </InputLabel>\n            <TextField\n              id=\"vehicle_number\"\n              fullWidth\n              onChange={handleEntryChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isChecked}\n                  onChange={handleIsCheckedChange}\n                  name=\"checkedA\"\n                  color=\"primary\"\n                />\n              }\n              label=\"NOT LIVE? Click if not live to input past date and/or time.\"\n            />\n          </Grid>\n          {isChecked === true ? (\n            <>\n              <Grid item xs={12} md={3}>\n                <InputLabel>Location:</InputLabel>\n                <Select\n                  id=\"date_id\"\n                  native\n                  onChange={handleChosenPlaceChange}\n                  fullWidth\n                  required\n                  value={chosenDate}\n                >\n                  <option aria-label=\"None\" value=\"\" data-name=\"\">\n                    Choose Date\n                  </option>\n                  {dates ? (\n                    dates.map((date) => (\n                      <option\n                        key={date.id}\n                        value={parseInt(date.id)}\n                        data-name={date.date}\n                      >\n                        {date.date}\n                      </option>\n                    ))\n                  ) : (\n                    <></>\n                  )}\n                </Select>\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <InputLabel htmlFor=\"age-native-simple\">Time: </InputLabel>\n                <TextField\n                  id=\"time\"\n                  type=\"time\"\n                  fullWidth\n                  value={entry.time}\n                  onChange={handleEntryChange}\n                />\n              </Grid>\n            </>\n          ) : (\n            <></>\n          )}\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default EntryForm;\n"]},"metadata":{},"sourceType":"module"}