{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/logs/locationLog.js\";\nimport React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport apiManager from \"../api/apiManager\";\n\nconst LocationLog = props => {\n  const locations = props.locations;\n  const routes = props.routes;\n  const events = props.events;\n  const dates = props.uniqueDates;\n  const chosenLocation = props.chosenLocation;\n  const chosenRoute = props.chosenRoute;\n  const chosenEvent = props.chosenEvent;\n  const chosenDate = props.chosenDate;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const allEntries = props.entries;\n  const getEntries = props.getEntries;\n  allEntries.map(each => console.log(each.place_id)); // get entries based on dropdowns then filter\n\n  const filteredEntries = allEntries.filter(each1 => each1.event_id.toString().includes(chosenEvent));\n\n  if (chosenLocation !== \"\") {\n    filteredEntries.filter(each2 => each2.place_id === parseInt(chosenLocation));\n  } else {\n    filteredEntries.filter(each3 => each3.place.route.name.includes(chosenRoute)).filter(each4 => each4.date.includes(chosenDate)).sort((a, b) => a.time.localeCompare(b.time)).sort((a, b) => a.date.localeCompare(b.date));\n  }\n\n  if (filteredEntries.length !== 0) {\n    console.log(\"location\", chosenLocation, filteredEntries[0].place_id);\n    console.log(\"route\", chosenRoute);\n    console.log(\"event\", chosenEvent);\n    console.log(\"date\", chosenDate);\n  }\n\n  let totalAttendeeCount = 0;\n\n  if (filteredEntries.length !== 0) {\n    totalAttendeeCount = filteredEntries.map(entry => entry.attendee_count).reduce((accumulator, runningTotal) => accumulator + runningTotal);\n  }\n\n  const deleteThisEntry = id => {\n    const check = window.confirm(\"Are you sure you want to delete this entry? Deletion cannot be undone.\");\n\n    if (check === true) {\n      apiManager.deleteEntry(id).then(() => {\n        getEntries();\n      });\n    }\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Location Logs\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-downs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"dateId\",\n    native: true,\n    onChange: handleChosenDateChange,\n    fullWidth: true,\n    required: true,\n    value: chosenDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"All Dates\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date,\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Event:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"eventId\",\n    native: true,\n    onChange: handleChosenEventChange,\n    fullWidth: true,\n    required: true,\n    value: chosenEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"All Events\"), events ? events.map(event => /*#__PURE__*/React.createElement(\"option\", {\n    key: event.id,\n    value: parseInt(event.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, event.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"routeId\",\n    native: true,\n    onChange: handleChosenRouteChange,\n    fullWidth: true,\n    required: true,\n    value: chosenRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"All Routes\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"placeId\",\n    native: true,\n    onChange: handleChosenLocationChange,\n    fullWidth: true,\n    required: true,\n    value: chosenLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"All Locations\"), locations ? locations.map(place => /*#__PURE__*/React.createElement(\"option\", {\n    key: place.id,\n    value: parseInt(place.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, place.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, totalAttendeeCount, \" attendees moved in \", filteredEntries.length, \" trips.\"), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, \"Vehicle #\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Pax\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"Event\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, \"Route\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"Entered By\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, filteredEntries.map(entry => /*#__PURE__*/React.createElement(TableRow, {\n    key: entry.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"entry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, entry.time.slice(0, -3)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, entry.vehicle_number), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, entry.attendee_count), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, entry.date.slice(5)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, entry.event.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, entry.place.route.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, entry.place.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, entry.user.first_name, \" \", entry.user.last_name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, parseInt(window.sessionStorage.getItem(\"userID\")) === entry.user_id ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"action-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    onClick: () => props.history.push(`/entry/edit/form/${entry.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"action-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlinedIcon, {\n    onClick: () => deleteThisEntry(entry.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }))) : null)))))));\n};\n\nexport default LocationLog;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/logs/locationLog.js"],"names":["React","useEffect","Grid","InputLabel","Select","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","DeleteOutlinedIcon","EditIcon","apiManager","LocationLog","props","locations","routes","events","dates","uniqueDates","chosenLocation","chosenRoute","chosenEvent","chosenDate","handleChosenLocationChange","handleChosenRouteChange","handleChosenEventChange","handleChosenDateChange","allEntries","entries","getEntries","map","each","console","log","place_id","filteredEntries","filter","each1","event_id","toString","includes","each2","parseInt","each3","place","route","name","each4","date","sort","a","b","time","localeCompare","length","totalAttendeeCount","entry","attendee_count","reduce","accumulator","runningTotal","deleteThisEntry","id","check","window","confirm","deleteEntry","then","event","description","slice","vehicle_number","user","first_name","last_name","sessionStorage","getItem","user_id","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport apiManager from \"../api/apiManager\";\n\nconst LocationLog = (props) => {\n  const locations = props.locations;\n  const routes = props.routes;\n  const events = props.events;\n  const dates = props.uniqueDates;\n  const chosenLocation = props.chosenLocation;\n  const chosenRoute = props.chosenRoute;\n  const chosenEvent = props.chosenEvent;\n  const chosenDate = props.chosenDate;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const allEntries = props.entries;\n  const getEntries = props.getEntries;\n\n  allEntries.map((each) => console.log(each.place_id));\n\n  // get entries based on dropdowns then filter\n  const filteredEntries = allEntries.filter((each1) =>\n    each1.event_id.toString().includes(chosenEvent)\n  );\n  if (chosenLocation !== \"\"){\n    filteredEntries.filter(\n        (each2) => each2.place_id === parseInt(chosenLocation))\n    } else {\n      filteredEntries\n        .filter((each3) => each3.place.route.name.includes(chosenRoute))\n        .filter((each4) => each4.date.includes(chosenDate))\n        .sort((a, b) => a.time.localeCompare(b.time))\n        .sort((a, b) => a.date.localeCompare(b.date));\n    }\n\n  if (filteredEntries.length !== 0) {\n    console.log(\n      \"location\",\n      chosenLocation,\n      filteredEntries[0].place_id\n    );\n    console.log(\"route\", chosenRoute);\n    console.log(\"event\", chosenEvent);\n    console.log(\"date\", chosenDate);\n  }\n\n  let totalAttendeeCount = 0;\n  if (filteredEntries.length !== 0) {\n    totalAttendeeCount = filteredEntries\n      .map((entry) => entry.attendee_count)\n      .reduce((accumulator, runningTotal) => accumulator + runningTotal);\n  }\n\n  const deleteThisEntry = (id) => {\n    const check = window.confirm(\n      \"Are you sure you want to delete this entry? Deletion cannot be undone.\"\n    );\n    if (check === true) {\n      apiManager.deleteEntry(id).then(() => {\n        getEntries();\n      });\n    }\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\">\n        Location Logs\n      </Typography>\n      <div className=\"drop-downs\">\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Date:</InputLabel>\n            <Select\n              id=\"dateId\"\n              native\n              onChange={handleChosenDateChange}\n              fullWidth\n              required\n              value={chosenDate}\n            >\n              <option aria-label=\"None\" value=\"\">\n                All Dates\n              </option>\n              {dates ? (\n                dates.map((date) => (\n                  <option key={date} value={date}>\n                    {date}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Event:</InputLabel>\n            <Select\n              id=\"eventId\"\n              native\n              onChange={handleChosenEventChange}\n              fullWidth\n              required\n              value={chosenEvent}\n            >\n              <option aria-label=\"None\" value=\"\">\n                All Events\n              </option>\n              {events ? (\n                events.map((event) => (\n                  <option key={event.id} value={parseInt(event.id)}>\n                    {event.name}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Route:</InputLabel>\n            <Select\n              id=\"routeId\"\n              native\n              onChange={handleChosenRouteChange}\n              fullWidth\n              required\n              value={chosenRoute}\n            >\n              <option aria-label=\"None\" value=\"\">\n                All Routes\n              </option>\n              {routes ? (\n                routes.map((route) => (\n                  <option key={route.id} value={route.name}>\n                    {route.name} {route.description}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Location:</InputLabel>\n            <Select\n              id=\"placeId\"\n              native\n              onChange={handleChosenLocationChange}\n              fullWidth\n              required\n              value={chosenLocation}\n            >\n              <option aria-label=\"None\" value=\"\">\n                All Locations\n              </option>\n              {locations ? (\n                locations.map((place) => (\n                  <option key={place.id} value={parseInt(place.id)}>\n                    {place.name}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n        </Grid>\n      </div>\n      <Typography variant=\"h6\">\n        {totalAttendeeCount} attendees moved in {filteredEntries.length} trips.\n      </Typography>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Time</TableCell>\n              <TableCell align=\"right\">Vehicle #</TableCell>\n              <TableCell align=\"right\">Pax</TableCell>\n              {/* {chosenDate === \"\" ? ( */}\n              <TableCell align=\"right\">Date</TableCell>\n              {/* ) : null} */}\n              {/* {chosenEvent === \"\" ? ( */}\n              <TableCell align=\"right\">Event</TableCell>\n              {/* ) : null} */}\n              {/* {chosenRoute === \"\" ? ( */}\n              <TableCell align=\"right\">Route</TableCell>\n              {/* // ) : null} */}\n              {/* {chosenLocation === \"\" ? ( */}\n              <TableCell align=\"right\">Location</TableCell>\n              {/* ) : null} */}\n              <TableCell align=\"right\">Entered By</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredEntries.map((entry) => (\n              <TableRow key={entry.id}>\n                <TableCell component=\"th\" scope=\"entry\">\n                  {entry.time.slice(0, -3)}\n                </TableCell>\n                <TableCell align=\"right\">{entry.vehicle_number}</TableCell>\n                <TableCell align=\"right\">{entry.attendee_count}</TableCell>\n                {/* {chosenDate === \"\" ? ( */}\n                <TableCell align=\"right\">{entry.date.slice(5)}</TableCell>\n                {/* ) : null} */}\n                {/* {chosenEvent === \"\" ? ( */}\n                <TableCell align=\"right\">{entry.event.name}</TableCell>\n                {/* ) : null} */}\n                {/* {chosenRoute === \"\" ? ( */}\n                <TableCell align=\"right\">{entry.place.route.name}</TableCell>\n                {/* ) : null} */}\n                {/* {chosenLocation === \"\" ? ( */}\n                <TableCell align=\"right\">{entry.place.name}</TableCell>\n                {/* ) : null} */}\n                <TableCell align=\"right\">\n                  {entry.user.first_name} {entry.user.last_name}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {parseInt(window.sessionStorage.getItem(\"userID\")) ===\n                  entry.user_id ? (\n                    <>\n                      <span className=\"action-icon\">\n                        <EditIcon\n                          onClick={() =>\n                            props.history.push(`/entry/edit/form/${entry.id}`)\n                          }\n                        />\n                      </span>\n                      <span className=\"action-icon\">\n                        <DeleteOutlinedIcon\n                          onClick={() => deleteThisEntry(entry.id)}\n                        />\n                      </span>\n                    </>\n                  ) : null}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default LocationLog;\n"]},"metadata":{},"sourceType":"module"}