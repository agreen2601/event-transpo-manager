{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/testA.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst TestA = props => {\n  const entries = props.filteredEntries; // newnew\n\n  const xD = entries.map(entry => entry.time.slice(0, 4));\n  const yD = entries.map(entry => entry.attendee_count);\n  const combinedA = [];\n\n  for (let i = 0; i < entries.length; i++) {\n    combinedA.push({\n      x: `${xD[i]}0`,\n      y: yD[i]\n    });\n  }\n\n  console.log(combinedA);\n  const timeSpacedA = [];\n\n  for (let j = 9; j < 17; j++) {\n    for (let i = 0; i < 6; i++) {\n      timeSpacedA.push(`${j}:${i}`);\n    }\n  }\n\n  console.log(timeSpacedA); // OG\n  //   const timesNumberfied = entries.map((entry) =>\n  //   parseFloat(\n  //     `${entry.time.split(\":\")[0]}.${\n  //       (entry.time.split(\":\")[1] / 60).toString().split(\".\")[1]\n  //     }`.slice(0, 5)\n  //   )\n  // );\n  //   const xData = timesNumberfied;\n  //   const yData = entries.map((entry) => entry.attendee_count);\n  //   const combined = [];\n  //   for (let i = 0; i < entries.length; i++) {\n  //     const x = xData[i];\n  //     const y = yData[i];\n  //     const both = { x: x, y: y };\n  //     combined.push(both);\n  //   }\n  // for (\n  //   let j = parseInt(xData[xData.length - 1].toString().split(\".\")[0]);\n  //   j < parseInt(xData[0].toString().split(\".\")[0]) + 1;\n  //   j++\n  // )\n  // const timeSpaced = [];\n  // for (let j = 9; j = 16; j++) {\n  //   for (let i = 0; i < 60; i++) {\n  //     if (i % 60 !== 0) {\n  //       timeSpaced.push(parseFloat(`${j}.${(i / 60).toString().slice(2, 4)}`));\n  //     } else {\n  //       timeSpaced.push(parseFloat(`${j}.${i / 60}`));\n  //     }\n  //   }\n  // }\n  // function barValue(x) {\n  //   for (let each of combinedA) {\n  //     // console.log(x, each.x, each.y);\n  //     if (x === each.x) {\n  //       return each.y;\n  //     }\n  //   }\n  //   return 0;\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"test\"));\n};\n\nexport default TestA;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/testA.js"],"names":["React","Bar","TestA","props","entries","filteredEntries","xD","map","entry","time","slice","yD","attendee_count","combinedA","i","length","push","x","y","console","log","timeSpacedA","j"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,OAAO,GAAGD,KAAK,CAACE,eAAtB,CADuB,CAGvB;;AACA,QAAMC,EAAE,GAAGF,OAAO,CAACG,GAAR,CAAaC,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAvB,CAAX;AACA,QAAMC,EAAE,GAAGP,OAAO,CAACG,GAAR,CAAaC,KAAD,IAAWA,KAAK,CAACI,cAA7B,CAAX;AACA,QAAMC,SAAS,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,OAAO,CAACW,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCD,IAAAA,SAAS,CAACG,IAAV,CAAe;AAAEC,MAAAA,CAAC,EAAG,GAAEX,EAAE,CAACQ,CAAD,CAAI,GAAd;AAAkBI,MAAAA,CAAC,EAAEP,EAAE,CAACG,CAAD;AAAvB,KAAf;AACD;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAEA,QAAMQ,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BO,MAAAA,WAAW,CAACL,IAAZ,CAAkB,GAAEM,CAAE,IAAGR,CAAE,EAA3B;AACD;AACF;;AAEDK,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,EAnBuB,CAqBvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AA2CD,CA9GD;;AAgHA,eAAenB,KAAf","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst TestA = (props) => {\n  const entries = props.filteredEntries;\n\n  // newnew\n  const xD = entries.map((entry) => entry.time.slice(0, 4));\n  const yD = entries.map((entry) => entry.attendee_count);\n  const combinedA = [];\n  for (let i = 0; i < entries.length; i++) {\n    combinedA.push({ x: `${xD[i]}0`, y: yD[i] });\n  }\n  console.log(combinedA)\n\n  const timeSpacedA = [];\n  for (let j = 9; j < 17; j++) {\n    for (let i = 0; i < 6; i++) {\n      timeSpacedA.push(`${j}:${i}`);\n    }\n  }\n\n  console.log(timeSpacedA);\n\n  // OG\n//   const timesNumberfied = entries.map((entry) =>\n//   parseFloat(\n//     `${entry.time.split(\":\")[0]}.${\n//       (entry.time.split(\":\")[1] / 60).toString().split(\".\")[1]\n//     }`.slice(0, 5)\n//   )\n// );\n\n//   const xData = timesNumberfied;\n//   const yData = entries.map((entry) => entry.attendee_count);\n//   const combined = [];\n//   for (let i = 0; i < entries.length; i++) {\n//     const x = xData[i];\n//     const y = yData[i];\n//     const both = { x: x, y: y };\n//     combined.push(both);\n//   }\n\n  // for (\n  //   let j = parseInt(xData[xData.length - 1].toString().split(\".\")[0]);\n  //   j < parseInt(xData[0].toString().split(\".\")[0]) + 1;\n  //   j++\n  // )\n\n  // const timeSpaced = [];\n  // for (let j = 9; j = 16; j++) {\n  //   for (let i = 0; i < 60; i++) {\n  //     if (i % 60 !== 0) {\n  //       timeSpaced.push(parseFloat(`${j}.${(i / 60).toString().slice(2, 4)}`));\n  //     } else {\n  //       timeSpaced.push(parseFloat(`${j}.${i / 60}`));\n  //     }\n  //   }\n  // }\n\n  // function barValue(x) {\n  //   for (let each of combinedA) {\n  //     // console.log(x, each.x, each.y);\n  //     if (x === each.x) {\n  //       return each.y;\n  //     }\n  //   }\n  //   return 0;\n  // }\n\n  return (\n    <div>\n      <div>test</div>\n      {/* <Bar\n        type=\"bar\"\n        data={{\n          labels: timeSpaced.map((v) => v),\n          datasets: [\n            {\n              backgroundColor: \"#000\",\n              borderWidth: 2,\n              fill: false,\n              data: timeSpaced.map((v) => barValue(v)),\n              yAxisID: \"A\",\n            },\n          ],\n        }}\n        options={{\n          responsive: true,\n          legend: {\n            display: false,\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                ticks: {\n                  maxTicksLimit: 10,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                id: \"A\",\n                display: true,\n                type: \"linear\",\n              },\n            ],\n          },\n        }}\n      /> */}\n    </div>\n  );\n};\n\nexport default TestA;\n"]},"metadata":{},"sourceType":"module"}