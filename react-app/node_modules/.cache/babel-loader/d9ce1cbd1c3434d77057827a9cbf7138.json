{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport apiManager from \"./api/apiManager\";\nimport AppViews from \"./AppViews\";\nimport \"./styles.css\";\n\nconst EventTranspoManager = props => {\n  const isAuthenticated = () => sessionStorage.getItem(\"credentials\") !== null;\n\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUser = user => {\n    sessionStorage.setItem(\"credentials\", JSON.stringify(user));\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [dates, setDates] = useState([]);\n  const [chosenDate, setChosenDate] = useState(1);\n\n  const getDates = type => {\n    apiManager.getType(type).then(APIResult => {\n      setDates(APIResult);\n    });\n  };\n\n  useEffect(() => {\n    getDates(\"dates\");\n  }, []);\n\n  const handleDateChange = event => {\n    const dateId = parseInt(event.target.value);\n    setChosenDate(dateId);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Manager\");\n};\n\nexport default EventTranspoManager;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/eventTranspoManager.js"],"names":["React","useState","useEffect","apiManager","AppViews","EventTranspoManager","props","isAuthenticated","sessionStorage","getItem","hasUser","setHasUser","setUser","user","setItem","JSON","stringify","clearUser","clear","dates","setDates","chosenDate","setChosenDate","getDates","type","getType","then","APIResult","handleDateChange","event","dateId","parseInt","target","value"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAMC,eAAe,GAAG,MAAMC,cAAc,CAACC,OAAf,CAAuB,aAAvB,MAA0C,IAAxE;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACM,eAAe,EAAhB,CAAtC;;AAEA,QAAMK,OAAO,GAAGC,IAAI,IAAI;AACtBL,IAAAA,cAAc,CAACM,OAAf,CAAuB,aAAvB,EAAsCC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAtC;AACAF,IAAAA,UAAU,CAACJ,eAAe,EAAhB,CAAV;AACD,GAHD;;AAKA,QAAMU,SAAS,GAAG,MAAM;AACtBT,IAAAA,cAAc,CAACU,KAAf;AACAP,IAAAA,UAAU,CAACJ,eAAe,EAAhB,CAAV;AACD,GAHD;;AAKA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMsB,QAAQ,GAAGC,IAAI,IAAI;AACvBrB,IAAAA,UAAU,CAACsB,OAAX,CAAmBD,IAAnB,EAAyBE,IAAzB,CAA8BC,SAAS,IAAI;AACzCP,MAAAA,QAAQ,CAACO,SAAD,CAAR;AACD,KAFD;AAGD,GAJD;;AAMAzB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,gBAAgB,GAAGC,KAAK,IAAI;AAChC,UAAMC,MAAM,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAvB;AACAX,IAAAA,aAAa,CAACQ,MAAD,CAAb;AACD,GAHD;;AAKA,sBACE,oDADF;AAKD,CArCD;;AAuCA,eAAezB,mBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport apiManager from \"./api/apiManager\"\nimport AppViews from \"./AppViews\";\nimport \"./styles.css\";\n\nconst EventTranspoManager = props => {\n  const isAuthenticated = () => sessionStorage.getItem(\"credentials\") !== null;\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUser = user => {\n    sessionStorage.setItem(\"credentials\", JSON.stringify(user));\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [dates, setDates] = useState([]);\n  const [chosenDate, setChosenDate] = useState(1);\n\n  const getDates = type => {\n    apiManager.getType(type).then(APIResult => {\n      setDates(APIResult);\n    });\n  };\n\n  useEffect(() => {\n    getDates(\"dates\");\n  }, []);\n\n  const handleDateChange = event => {\n    const dateId = parseInt(event.target.value);\n    setChosenDate(dateId);\n  };\n\n  return (\n    <>\n      Manager\n    </>\n  );\n};\n\nexport default EventTranspoManager;\n"]},"metadata":{},"sourceType":"module"}