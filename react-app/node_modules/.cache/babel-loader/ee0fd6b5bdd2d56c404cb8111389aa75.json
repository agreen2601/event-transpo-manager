{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/drivers/driverList.js\";\nimport React, { useEffect, useState } from \"react\"; // import Grid from \"@material-ui/core/Grid\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import Select from \"@material-ui/core/Select\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Typography from \"@material-ui/core/Typography\";\n// import DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\n// import EditIcon from \"@material-ui/icons/Edit\";\n\nimport apiManager from \"../api/apiManager\";\n\nconst DriverList = () => {\n  const [drivers, setDrivers] = useState([]);\n\n  const getDrivers = () => {\n    apiManager.getAllType(\"drivers\").then(APIResult => {\n      APIResult.sort((a, b) => a.name.localeCompare(b.name));\n      setDrivers(APIResult);\n    });\n  };\n\n  useEffect(() => {\n    getDrivers();\n  }, []);\n  let route = [];\n  let noRoute = []; // if (props.driver.assignments[0] !== undefined) {\n  //   route = props.driver.assignments[0].routeId;\n  // }\n  // else {\n  //   noRoute = \"Not Assigned\"\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"driver_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, drivers.map(driver => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"driver_border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"list_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, driver.name, \" \", \"\\u00A0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"list_phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, driver.phoneNumber, \" \", \"\\u00A0\", \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"list_notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, driver.notes, \" \", \"\\u00A0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"is_local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, driver.local, \" \", \"\\u00A0\"))));\n};\n\nexport default DriverList;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/drivers/driverList.js"],"names":["React","useEffect","useState","apiManager","DriverList","drivers","setDrivers","getDrivers","getAllType","then","APIResult","sort","a","b","name","localeCompare","route","noRoute","map","driver","phoneNumber","notes","local"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvBJ,IAAAA,UAAU,CAACK,UAAX,CAAsB,SAAtB,EAAiCC,IAAjC,CAAsCC,SAAS,IAAI;AACjDA,MAAAA,SAAS,CAACC,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAAzB;AACAR,MAAAA,UAAU,CAACI,SAAD,CAAV;AACD,KAHD;AAID,GALD;;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIS,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd,CAfuB,CAiBvB;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,OAAO,CAACa,GAAR,CAAYC,MAAM,iBACjB;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,MAAM,CAACL,IAApC,OAA2C,QAA3C,CADA,eAEA;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BK,MAAM,CAACC,WAArC,OAAmD,QAAnD,MAFA,eAGA;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,MAAM,CAACE,KAArC,OAA6C,QAA7C,CAHA,eAIA;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BF,MAAM,CAACG,KAAnC,OAA2C,QAA3C,CAJA,CADD,CADH,CADF;AAeD,CAvCD;;AAyCA,eAAelB,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import Grid from \"@material-ui/core/Grid\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import Select from \"@material-ui/core/Select\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Typography from \"@material-ui/core/Typography\";\n// import DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\n// import EditIcon from \"@material-ui/icons/Edit\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverList = () => {\n  const [drivers, setDrivers] = useState([]);\n\n  const getDrivers = () => {\n    apiManager.getAllType(\"drivers\").then(APIResult => {\n      APIResult.sort((a, b) => a.name.localeCompare(b.name));\n      setDrivers(APIResult);\n    });\n  };\n\n  useEffect(() => {\n    getDrivers();\n  }, []);\n\n  let route = [];\n  let noRoute = [];\n\n  // if (props.driver.assignments[0] !== undefined) {\n  //   route = props.driver.assignments[0].routeId;\n  // }\n  // else {\n  //   noRoute = \"Not Assigned\"\n  // }\n\n  return (\n    <div className=\"driver_card\">\n      {drivers.map(driver => (\n        <div className=\"driver_border\">\n        <span className=\"list_name\">{driver.name} {\"\\u00A0\"}</span>\n        <span className=\"list_phone\">{driver.phoneNumber} {\"\\u00A0\"} </span>\n        <span className=\"list_notes\">{driver.notes} {\"\\u00A0\"}</span>\n        <span className=\"is_local\">{driver.local} {\"\\u00A0\"}</span>\n        {/* <span>{\"\\u00A0\"}{driver.assignments.routeId}</span> */}\n        {/* <span> {\"\\u00A0\"} {route}</span> */}\n        {/* <span className=\"no_route\">{\"\\u00A0\"} {noRoute}</span> */}\n      </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DriverList;\n"]},"metadata":{},"sourceType":"module"}