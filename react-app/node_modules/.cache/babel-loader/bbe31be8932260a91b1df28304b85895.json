{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentAddForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\nconst AssignmentAddForm = props => {\n  const chosenDate = props.chosenDate;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const [assignment, setAssignment] = useState({\n    start_time: moment().format(\"HH:mm\"),\n    end_time: \"23:59\"\n  });\n  assignment.route_id = props.match.params.routeId;\n  assignment.date_id = chosenDate;\n  const [route, setRoute] = useState([]);\n\n  const getRoute = () => {\n    apiManager.getSingleType(\"routes\", props.match.params.routeId).then(r => setRoute(r));\n  };\n\n  console.log(route);\n  const [dates, setDates] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const getAllDropDowns = () => {\n    return apiManager.getType(\"dates\").then(r => {\n      r.sort((a, b) => a.date > b.date ? 1 : -1);\n      setDates(r);\n    }), apiManager.getType(\"routes\").then(r => {\n      r.sort((a, b) => a.name > b.name ? 1 : -1);\n      setRoutes(r);\n    }), apiManager.getType(\"drivers\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setDrivers(r);\n    }), apiManager.getType(\"vehicles\").then(r => {\n      r.sort((a, b) => a.number > b.number ? 1 : -1).sort((a, b) => a.company.localeCompare(b.company));\n      setVehicles(r);\n    });\n  };\n\n  const handleAssignmentChange = e => {\n    const stateToChange = { ...assignment\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setAssignment(stateToChange);\n  };\n\n  useEffect(() => {\n    getAllDropDowns();\n    getRoute();\n  }, []); // get all drivers, check if driver already in system, post if not, send to route view\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.getAssignmentsByDateDriver(assignment.date_id, assignment.driver_id).then(assignments => {\n      if (assignments.length > 0) {\n        alert(`This driver has already been assigned on this day.`);\n      } else {\n        apiManager.addType(\"assignments\", assignment).then(() => props.history.push(`/route/view`));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Create New Assignment for Route \", route.name.split(1), \" \", route.description), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"date_id\",\n    native: true,\n    onChange: handleChosenDateChange,\n    fullWidth: true,\n    required: true,\n    value: chosenDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Choose Date\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: parseInt(date.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, date.date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Driver:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"driver_id\",\n    native: true,\n    onChange: handleAssignmentChange,\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Choose Driver\"), drivers ? drivers.map(driver => /*#__PURE__*/React.createElement(\"option\", {\n    key: driver.id,\n    value: parseInt(driver.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, driver.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Vehicle:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"vehicle_id\",\n    native: true,\n    onChange: handleAssignmentChange,\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"Choose Vehicle\"), vehicles ? vehicles.map(vehicle => /*#__PURE__*/React.createElement(\"option\", {\n    key: vehicle.id,\n    value: parseInt(vehicle.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, vehicle.company, \" \", vehicle.number)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Start Time: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"start_time\",\n    type: \"time\",\n    fullWidth: true,\n    value: assignment.start_time,\n    onChange: handleAssignmentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"End Time: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"end_time\",\n    type: \"time\",\n    fullWidth: true,\n    value: assignment.end_time,\n    onChange: handleAssignmentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AssignmentAddForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentAddForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Typography","Select","apiManager","moment","AssignmentAddForm","props","chosenDate","handleChosenDateChange","assignment","setAssignment","start_time","format","end_time","route_id","match","params","routeId","date_id","route","setRoute","getRoute","getSingleType","then","r","console","log","dates","setDates","routes","setRoutes","drivers","setDrivers","vehicles","setVehicles","getAllDropDowns","getType","sort","a","b","date","name","localeCompare","number","company","handleAssignmentChange","e","stateToChange","target","id","value","handleSubmit","preventDefault","getAssignmentsByDateDriver","driver_id","assignments","length","alert","addType","history","push","split","description","map","parseInt","driver","vehicle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,QAAMC,sBAAsB,GAAGF,KAAK,CAACE,sBAArC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC;AAC3CgB,IAAAA,UAAU,EAAEP,MAAM,GAAGQ,MAAT,CAAgB,OAAhB,CAD+B;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAAD,CAA5C;AAKAJ,EAAAA,UAAU,CAACK,QAAX,GAAsBR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,OAAzC;AACAR,EAAAA,UAAU,CAACS,OAAX,GAAqBX,UAArB;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAM0B,QAAQ,GAAG,MAAM;AACrBlB,IAAAA,UAAU,CACPmB,aADH,CACiB,QADjB,EAC2BhB,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,OAD9C,EAEGM,IAFH,CAESC,CAAD,IAAOJ,QAAQ,CAACI,CAAD,CAFvB;AAGD,GAJD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoC,OAAD,EAAUC,UAAV,IAAwBrC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BvC,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMwC,eAAe,GAAG,MAAM;AAC5B,WACEhC,UAAU,CAACiC,OAAX,CAAmB,OAAnB,EAA4Bb,IAA5B,CAAkCC,CAAD,IAAO;AACtCA,MAAAA,CAAC,CAACa,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAzC;AACAZ,MAAAA,QAAQ,CAACJ,CAAD,CAAR;AACD,KAHD,GAIArB,UAAU,CAACiC,OAAX,CAAmB,QAAnB,EAA6Bb,IAA7B,CAAmCC,CAAD,IAAO;AACvCA,MAAAA,CAAC,CAACa,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAzC;AACAX,MAAAA,SAAS,CAACN,CAAD,CAAT;AACD,KAHD,CAJA,EAQArB,UAAU,CAACiC,OAAX,CAAmB,SAAnB,EAA8Bb,IAA9B,CAAoCC,CAAD,IAAO;AACxCA,MAAAA,CAAC,CAACa,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,IAAF,CAAOC,aAAP,CAAqBH,CAAC,CAACE,IAAvB,CAAjB;AACAT,MAAAA,UAAU,CAACR,CAAD,CAAV;AACD,KAHD,CARA,EAYArB,UAAU,CAACiC,OAAX,CAAmB,UAAnB,EAA+Bb,IAA/B,CAAqCC,CAAD,IAAO;AACzCA,MAAAA,CAAC,CAACa,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACK,MAAF,GAAWJ,CAAC,CAACI,MAAb,GAAsB,CAAtB,GAA0B,CAAC,CAA7C,EAAiDN,IAAjD,CAAsD,CAACC,CAAD,EAAIC,CAAJ,KACpDD,CAAC,CAACM,OAAF,CAAUF,aAAV,CAAwBH,CAAC,CAACK,OAA1B,CADF;AAGAV,MAAAA,WAAW,CAACV,CAAD,CAAX;AACD,KALD,CAbF;AAoBD,GArBD;;AAuBA,QAAMqB,sBAAsB,GAAIC,CAAD,IAAO;AACpC,UAAMC,aAAa,GAAG,EAAE,GAAGtC;AAAL,KAAtB;AACAsC,IAAAA,aAAa,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,CAAb,GAA6BH,CAAC,CAACE,MAAF,CAASE,KAAtC;AACAxC,IAAAA,aAAa,CAACqC,aAAD,CAAb;AACD,GAJD;;AAMAnD,EAAAA,SAAS,CAAC,MAAM;AACduC,IAAAA,eAAe;AACfd,IAAAA,QAAQ;AACT,GAHQ,EAGN,EAHM,CAAT,CAtDmC,CA2DnC;;AACA,QAAM8B,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;AACAjD,IAAAA,UAAU,CACPkD,0BADH,CAC8B5C,UAAU,CAACS,OADzC,EACkDT,UAAU,CAAC6C,SAD7D,EAEG/B,IAFH,CAESgC,WAAD,IAAiB;AACrB,UAAIA,WAAW,CAACC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BC,QAAAA,KAAK,CAAE,oDAAF,CAAL;AACD,OAFD,MAEO;AACLtD,QAAAA,UAAU,CACPuD,OADH,CACW,aADX,EAC0BjD,UAD1B,EAEGc,IAFH,CAEQ,MAAMjB,KAAK,CAACqD,OAAN,CAAcC,IAAd,CAAoB,aAApB,CAFd;AAGD;AACF,KAVH;AAWD,GAbD;;AAeA,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACmCzC,KAAK,CAACsB,IAAN,CAAWoB,KAAX,CAAiB,CAAjB,CADnC,OACyD1C,KAAK,CAAC2C,WAD/D,CADF,eAIE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEX,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAE3C,sBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAED,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,iBAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EAWGoB,KAAK,GACJA,KAAK,CAACoC,GAAN,CAAWvB,IAAD,iBACR;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACS,EAAlB;AAAsB,IAAA,KAAK,EAAEe,QAAQ,CAACxB,IAAI,CAACS,EAAN,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,IAAI,CAACA,IADR,CADF,CADI,gBAOJ,yCAlBJ,CAFF,CADF,eAyBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAEK,sBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,iBAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAUGd,OAAO,GACNA,OAAO,CAACgC,GAAR,CAAaE,MAAD,iBACV;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAAChB,EAApB;AAAwB,IAAA,KAAK,EAAEe,QAAQ,CAACC,MAAM,CAAChB,EAAR,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,MAAM,CAACxB,IADV,CADF,CADM,gBAON,yCAjBJ,CAFF,CAzBF,eAgDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAEI,sBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,iBAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,EAUGZ,QAAQ,GACPA,QAAQ,CAAC8B,GAAT,CAAcG,OAAD,iBACX;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAACjB,EAArB;AAAyB,IAAA,KAAK,EAAEe,QAAQ,CAACE,OAAO,CAACjB,EAAT,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,OAAO,CAACtB,OADX,OACqBsB,OAAO,CAACvB,MAD7B,CADF,CADO,gBAOP,yCAjBJ,CAFF,CAhDF,eAuEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAElC,UAAU,CAACE,UAJpB;AAKE,IAAA,QAAQ,EAAEkC,sBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAvEF,eAiFE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAEpC,UAAU,CAACI,QAJpB;AAKE,IAAA,QAAQ,EAAEgC,sBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjFF,CADF,eA6FE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA7FF,CAJF,CADF;AA0GD,CArLD;;AAuLA,eAAexC,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\nconst AssignmentAddForm = (props) => {\n  const chosenDate = props.chosenDate;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const [assignment, setAssignment] = useState({\n    start_time: moment().format(\"HH:mm\"),\n    end_time: \"23:59\",\n  });\n\n  assignment.route_id = props.match.params.routeId;\n  assignment.date_id = chosenDate;\n\n  const [route, setRoute] = useState([]);\n  const getRoute = () => {\n    apiManager\n      .getSingleType(\"routes\", props.match.params.routeId)\n      .then((r) => setRoute(r));\n  };\n\n  console.log(route);\n\n  const [dates, setDates] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const getAllDropDowns = () => {\n    return (\n      apiManager.getType(\"dates\").then((r) => {\n        r.sort((a, b) => (a.date > b.date ? 1 : -1));\n        setDates(r);\n      }),\n      apiManager.getType(\"routes\").then((r) => {\n        r.sort((a, b) => (a.name > b.name ? 1 : -1));\n        setRoutes(r);\n      }),\n      apiManager.getType(\"drivers\").then((r) => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setDrivers(r);\n      }),\n      apiManager.getType(\"vehicles\").then((r) => {\n        r.sort((a, b) => (a.number > b.number ? 1 : -1)).sort((a, b) =>\n          a.company.localeCompare(b.company)\n        );\n        setVehicles(r);\n      })\n    );\n  };\n\n  const handleAssignmentChange = (e) => {\n    const stateToChange = { ...assignment };\n    stateToChange[e.target.id] = e.target.value;\n    setAssignment(stateToChange);\n  };\n\n  useEffect(() => {\n    getAllDropDowns();\n    getRoute();\n  }, []);\n\n  // get all drivers, check if driver already in system, post if not, send to route view\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager\n      .getAssignmentsByDateDriver(assignment.date_id, assignment.driver_id)\n      .then((assignments) => {\n        if (assignments.length > 0) {\n          alert(`This driver has already been assigned on this day.`);\n        } else {\n          apiManager\n            .addType(\"assignments\", assignment)\n            .then(() => props.history.push(`/route/view`));\n        }\n      });\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Create New Assignment for Route {route.name.split(1)} {route.description}\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Date:</InputLabel>\n            <Select\n              id=\"date_id\"\n              native\n              onChange={handleChosenDateChange}\n              fullWidth\n              required\n              value={chosenDate}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Date\n              </option>\n              {dates ? (\n                dates.map((date) => (\n                  <option key={date.id} value={parseInt(date.id)}>\n                    {date.date}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Driver:</InputLabel>\n            <Select\n              id=\"driver_id\"\n              native\n              onChange={handleAssignmentChange}\n              fullWidth\n              required\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Driver\n              </option>\n              {drivers ? (\n                drivers.map((driver) => (\n                  <option key={driver.id} value={parseInt(driver.id)}>\n                    {driver.name}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Vehicle:</InputLabel>\n            <Select\n              id=\"vehicle_id\"\n              native\n              onChange={handleAssignmentChange}\n              fullWidth\n              required\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Vehicle\n              </option>\n              {vehicles ? (\n                vehicles.map((vehicle) => (\n                  <option key={vehicle.id} value={parseInt(vehicle.id)}>\n                    {vehicle.company} {vehicle.number}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Start Time: </InputLabel>\n            <TextField\n              id=\"start_time\"\n              type=\"time\"\n              fullWidth\n              value={assignment.start_time}\n              onChange={handleAssignmentChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">End Time: </InputLabel>\n            <TextField\n              id=\"end_time\"\n              type=\"time\"\n              fullWidth\n              value={assignment.end_time}\n              onChange={handleAssignmentChange}\n            />\n          </Grid>\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AssignmentAddForm;\n"]},"metadata":{},"sourceType":"module"}