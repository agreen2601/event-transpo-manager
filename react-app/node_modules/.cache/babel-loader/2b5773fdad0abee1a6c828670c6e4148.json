{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/entryEditForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\"; // \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\n\nconst EntryEditForm = props => {\n  const events = props.events;\n  const locations = props.locations;\n  const routes = props.routes; // const chosenLocation = props.chosenLocation;\n  // const chosenRoute = props.chosenRoute;\n  // const chosenEvent = props.chosenEvent;\n  // const chosenDate = props.chosenDate;\n  // const handleChosenEventChange = props.handleChosenEventChange;\n  // const handleChosenLocationChange = props.handleChosenLocationChange;\n\n  const handleChosenRouteChange = props.handleChosenRouteChange; // const handleChosenDateChange = props.handleChosenDateChange\n\n  const [entry, setEntry] = useState({\n    event_id: \"\",\n    place_id: \"\",\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    date: \"\",\n    time: \"\"\n  }); // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n  // entry.place_id = chosenLocation;\n  // entry.route_id = chosenRoute;\n  // entry.event_id = chosenEvent;\n  // entry.date = chosenDate;\n  // update state of entry upon form field change\n\n  const handleEntryChange = e => {\n    const stateToChange = { ...entry\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  useEffect(() => {\n    apiManager.getSingleType(\"entries\", props.match.params.entryId).then(entry => {\n      setEntry(entry);\n    });\n  }, [props.match.params.entryId]);\n  const editedEntry = {\n    id: props.match.params.entryId,\n    event_id: entry.event_id,\n    place_id: entry.place_id,\n    date: entry.date,\n    attendee_count: entry.attendee_count,\n    vehicle_number: entry.vehicle_number,\n    time: entry.time\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.updateEntry(editedEntry).then(() => {\n      props.history.push(\"/location/log\");\n    });\n  };\n\n  let routeVal = \"\";\n\n  if (entry.place !== undefined) {\n    routeVal = entry.place.route.name;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-form-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Edit Entry\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Event:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"event_id\",\n    native: true,\n    onChange: handleEntryChange,\n    fullWidth: true,\n    required: true,\n    value: entry.event_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, events ? events.map(event => /*#__PURE__*/React.createElement(\"option\", {\n    key: event.id,\n    value: parseInt(event.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, event.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"routeId\",\n    native: true,\n    onChange: handleChosenRouteChange,\n    fullWidth: true // value={routeVal}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Choose Route\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"place_id\",\n    native: true,\n    onChange: handleEntryChange,\n    fullWidth: true,\n    required: true,\n    value: entry.place_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Choose Location\"), locations ? locations.map(place => /*#__PURE__*/React.createElement(\"option\", {\n    key: place.id,\n    value: parseInt(place.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, place.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"date\",\n    type: \"date\",\n    fullWidth: true,\n    value: entry.date,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    type: \"time\",\n    fullWidth: true,\n    value: entry.time,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Attendee Count:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"number\",\n    id: \"attendee_count\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    value: entry.attendee_count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"Vehicle Number:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"vehicle_number\",\n    fullWidth: true,\n    value: entry.vehicle_number,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n};\n\nexport default EntryEditForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/entryEditForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Select","Typography","apiManager","EntryEditForm","props","events","locations","routes","handleChosenRouteChange","entry","setEntry","event_id","place_id","attendee_count","vehicle_number","date","time","handleEntryChange","e","stateToChange","target","id","value","getSingleType","match","params","entryId","then","editedEntry","handleSubmit","preventDefault","updateEntry","history","push","routeVal","place","undefined","route","name","map","event","parseInt","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\";\n\n// \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\nconst EntryEditForm = (props) => {\n  const events = props.events;\n  const locations = props.locations;\n  const routes = props.routes;\n  // const chosenLocation = props.chosenLocation;\n  // const chosenRoute = props.chosenRoute;\n  // const chosenEvent = props.chosenEvent;\n  // const chosenDate = props.chosenDate;\n  // const handleChosenEventChange = props.handleChosenEventChange;\n  // const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  // const handleChosenDateChange = props.handleChosenDateChange\n  const [entry, setEntry] = useState({\n    event_id: \"\",\n    place_id: \"\",\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    date: \"\",\n    time: \"\",\n  });\n\n  // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n  // entry.place_id = chosenLocation;\n  // entry.route_id = chosenRoute;\n  // entry.event_id = chosenEvent;\n  // entry.date = chosenDate;\n\n  // update state of entry upon form field change\n  const handleEntryChange = (e) => {\n    const stateToChange = { ...entry };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  useEffect(() => {\n    apiManager\n      .getSingleType(\"entries\", props.match.params.entryId)\n      .then((entry) => {\n        setEntry(entry);\n      });\n  }, [props.match.params.entryId]);\n\n  const editedEntry = {\n    id: props.match.params.entryId,\n    event_id: entry.event_id,\n    place_id: entry.place_id,\n    date: entry.date,\n    attendee_count: entry.attendee_count,\n    vehicle_number: entry.vehicle_number,\n    time: entry.time,\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager.updateEntry(editedEntry).then(() => {\n      props.history.push(\"/location/log\");\n    });\n  };\n\n  let routeVal = \"\";\n  if (entry.place !== undefined) {\n    routeVal = entry.place.route.name;\n  }\n\n  return (\n    <>\n      <div className=\"event-form-page\">\n        <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n          Edit Entry\n        </Typography>\n        <form className=\"drop-downs\" onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Event:</InputLabel>\n              <Select\n                id=\"event_id\"\n                native\n                onChange={handleEntryChange}\n                fullWidth\n                required\n                value={entry.event_id}\n              >\n                {events ? (\n                  events.map((event) => (\n                    <option key={event.id} value={parseInt(event.id)}>\n                      {event.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Route:</InputLabel>\n              <Select\n                id=\"routeId\"\n                native\n                onChange={handleChosenRouteChange}\n                fullWidth\n                // value={routeVal}\n              >\n                <option aria-label=\"None\" value=\"\">\n                  Choose Route\n                </option>\n                {routes ? (\n                  routes.map((route) => (\n                    <option key={route.id} value={route.name}>\n                      {route.name} {route.description}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Location:</InputLabel>\n              <Select\n                id=\"place_id\"\n                native\n                onChange={handleEntryChange}\n                fullWidth\n                required\n                value={entry.place_id}\n              >\n                <option aria-label=\"None\" value=\"\">\n                  Choose Location\n                </option>\n                {locations ? (\n                  locations.map((place) => (\n                    <option key={place.id} value={parseInt(place.id)}>\n                      {place.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">Date: </InputLabel>\n              <TextField\n                id=\"date\"\n                type=\"date\"\n                fullWidth\n                value={entry.date}\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">Time: </InputLabel>\n              <TextField\n                id=\"time\"\n                type=\"time\"\n                fullWidth\n                value={entry.time}\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Attendee Count:{\" \"}\n              </InputLabel>\n              <TextField\n                required\n                type=\"number\"\n                id=\"attendee_count\"\n                fullWidth\n                onChange={handleEntryChange}\n                value={entry.attendee_count}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Vehicle Number:{\" \"}\n              </InputLabel>\n              <TextField\n                id=\"vehicle_number\"\n                fullWidth\n                value={entry.vehicle_number}\n                onChange={handleEntryChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid>\n            <div className=\"submit-button\">\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Submit\n              </Button>\n            </div>\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default EntryEditForm;\n"]},"metadata":{},"sourceType":"module"}