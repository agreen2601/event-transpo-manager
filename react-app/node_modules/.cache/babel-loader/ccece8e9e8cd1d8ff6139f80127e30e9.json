{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/assignmentCard.js\";\nimport React from \"../../node_modules/react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport AccessibleIcon from \"@material-ui/icons/Accessible\";\n\nconst AssignmentCard = props => {\n  const assignment = props.assignment; // const [assignment, setAssignment] = useState([]);\n  // const getAssignment = (dateId, routeId, driverId) => {\n  //   apiManager\n  //     .getAssignmentByDateRouteDriver(dateId, routeId, driverId)\n  //     .then(APIResult => {\n  //       setAssignment(APIResult);\n  //     });\n  // };\n  // useEffect(() => {\n  //   getAssignment(props.date.id, props.route.id, props.assignment.driverId);\n  // }, [props.date.id, props.route.id, props.assignment.driverId]);\n  // let realAssignment = {};\n  // let realDriver = {};\n  // let realVehicle = {};\n  // let pax = \"\";\n  // let ada = \"\";\n  // if (assignment[0] !== undefined) {\n  //   realAssignment = assignment[0];\n  //   realDriver = assignment[0].driver;\n  //   realVehicle = assignment[0].vehicle;\n  //   if (assignment[0].vehicle.capacity !== \"\") {\n  //     pax = \"pax \";\n  //   }\n  //   if (assignment[0].vehicle.isADA !== \"\") {\n  //     ada = <span>ada</span>\n  //   }\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, assignment.driver.name, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, assignment.driver.phone_number), /*#__PURE__*/React.createElement(RemoveCircleOutlineIcon, {\n    className: \"assignment_icon\" // onClick={() => props.history.push(`/add/${props.route.id}`)}\n    ,\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SwapHorizIcon, {\n    className: \"assignment_icon\" // onClick={() => props.history.push(`/add/${props.route.id}`)}\n    ,\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditIcon, {\n    className: \"assignment_icon\" // onClick={() => props.history.push(`/add/${props.route.id}`)}\n    ,\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, assignment.vehicle.number, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, assignment.vehicle.company, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, assignment.vehicle.capacity, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, assignment.vehicle.kind, \" \"), assignment.vehicle.isAda === true ? /*#__PURE__*/React.createElement(AccessibleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 46\n    }\n  }) : null));\n};\n\nexport default AssignmentCard;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/assignmentCard.js"],"names":["React","EditIcon","SwapHorizIcon","RemoveCircleOutlineIcon","AccessibleIcon","AssignmentCard","props","assignment","driver","name","phone_number","fontSize","vehicle","number","company","capacity","kind","isAda"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB,CADgC,CAEhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,UAAU,CAACC,MAAX,CAAkBC,IAAzB,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,UAAU,CAACC,MAAX,CAAkBE,YAAzB,CAFF,eAGE,oBAAC,uBAAD;AACE,IAAA,SAAS,EAAC,iBADZ,CAEE;AAFF;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAQE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,iBADZ,CAEE;AAFF;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAaE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAC,iBADZ,CAEE;AAFF;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,UAAU,CAACK,OAAX,CAAmBC,MAA1B,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,UAAU,CAACK,OAAX,CAAmBE,OAA1B,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,UAAU,CAACK,OAAX,CAAmBG,QAA1B,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,UAAU,CAACK,OAAX,CAAmBI,IAA1B,MAJF,EAKGT,UAAU,CAACK,OAAX,CAAmBK,KAAnB,KAA6B,IAA7B,gBAAoC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,GAAyD,IAL5D,CAlBF,CADF;AAsFD,CAvHD;;AAyHA,eAAeZ,cAAf","sourcesContent":["import React from \"../../node_modules/react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport AccessibleIcon from \"@material-ui/icons/Accessible\";\n\nconst AssignmentCard = (props) => {\n  const assignment = props.assignment;\n  // const [assignment, setAssignment] = useState([]);\n\n  // const getAssignment = (dateId, routeId, driverId) => {\n  //   apiManager\n  //     .getAssignmentByDateRouteDriver(dateId, routeId, driverId)\n  //     .then(APIResult => {\n  //       setAssignment(APIResult);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   getAssignment(props.date.id, props.route.id, props.assignment.driverId);\n  // }, [props.date.id, props.route.id, props.assignment.driverId]);\n\n  // let realAssignment = {};\n  // let realDriver = {};\n  // let realVehicle = {};\n  // let pax = \"\";\n  // let ada = \"\";\n  // if (assignment[0] !== undefined) {\n  //   realAssignment = assignment[0];\n  //   realDriver = assignment[0].driver;\n  //   realVehicle = assignment[0].vehicle;\n  //   if (assignment[0].vehicle.capacity !== \"\") {\n  //     pax = \"pax \";\n  //   }\n  //   if (assignment[0].vehicle.isADA !== \"\") {\n  //     ada = <span>ada</span>\n  //   }\n  // }\n\n  return (\n    <>\n      <span>{assignment.driver.name} </span>\n      <span>{assignment.driver.phone_number}</span>\n      <RemoveCircleOutlineIcon\n        className=\"assignment_icon\"\n        // onClick={() => props.history.push(`/add/${props.route.id}`)}\n        style={{ fontSize: 20 }}\n      />\n      <SwapHorizIcon\n        className=\"assignment_icon\"\n        // onClick={() => props.history.push(`/add/${props.route.id}`)}\n        style={{ fontSize: 20 }}\n      />\n      <EditIcon\n        className=\"assignment_icon\"\n        // onClick={() => props.history.push(`/add/${props.route.id}`)}\n        style={{ fontSize: 20 }}\n      />\n      <div>\n        <span>{assignment.vehicle.number} </span>\n        <span>{assignment.vehicle.company} </span>\n        <span>{assignment.vehicle.capacity} </span>\n        <span>{assignment.vehicle.kind} </span>\n        {assignment.vehicle.isAda === true ? <AccessibleIcon /> : null}\n      </div>\n      {/* <section className=\"driver_info\">\n        <div>\n          <div>\n            <span className=\"driver_name\">\n              {realDriver.name} {\"\\u00A0\"}\n            </span>\n            <span className=\"driver_phone_number\">\n              {realDriver.phoneNumber} {\"\\u00A0\"}\n            </span>\n            <span>\n              {realAssignment.endTime} {\"\\u00A0\"}\n            </span>\n            <span className=\"is_local\">{realDriver.local}</span>\n            <span\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.removeAssignment(\n                  \"assignments\",\n                  realAssignment.id,\n                  props.date.id,\n                  props.route.id\n                )\n              }\n            >remove</span>\n            <span\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.history.push(\n                  `/edit/${realAssignment.id}/${props.route.id}/${realDriver.id}/${realVehicle.id}`\n                )\n              }\n            >edit assignment</span>\n            <span\n              className=\"assignment_icon\"\n              onClick={() =>\n                props.history.push(\n                  `/editdriver/${realDriver.id}/${realVehicle.id}`\n                )\n              }\n            >edit driver</span>\n          </div>\n          <div>\n            <span>\n              {realVehicle.number} {\"\\u00A0\"}\n            </span>\n            <span className=\"bold_driver_info\">\n              {realVehicle.company} {\"\\u00A0\"}\n            </span>\n            <span>\n              {realVehicle.capacity} {pax}\n            </span>\n            <span className=\"bold_driver_info\">\n              {realVehicle.type}\n            </span>\n            <span className=\"is_ada\"> {\"\\u00A0\"} {ada}</span>\n          </div>\n        </div>\n      </section> */}\n    </>\n  );\n};\n\nexport default AssignmentCard;\n"]},"metadata":{},"sourceType":"module"}