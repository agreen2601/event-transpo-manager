{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/entryEditForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\"; // \"places\" and \"shuttles\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\n\nconst EntryEditForm = props => {\n  const shuttles = props.shuttles;\n  const places = props.places;\n  const routes = props.routes;\n  const dates = props.dates;\n  const chosenPlaceId = props.chosenPlaceId;\n  const chosenRoute = props.chosenRoute;\n  const handleChosenPlaceChange = props.handleChosenPlaceChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const [entry, setEntry] = useState({\n    shuttle_id: \"\",\n    place_id: \"\",\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    date: \"\",\n    time: \"\"\n  });\n  console.log(entry); // update state of entry upon form field change\n\n  const handleEntryChange = e => {\n    const stateToChange = { ...entry\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  }; // get the entry to be edited\n\n\n  useEffect(() => {\n    apiManager.getSingleType(\"entries\", props.match.params.entryId).then(entry => {\n      setEntry(entry);\n    });\n  }, [props.match.params.entryId]);\n  const editedEntry = {\n    id: props.match.params.entryId,\n    shuttle_id: entry.shuttle_id,\n    place_id: entry.place_id,\n    date_id: entry.date_id,\n    attendee_count: entry.attendee_count,\n    vehicle_number: entry.vehicle_number,\n    time: entry.time\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.updateType(\"entries\", editedEntry).then(() => {\n      props.history.push(\"/location/log\");\n    });\n  };\n\n  console.log(entry.route_id);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-form-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Edit Entry\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Event:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"shuttle_id\",\n    native: true,\n    onChange: handleEntryChange,\n    fullWidth: true,\n    required: true,\n    value: entry.shuttle_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, shuttles ? shuttles.map(shuttle => /*#__PURE__*/React.createElement(\"option\", {\n    key: shuttle.id,\n    value: parseInt(shuttle.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, shuttle.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"route_id\",\n    native: true,\n    onChange: handleChosenRouteChange,\n    fullWidth: true,\n    value: chosenRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Choose Route\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"place_id\",\n    native: true,\n    onChange: handleEntryChange,\n    fullWidth: true,\n    required: true,\n    value: entry.place_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Choose Location\"), places ? places.map(place => /*#__PURE__*/React.createElement(\"option\", {\n    key: place.id,\n    value: parseInt(place.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, place.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"date_id\",\n    native: true,\n    onChange: handleEntryChange,\n    fullWidth: true,\n    required: true,\n    value: entry.date_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Choose Date\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: date.id,\n    \"data-name\": date.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, date.date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    type: \"time\",\n    fullWidth: true,\n    value: entry.time,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"Attendee Count:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"number\",\n    id: \"attendee_count\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    value: entry.attendee_count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Vehicle Number:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"vehicle_number\",\n    fullWidth: true,\n    value: entry.vehicle_number,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n};\n\nexport default EntryEditForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/entryEditForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Select","Typography","apiManager","EntryEditForm","props","shuttles","places","routes","dates","chosenPlaceId","chosenRoute","handleChosenPlaceChange","handleChosenRouteChange","entry","setEntry","shuttle_id","place_id","attendee_count","vehicle_number","date","time","console","log","handleEntryChange","e","stateToChange","target","id","value","getSingleType","match","params","entryId","then","editedEntry","date_id","handleSubmit","preventDefault","updateType","history","push","route_id","map","shuttle","parseInt","name","route","description","place"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\";\n\n// \"places\" and \"shuttles\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\nconst EntryEditForm = (props) => {\n  const shuttles = props.shuttles;\n  const places = props.places;\n  const routes = props.routes;\n  const dates = props.dates\n  const chosenPlaceId = props.chosenPlaceId;\n  const chosenRoute = props.chosenRoute;\n  const handleChosenPlaceChange = props.handleChosenPlaceChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const [entry, setEntry] = useState({\n    shuttle_id: \"\",\n    place_id: \"\",\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    date: \"\",\n    time: \"\",\n  });\n\n  console.log(entry);\n\n  // update state of entry upon form field change\n  const handleEntryChange = (e) => {\n    const stateToChange = { ...entry };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  // get the entry to be edited\n  useEffect(() => {\n    apiManager\n      .getSingleType(\"entries\", props.match.params.entryId)\n      .then((entry) => {\n        setEntry(entry);\n      });\n  }, [props.match.params.entryId]);\n\n  const editedEntry = {\n    id: props.match.params.entryId,\n    shuttle_id: entry.shuttle_id,\n    place_id: entry.place_id,\n    date_id: entry.date_id,\n    attendee_count: entry.attendee_count,\n    vehicle_number: entry.vehicle_number,\n    time: entry.time,\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager.updateType(\"entries\", editedEntry).then(() => {\n      props.history.push(\"/location/log\");\n    });\n  };\n\n  console.log(entry.route_id)\n\n  return (\n    <>\n      <div className=\"event-form-page\">\n        <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n          Edit Entry\n        </Typography>\n        <form className=\"drop-downs\" onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Event:</InputLabel>\n              <Select\n                id=\"shuttle_id\"\n                native\n                onChange={handleEntryChange}\n              fullWidth\n              required\n              value={entry.shuttle_id}\n              >\n                {shuttles ? (\n                  shuttles.map((shuttle) => (\n                    <option key={shuttle.id} value={parseInt(shuttle.id)}>\n                      {shuttle.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Route:</InputLabel>\n              <Select\n                id=\"route_id\"\n                native\n                onChange={handleChosenRouteChange}\n                fullWidth\n                value={chosenRoute}\n              >\n                <option aria-label=\"None\" value=\"\">\n                  Choose Route\n                </option>\n                {routes ? (\n                  routes.map((route) => (\n                    <option key={route.id} value={route.id}>\n                      {route.name} {route.description}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Location:</InputLabel>\n              <Select\n                id=\"place_id\"\n                native\n                onChange={handleEntryChange}\n                fullWidth\n                required\n                value={entry.place_id}\n              >\n                <option aria-label=\"None\" value=\"\">\n                  Choose Location\n                </option>\n                {places ? (\n                  places.map((place) => (\n                    <option key={place.id} value={parseInt(place.id)}>\n                      {place.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Date:</InputLabel>\n              <Select\n                id=\"date_id\"\n                native\n                onChange={handleEntryChange}\n                fullWidth\n                required\n                value={entry.date_id}\n              >\n                <option aria-label=\"None\" value=\"\" data-name=\"\">\n                  Choose Date\n                </option>\n                {dates ? (\n                  dates.map((date) => (\n                    <option key={date.id} value={date.id} data-name={date.date}>\n                      {date.date}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">Time: </InputLabel>\n              <TextField\n                id=\"time\"\n                type=\"time\"\n                fullWidth\n                value={entry.time}\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Attendee Count:{\" \"}\n              </InputLabel>\n              <TextField\n                required\n                type=\"number\"\n                id=\"attendee_count\"\n                fullWidth\n                onChange={handleEntryChange}\n                value={entry.attendee_count}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Vehicle Number:{\" \"}\n              </InputLabel>\n              <TextField\n                id=\"vehicle_number\"\n                fullWidth\n                value={entry.vehicle_number}\n                onChange={handleEntryChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid>\n            <div className=\"submit-button\">\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Submit\n              </Button>\n            </div>\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default EntryEditForm;\n"]},"metadata":{},"sourceType":"module"}