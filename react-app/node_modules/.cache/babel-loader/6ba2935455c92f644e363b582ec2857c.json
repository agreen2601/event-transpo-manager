{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/testA.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst TestA = props => {\n  const entries = props.filteredEntries; //   totalAttendeeCount = filteredEntries\n  //   .map((entry) => entry.attendee_count)\n  //   .reduce((accumulator, runningTotal) => accumulator + runningTotal);\n  // }\n\n  const yD = entries.map(entry => entry.attendee_count);\n  let total = 0;\n\n  for (let i = 0; i < times.length; i++) {\n    if (times.filter(each => each === times[i]).length > 1) {\n      total += yD[i];\n      console.log(total);\n      yD[i] = total;\n    }\n  }\n\n  const times = entries.map(entry => entry.time.slice(0, 4));\n  const xD = [...new Set(times)];\n  const combinedA = [];\n\n  for (let i = 0; i < entries.length; i++) {\n    combinedA.push({\n      x: `${xD[i]}0`,\n      y: yD[i]\n    });\n  }\n\n  const earliestHour = parseInt(xD[0]);\n  const latestHour = parseInt(xD[xD.length - 1]) + 1;\n  const timeSpacedA = [];\n\n  for (let j = earliestHour; j < latestHour; j++) {\n    for (let i = 0; i < 6; i++) {\n      if (j < 10) {\n        timeSpacedA.push(`0${j}:${i}0`);\n      } else {\n        timeSpacedA.push(`${j}:${i}0`);\n      }\n    }\n  }\n\n  function barValue(x) {\n    for (let each of combinedA) {\n      if (x === each.x) {\n        return each.y;\n      }\n    }\n\n    return 0;\n  } // console.log(combinedA);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    type: \"bar\",\n    data: {\n      labels: timeSpacedA.map(v => v),\n      datasets: [{\n        backgroundColor: \"#000\",\n        borderWidth: 2,\n        fill: false,\n        data: timeSpacedA.map(v => barValue(v))\n      }]\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: true,\n          ticks: {\n            maxTicksLimit: latestHour - earliestHour\n          }\n        }],\n        yAxes: [{\n          display: true,\n          type: \"linear\"\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TestA;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/testA.js"],"names":["React","Bar","TestA","props","entries","filteredEntries","yD","map","entry","attendee_count","total","i","times","length","filter","each","console","log","time","slice","xD","Set","combinedA","push","x","y","earliestHour","parseInt","latestHour","timeSpacedA","j","barValue","labels","v","datasets","backgroundColor","borderWidth","fill","data","responsive","legend","display","scales","xAxes","ticks","maxTicksLimit","yAxes","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst TestA = (props) => {\n  const entries = props.filteredEntries;\n\n  //   totalAttendeeCount = filteredEntries\n  //   .map((entry) => entry.attendee_count)\n  //   .reduce((accumulator, runningTotal) => accumulator + runningTotal);\n  // }\n\n  const yD = entries.map((entry) => entry.attendee_count);\n\n  let total = 0;\n  for (let i = 0; i < times.length; i++) {\n    if (times.filter((each) => each === times[i]).length > 1) {\n      total += yD[i];\n      console.log(total);\n      yD[i] = total;\n    }\n  }\n\n  const times = entries.map((entry) => entry.time.slice(0, 4));\n  const xD = [...new Set(times)];\n  const combinedA = [];\n  for (let i = 0; i < entries.length; i++) {\n    combinedA.push({ x: `${xD[i]}0`, y: yD[i] });\n  }\n\n  const earliestHour = parseInt(xD[0]);\n  const latestHour = parseInt(xD[xD.length - 1]) + 1;\n\n  const timeSpacedA = [];\n  for (let j = earliestHour; j < latestHour; j++) {\n    for (let i = 0; i < 6; i++) {\n      if (j < 10) {\n        timeSpacedA.push(`0${j}:${i}0`);\n      } else {\n        timeSpacedA.push(`${j}:${i}0`);\n      }\n    }\n  }\n\n  function barValue(x) {\n    for (let each of combinedA) {\n      if (x === each.x) {\n        return each.y;\n      }\n    }\n    return 0;\n  }\n\n  // console.log(combinedA);\n\n  return (\n    <div>\n      <Bar\n        type=\"bar\"\n        data={{\n          labels: timeSpacedA.map((v) => v),\n          datasets: [\n            {\n              backgroundColor: \"#000\",\n              borderWidth: 2,\n              fill: false,\n              data: timeSpacedA.map((v) => barValue(v)),\n            },\n          ],\n        }}\n        options={{\n          responsive: true,\n          legend: {\n            display: false,\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                ticks: {\n                  maxTicksLimit: latestHour - earliestHour,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                display: true,\n                type: \"linear\",\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default TestA;\n"]},"metadata":{},"sourceType":"module"}