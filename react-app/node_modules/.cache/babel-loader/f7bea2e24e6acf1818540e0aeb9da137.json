{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/EntryForm.js\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\nimport moment from 'moment'; // \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\n\nconst EntryForm = props => {\n  const locations = props.locations;\n  const events = props.events;\n  const chosenLocation = props.chosenLocation;\n  const chosenRoute = props.chosenRoute;\n  const chosenEvent = props.chosenEvent;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const [entry, setEntry] = useState({\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    user_id: 1\n  }); // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n\n  entry.location_id = chosenLocation;\n  entry.route_id = chosenRoute;\n  entry.event_id = chosenEvent; // update state of entry upon form field change\n\n  const handleEntryChange = e => {\n    const stateToChange = { ...entry\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  }; // post entry, reset attendee count and vehicle number to empty \"\", provide user \"success\" alert\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // const token = sessionStorage.getItem(\"token\");\n\n    apiManager.postEntry(entry).then(() => {\n      document.getElementById(\"attendee_count\").value = \"\";\n      document.getElementById(\"vehicle_number\").value = \"\";\n      setEntry({\n        attendee_count: \"\",\n        vehicle_number: \"\",\n        location_id: chosenLocation,\n        route_id: chosenRoute,\n        event_id: chosenEvent,\n        user_id: 1\n      });\n    });\n    console.log(entry);\n    alert(\"Success!\");\n  }; // console.log(moment().format().split(\"T\")[0])\n\n\n  console.log(moment().format('YYYY-MM-DD'));\n  console.log(\"date\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-form-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"event_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"New Entry Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"event_form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Select Event:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"event_id\",\n    native: true,\n    onChange: handleChosenEventChange,\n    fullWidth: true,\n    required: true,\n    value: chosenEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, events ? events.map(event => /*#__PURE__*/React.createElement(\"option\", {\n    key: event.id,\n    value: parseInt(event.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, event.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Select Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"location_id\",\n    native: true,\n    onChange: handleChosenLocationChange,\n    fullWidth: true,\n    required: true,\n    value: chosenLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, locations ? locations.map(location => /*#__PURE__*/React.createElement(\"option\", {\n    key: location.id,\n    value: parseInt(location.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, location.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Attendee Count:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"number\",\n    id: \"attendee_count\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Vehicle Number:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"vehicle_number\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n};\n\nexport default EntryForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/EntryForm.js"],"names":["React","useState","Grid","Button","TextField","InputLabel","Select","apiManager","moment","EntryForm","props","locations","events","chosenLocation","chosenRoute","chosenEvent","handleChosenLocationChange","handleChosenEventChange","entry","setEntry","attendee_count","vehicle_number","user_id","location_id","route_id","event_id","handleEntryChange","e","stateToChange","target","id","value","handleSubmit","preventDefault","postEntry","then","document","getElementById","console","log","alert","format","map","event","parseInt","name","location"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\nimport moment from 'moment';\n\n// \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\nconst EntryForm = (props) => {\n  const locations = props.locations;\n  const events = props.events;\n  const chosenLocation = props.chosenLocation;\n  const chosenRoute = props.chosenRoute;\n  const chosenEvent = props.chosenEvent;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const [entry, setEntry] = useState({\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    user_id: 1,\n  });\n\n  // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n  entry.location_id = chosenLocation;\n  entry.route_id = chosenRoute;\n  entry.event_id = chosenEvent;\n\n  // update state of entry upon form field change\n  const handleEntryChange = (e) => {\n    const stateToChange = { ...entry };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  // post entry, reset attendee count and vehicle number to empty \"\", provide user \"success\" alert\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // const token = sessionStorage.getItem(\"token\");\n    apiManager.postEntry(entry).then(() => {\n      document.getElementById(\"attendee_count\").value = \"\";\n      document.getElementById(\"vehicle_number\").value = \"\";\n      setEntry({\n        attendee_count: \"\",\n        vehicle_number: \"\",\n        location_id: chosenLocation,\n        route_id: chosenRoute,\n        event_id: chosenEvent,\n        user_id: 1\n      });\n    });\n    console.log(entry)\n    alert(\"Success!\");\n  };\n\n  // console.log(moment().format().split(\"T\")[0])\n  console.log(moment().format('YYYY-MM-DD'))\n\n  console.log(\"date\")\n\n  return (\n    <>\n      <div className=\"event-form-page\">\n        <h1 className=\"event_header\">New Entry Form</h1>\n        <form className=\"event_form\" onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Select Event:</InputLabel>\n              <Select\n                id=\"event_id\"\n                native\n                onChange={handleChosenEventChange}\n                fullWidth\n                required\n                value={chosenEvent}\n              >\n                {events ? (\n                  events.map((event) => (\n                    <option key={event.id} value={parseInt(event.id)}>\n                      {event.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Select Location:</InputLabel>\n              <Select\n                id=\"location_id\"\n                native\n                onChange={handleChosenLocationChange}\n                fullWidth\n                required\n                value={chosenLocation}\n              >\n                {locations ? (\n                  locations.map((location) => (\n                    <option key={location.id} value={parseInt(location.id)}>\n                      {location.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Attendee Count:{\" \"}\n              </InputLabel>\n              <TextField\n                required\n                type=\"number\"\n                id=\"attendee_count\"\n                fullWidth\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Vehicle Number:{\" \"}\n              </InputLabel>\n              <TextField\n                id=\"vehicle_number\"\n                fullWidth\n                onChange={handleEntryChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid>\n            <Button type=\"submit\">Submit</Button>\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default EntryForm;\n"]},"metadata":{},"sourceType":"module"}