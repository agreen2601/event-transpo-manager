{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeView.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DateCard from \"./dateCard\";\n\nconst RouteView = props => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const filteredDates = dates.filter(each => each.date.id === chosenDate);\n  console.log(filteredDates);\n  const [chosenDate, setChosenDate] = useState(\"\");\n\n  const handleChosenDateChange = e => {\n    setChosenDate(e.target.value); // setChosenDateName(e.target.options[e.target.selectedIndex].dataset.name);\n  };\n\n  console.log(\"dates\", dates);\n  console.log(\"routes\", routes);\n  console.log(\"chosendate\", chosenDate);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"date_id\",\n    native: true,\n    onChange: handleChosenDateChange,\n    fullWidth: true,\n    required: true,\n    value: chosenDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Choose Date\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: parseInt(date.id),\n    \"data-name\": date.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, date.date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, dates.filter(date => date.id === chosenDate).map(date => /*#__PURE__*/React.createElement(DateCard, Object.assign({\n    key: date.id,\n    date: date\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default RouteView;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeView.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Select","Typography","DateCard","RouteView","props","dates","routes","filteredDates","filter","each","date","id","chosenDate","console","log","setChosenDate","handleChosenDateChange","e","target","value","map","parseInt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AAEA,QAAMC,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,EAAV,KAAiBC,UAAtC,CAAtB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AAEA,QAAM,CAACK,UAAD,EAAaG,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMsB,sBAAsB,GAAIC,CAAD,IAAO;AACpCF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CADoC,CAEpC;AACD,GAHD;;AAKAN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,MAAtB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AAEA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,QAAQ,EAAEI,sBAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAEJ,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,iBAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EAWGP,KAAK,GACJA,KAAK,CAACe,GAAN,CAAWV,IAAD,iBACR;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,KAAK,EAAEU,QAAQ,CAACX,IAAI,CAACC,EAAN,CAFjB;AAGE,iBAAWD,IAAI,CAACA,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,IAAI,CAACA,IALR,CADF,CADI,gBAWJ,yCAtBJ,CAFF,CADF,eA6BE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CACHG,MADF,CACUE,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,UAD/B,EAEEQ,GAFF,CAEOV,IAAD,iBACH,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED;AAA9B,KAAwCN,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHH,CADH,CA7BF,CADF;AAuCD,CA1DD;;AA4DA,eAAeD,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DateCard from \"./dateCard\";\n\nconst RouteView = (props) => {\n  const dates = props.dates;\n  const routes = props.routes;\n\n  const filteredDates = dates.filter(each => each.date.id === chosenDate)\n\n  console.log(filteredDates)\n\n  const [chosenDate, setChosenDate] = useState(\"\");\n\n  const handleChosenDateChange = (e) => {\n    setChosenDate(e.target.value);\n    // setChosenDateName(e.target.options[e.target.selectedIndex].dataset.name);\n  };\n\n  console.log(\"dates\", dates);\n  console.log(\"routes\", routes);\n  console.log(\"chosendate\", chosenDate)\n\n  return (\n    <>\n      <Grid item xs={12} md={3}>\n        <InputLabel>Date:</InputLabel>\n        <Select\n          id=\"date_id\"\n          native\n          onChange={handleChosenDateChange}\n          fullWidth\n          required\n          value={chosenDate}\n        >\n          <option aria-label=\"None\" value=\"\" data-name=\"\">\n            Choose Date\n          </option>\n          {dates ? (\n            dates.map((date) => (\n              <option\n                key={date.id}\n                value={parseInt(date.id)}\n                data-name={date.date}\n              >\n                {date.date}\n              </option>\n            ))\n          ) : (\n            <></>\n          )}\n        </Select>\n      </Grid>\n      <div className=\"date_card\">\n        {dates\n          .filter((date) => date.id === chosenDate)\n          .map((date) => (\n            <DateCard key={date.id} date={date} {...props} />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default RouteView;\n"]},"metadata":{},"sourceType":"module"}