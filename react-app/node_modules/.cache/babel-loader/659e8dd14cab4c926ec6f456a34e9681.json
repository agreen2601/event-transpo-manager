{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentEditForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\n\nconst AssignmentEditForm = props => {\n  const [assignment, setAssignment] = useState({\n    driver_id: props.match.params.driverId,\n    vehicle_id: props.match.params.vehicleId,\n    route_id: props.match.params.routeId\n  });\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const getAssignment = assignId => {\n    apiManager.getSingleType(\"assignments\", assignId).then(assignment => {\n      setAssignment(assignment);\n    });\n  };\n\n  const getAllDropDowns = () => {\n    return apiManager.getType(\"routes\").then(r => {\n      r.sort((a, b) => a.name > b.name ? 1 : -1);\n      setRoutes(r);\n    }), apiManager.getType(\"drivers\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setDrivers(r);\n    }), apiManager.getType(\"vehicles\").then(r => {\n      r.sort((a, b) => a.number > b.number ? 1 : -1).sort((a, b) => a.company.localeCompare(b.company));\n      setVehicles(r);\n    });\n  };\n\n  const handleAssignmentChange = e => {\n    const stateToChange = { ...assignment\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setAssignment(stateToChange);\n  };\n\n  useEffect(() => {\n    getAssignment(props.match.params.assignmentId);\n    getAllDropDowns();\n  }, [props.match.params.assignmentId]);\n  const editedAssignment = {\n    id: props.match.params.assignmentId,\n    start_time: assignment.start_time,\n    end_time: assignment.end_time,\n    driver_id: assignment.driver_id,\n    vehicle_id: assignment.vehicle_id,\n    route_id: assignment.route_id,\n    date_id: assignment.date_id\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.getAssignmentsByDateDriver(assignment.date_id, assignment.driver_id).then(assignments => {\n      if (assignments.length > 0) {\n        alert(\"This driver has already been assigned on this day.\");\n      } else {\n        apiManager.updateType(\"assignments\", editedAssignment).then(() => props.history.push(`/route/view`));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Edit Assignment for \", assignment.driver.name), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Vehicle:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"vehicle_id\",\n    native: true,\n    onChange: handleAssignmentChange,\n    fullWidth: true,\n    required: true,\n    value: assignment.vehicle_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Choose Vehicle\"), vehicles ? vehicles.map(vehicle => /*#__PURE__*/React.createElement(\"option\", {\n    key: vehicle.id,\n    value: parseInt(vehicle.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, vehicle.company, \" \", vehicle.number)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"route_id\",\n    native: true,\n    onChange: handleAssignmentChange,\n    fullWidth: true,\n    required: true,\n    value: assignment.route_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Choose Route\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: parseInt(route.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AssignmentEditForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentEditForm.js"],"names":["React","useState","useEffect","Grid","Button","InputLabel","Typography","Select","apiManager","AssignmentEditForm","props","assignment","setAssignment","driver_id","match","params","driverId","vehicle_id","vehicleId","route_id","routeId","routes","setRoutes","drivers","setDrivers","vehicles","setVehicles","getAssignment","assignId","getSingleType","then","getAllDropDowns","getType","r","sort","a","b","name","localeCompare","number","company","handleAssignmentChange","e","stateToChange","target","id","value","assignmentId","editedAssignment","start_time","end_time","date_id","handleSubmit","preventDefault","getAssignmentsByDateDriver","assignments","length","alert","updateType","history","push","driver","map","vehicle","parseInt","route","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\n\nconst AssignmentEditForm = (props) => {\n  const [assignment, setAssignment] = useState({\n    driver_id: props.match.params.driverId,\n    vehicle_id: props.match.params.vehicleId,\n    route_id: props.match.params.routeId,\n  });\n\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const getAssignment = (assignId) => {\n    apiManager.getSingleType(\"assignments\", assignId).then((assignment) => {\n      setAssignment(assignment);\n    });\n  };\n\n  const getAllDropDowns = () => {\n    return (\n      apiManager.getType(\"routes\").then((r) => {\n        r.sort((a, b) => (a.name > b.name ? 1 : -1));\n        setRoutes(r);\n      }),\n      apiManager.getType(\"drivers\").then((r) => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setDrivers(r);\n      }),\n      apiManager.getType(\"vehicles\").then((r) => {\n        r.sort((a, b) => (a.number > b.number ? 1 : -1)).sort((a, b) =>\n          a.company.localeCompare(b.company)\n        );\n        setVehicles(r);\n      })\n    );\n  };\n\n  const handleAssignmentChange = (e) => {\n    const stateToChange = { ...assignment };\n    stateToChange[e.target.id] = e.target.value;\n    setAssignment(stateToChange);\n  };\n\n  useEffect(() => {\n    getAssignment(props.match.params.assignmentId);\n    getAllDropDowns();\n  }, [props.match.params.assignmentId]);\n\n  const editedAssignment = {\n    id: props.match.params.assignmentId,\n    start_time: assignment.start_time,\n    end_time: assignment.end_time,\n    driver_id: assignment.driver_id,\n    vehicle_id: assignment.vehicle_id,\n    route_id: assignment.route_id,\n    date_id: assignment.date_id,\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager\n      .getAssignmentsByDateDriver(assignment.date_id, assignment.driver_id)\n      .then((assignments) => {\n        if (assignments.length > 0) {\n          alert(\"This driver has already been assigned on this day.\");\n        } else {\n          apiManager\n            .updateType(\"assignments\", editedAssignment)\n            .then(() => props.history.push(`/route/view`));\n        }\n      });\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Edit Assignment for {assignment.driver.name}\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Vehicle:</InputLabel>\n            <Select\n              id=\"vehicle_id\"\n              native\n              onChange={handleAssignmentChange}\n              fullWidth\n              required\n              value={assignment.vehicle_id}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Vehicle\n              </option>\n              {vehicles ? (\n                vehicles.map((vehicle) => (\n                  <option key={vehicle.id} value={parseInt(vehicle.id)}>\n                    {vehicle.company} {vehicle.number}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Route:</InputLabel>\n            <Select\n              id=\"route_id\"\n              native\n              onChange={handleAssignmentChange}\n              fullWidth\n              required\n              value={assignment.route_id}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Route\n              </option>\n              {routes ? (\n                routes.map((route) => (\n                  <option key={route.id} value={parseInt(route.id)}>\n                    {route.name} {route.description}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AssignmentEditForm;\n"]},"metadata":{},"sourceType":"module"}