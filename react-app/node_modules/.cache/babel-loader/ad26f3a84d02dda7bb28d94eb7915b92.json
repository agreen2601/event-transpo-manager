{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/RouteGraph.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst RouteGraph = props => {\n  const entries = props.entriesByDate;\n\n  if (entries != undefined) {\n    console.log(entries);\n  }\n\n  let state = {};\n\n  if (entries != undefined) {\n    state = {\n      labels: [entries[0], entries[entries.length - 1]],\n      datasets: [{\n        backgroundColor: \"rgba(75,192,192,1)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n        data: entries.map(entry => entry.attendee_count)\n      }]\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"Attendee counts over time\",\n        fontSize: 20\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          // labels: entries.map((entry) => entry.time),\n          // type: \"time\",\n          distribution: \"linear\"\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RouteGraph;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/RouteGraph.js"],"names":["React","Bar","RouteGraph","props","entries","entriesByDate","undefined","console","log","state","labels","length","datasets","backgroundColor","borderColor","borderWidth","data","map","entry","attendee_count","title","display","text","fontSize","legend","scales","xAxes","distribution","yAxes","ticks","beginAtZero"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,OAAO,GAAGD,KAAK,CAACE,aAAtB;;AAEA,MAAID,OAAO,IAAIE,SAAf,EAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACD;;AAED,MAAIK,KAAK,GAAG,EAAZ;;AAEA,MAAIL,OAAO,IAAIE,SAAf,EAA0B;AAC1BG,IAAAA,KAAK,GAAG;AACNC,MAAAA,MAAM,EAAE,CAACN,OAAO,CAAC,CAAD,CAAR,EAAaA,OAAO,CAACA,OAAO,CAACO,MAAR,GAAiB,CAAlB,CAApB,CADF;AAENC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,eAAe,EAAE,oBADnB;AAEEC,QAAAA,WAAW,EAAE,eAFf;AAGEC,QAAAA,WAAW,EAAE,CAHf;AAIEC,QAAAA,IAAI,EAAEZ,OAAO,CAACa,GAAR,CAAaC,KAAD,IAAWA,KAAK,CAACC,cAA7B;AAJR,OADQ;AAFJ,KAAR;AAWD;;AAEC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEV,KADR;AAEE,IAAA,OAAO,EAAE;AACPW,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,2BAFD;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OADA;AAMPC,MAAAA,MAAM,EAAE;AACNH,QAAAA,OAAO,EAAE;AADH,OAND;AASPI,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACE;AACA;AACAC,UAAAA,YAAY,EAAE;AAHhB,SADK,CADD;AAQNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR;AADT,SADK;AARD;AATD,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAiCD,CAxDD;;AA0DA,eAAe5B,UAAf","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst RouteGraph = (props) => {\n  const entries = props.entriesByDate;\n\n  if (entries != undefined) {\n    console.log(entries)\n  }\n\n  let state = {}\n\n  if (entries != undefined) {\n  state = {\n    labels: [entries[0], entries[entries.length - 1]],\n    datasets: [\n      {\n        backgroundColor: \"rgba(75,192,192,1)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n        data: entries.map((entry) => entry.attendee_count),\n      },\n    ],\n  };\n}\n\n  return (\n    <div>\n      <Bar\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text: \"Attendee counts over time\",\n            fontSize: 20,\n          },\n          legend: {\n            display: false,\n          },\n          scales: {\n            xAxes: [\n              {\n                // labels: entries.map((entry) => entry.time),\n                // type: \"time\",\n                distribution: \"linear\",\n              },\n            ],\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RouteGraph;\n"]},"metadata":{},"sourceType":"module"}