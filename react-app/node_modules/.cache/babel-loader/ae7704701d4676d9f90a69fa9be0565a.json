{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeCard.js\";\nimport React, { useEffect, useState } from \"../../node_modules/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport apiManager from \"../api/apiManager\";\nimport AssignmentCard from \"./assignmentCard\";\nimport \"../styles.css\";\n\nconst RouteCard = props => {\n  const chosenDate = props.chosenDate;\n  const route = props.route;\n  const [assignments, setAssignments] = useState([]);\n  useEffect(() => {\n    apiManager.getAssignmentsByDateRoute(parseInt(chosenDate), route.id).then(r => {\n      setAssignments(r);\n    });\n  }, [chosenDate, route.id]); // const removeAssignment = (type, id, dateId, routeId) => {\n  //   apiManager.deleteTypeWithId(type, id).then(() =>\n  //     apiManager\n  //       .getAssignmentsByDateRoute(dateId, routeId)\n  //       .then((APIResult) => {\n  //         setAssignments(APIResult);\n  //       })\n  //   );\n  // };\n  // const routeHeader = {\n  //   color: props.route.color,\n  //   fontSize: \"larger\",\n  //   fontWeight: 600,\n  //   marginRight: \"20px\"\n  // };\n\n  const routeColor = {\n    color: route.color\n  };\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 6\n    },\n    paper: {\n      padding: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n  let routeName = \"\";\n  parseInt(route.name) < 10 ? routeName = route.name.slice(1) : routeName = route.name;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"route_border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: routeColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Route \", routeName, \" \", route.description), /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n    className: \"add_driver_icon\",\n    align: \"right\",\n    style: {\n      fontSize: 20\n    },\n    onClick: () => props.history.push(`/add/${props.route.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, assignments.map(assignment => /*#__PURE__*/React.createElement(AssignmentCard, Object.assign({\n    key: assignment.id,\n    assignment: assignment // removeAssignment={removeAssignment}\n\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"route_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default RouteCard;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeCard.js"],"names":["React","useEffect","useState","makeStyles","Grid","Box","Paper","AddCircleOutlineIcon","apiManager","AssignmentCard","RouteCard","props","chosenDate","route","assignments","setAssignments","getAssignmentsByDateRoute","parseInt","id","then","r","routeColor","color","useStyles","theme","root","flexGrow","paper","padding","spacing","classes","routeName","name","slice","description","fontSize","history","push","map","assignment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"../../node_modules/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport apiManager from \"../api/apiManager\";\nimport AssignmentCard from \"./assignmentCard\";\nimport \"../styles.css\";\n\nconst RouteCard = (props) => {\n  const chosenDate = props.chosenDate;\n  const route = props.route;\n  const [assignments, setAssignments] = useState([]);\n\n  useEffect(() => {\n    apiManager\n      .getAssignmentsByDateRoute(parseInt(chosenDate), route.id)\n      .then((r) => {\n        setAssignments(r);\n      });\n  }, [chosenDate, route.id]);\n\n  // const removeAssignment = (type, id, dateId, routeId) => {\n  //   apiManager.deleteTypeWithId(type, id).then(() =>\n  //     apiManager\n  //       .getAssignmentsByDateRoute(dateId, routeId)\n  //       .then((APIResult) => {\n  //         setAssignments(APIResult);\n  //       })\n  //   );\n  // };\n\n  // const routeHeader = {\n  //   color: props.route.color,\n  //   fontSize: \"larger\",\n  //   fontWeight: 600,\n  //   marginRight: \"20px\"\n  // };\n\n  const routeColor = {\n    color: route.color,\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 6,\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n\n  let routeName = \"\";\n  parseInt(route.name) < 10\n    ? (routeName = route.name.slice(1))\n    : (routeName = route.name);\n\n  return (\n    <>\n      <Grid container spacing={2} className=\"route_border\">\n        <Grid item xs={6}>\n          <Box border={1}>\n            <Paper className={classes.paper}>\n              <span style={routeColor}>\n                Route {routeName} {route.description}\n              </span>\n              <AddCircleOutlineIcon\n                className=\"add_driver_icon\"\n                align=\"right\"\n                style={{ fontSize: 20 }}\n                onClick={() => props.history.push(`/add/${props.route.id}`)}\n              />\n              <div>\n                {assignments.map((assignment) => (\n                  <AssignmentCard\n                    key={assignment.id}\n                    assignment={assignment}\n                    // removeAssignment={removeAssignment}\n                    {...props}\n                  />\n                ))}\n              </div>\n            </Paper>\n          </Box>\n        </Grid>\n        <div className=\"route_heading\">\n          {/* {favoriteRouteIDs.length !== 0 ? (\n            <span className=\"route_icon\" id-=\"unStar\" onClick={unStar}>\n              unstar\n            </span>\n          ) : null}\n          {favoriteRouteIDs.length === 0 ? (\n            <span className=\"route_icon\" id=\"star\" onClick={star}>\n              star\n            </span>\n          ) : null} */}\n        </div>\n      </Grid>\n    </>\n  );\n};\n\nexport default RouteCard;\n"]},"metadata":{},"sourceType":"module"}