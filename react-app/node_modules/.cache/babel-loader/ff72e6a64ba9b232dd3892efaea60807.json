{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/eventTranspoTracker.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport Log from \"./reports/log\";\n\nconst EventTranspoTracker = props => {\n  const hasUser = props.hasUser; // places routes and shuttles fill the dropdown menus\n  // places filter based on chosenRoute\n  // chosenPlace chosenRoute and chosenShuttle are the choices made from the dropdowns\n\n  const [dates, setDates] = useState([]);\n  const [shuttles, setShuttles] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [places, setPlaces] = useState([]);\n  const [entries, setEntries] = useState([]);\n  const [chosenDate, setChosenDate] = useState(\"\");\n  const [chosenShuttleId, setChosenShuttleId] = useState(\"\");\n  const [chosenShuttleName, setChosenShuttleName] = useState(\"\");\n  const [chosenRoute, setChosenRoute] = useState(\"\");\n  const [chosenPlaceId, setChosenPlaceId] = useState(\"\");\n  const [chosenPlaceName, setChosenPlaceName] = useState(\"\"); // get and sort all dropdowns\n\n  const getAllDropDowns = () => {\n    return apiManager.getAllType(\"dates\").then(r => {\n      r.sort((a, b) => a.date.localeCompare(b.date));\n      setDates(r);\n    }), apiManager.getAllType(\"shuttles\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setShuttles(r);\n    }), apiManager.getAllType(\"routes\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setRoutes(r);\n    }), apiManager.getAllType(\"places\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setPlaces(r);\n    });\n  };\n\n  const getEntries = () => {\n    apiManager.getAllType(\"entries\").then(r => {\n      r.sort((a, b) => a.date.localeCompare(b.date));\n      setEntries(r);\n    });\n  }; // set chosePlace based on choice from dropdown menu\n\n\n  const handleChosenPlaceChange = e => {\n    setChosenPlaceId(e.target.value);\n    setChosenPlaceName(e.target.options[e.target.selectedIndex].dataset.name);\n\n    if (e.target.value !== \"\") {} else {\n      apiManager.getAllType(\"routes\").then(r => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setRoutes(r);\n      });\n    }\n  }; // // set choseroute based on choice from dropdown menu on form log and graph\n\n\n  const handleChosenRouteChange = e => {\n    const routeId = e.target.value;\n    setChosenRoute(routeId);\n    setChosenPlaceId(\"\");\n    setChosenPlaceName(\"\");\n    apiManager.getAllType(\"places\").then(r => {\n      if (routeId !== \"\") {\n        setPlaces(r.filter(each => each.route.name === routeId).sort((a, b) => a.name.localeCompare(b.name)));\n      } else {\n        setPlaces(r.sort((a, b) => a.name.localeCompare(b.name)));\n      }\n    });\n  }; // set chosenShuttleId based on choice from dropdown menu\n\n\n  const handleChosenShuttleChange = e => {\n    setChosenShuttleId(e.target.value);\n    setChosenShuttleName(e.target.options[e.target.selectedIndex].dataset.name);\n  }; // set chosenDate based on choice from dropdown menu\n\n\n  const handleChosenDateChange = e => {\n    const dateId = e.target.value;\n    setChosenDate(dateId);\n  };\n\n  useEffect(() => {\n    getAllDropDowns();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"tracker\"), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(EntryForm, Object.assign({\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      dates: dates,\n      chosenPlaceId: chosenPlaceId,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/edit/form/:entryId(\\\\d+)\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(EntryEditForm, Object.assign({\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      dates: dates,\n      chosenPlaceId: chosenPlaceId,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/log\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(Log, Object.assign({\n      getEntries: getEntries,\n      dates: dates,\n      shuttles: shuttles,\n      routes: routes,\n      places: places,\n      entries: entries,\n      chosenPlaceId: chosenPlaceId,\n      chosenPlaceName: chosenPlaceName,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenShuttleName: chosenShuttleName,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/graph\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(RouteReport, Object.assign({\n      getEntries: getEntries,\n      dates: dates,\n      shuttles: shuttles,\n      routes: routes,\n      places: places,\n      entries: entries,\n      chosenPlaceId: chosenPlaceId,\n      chosenPlaceName: chosenPlaceName,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenShuttleName: chosenShuttleName,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default EventTranspoTracker;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/eventTranspoTracker.js"],"names":["React","useState","useEffect","Route","Redirect","EntryForm","EntryEditForm","apiManager","RouteReport","Log","EventTranspoTracker","props","hasUser","dates","setDates","shuttles","setShuttles","routes","setRoutes","places","setPlaces","entries","setEntries","chosenDate","setChosenDate","chosenShuttleId","setChosenShuttleId","chosenShuttleName","setChosenShuttleName","chosenRoute","setChosenRoute","chosenPlaceId","setChosenPlaceId","chosenPlaceName","setChosenPlaceName","getAllDropDowns","getAllType","then","r","sort","a","b","date","localeCompare","name","getEntries","handleChosenPlaceChange","e","target","value","options","selectedIndex","dataset","handleChosenRouteChange","routeId","filter","each","route","handleChosenShuttleChange","handleChosenDateChange","dateId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport Log from \"./reports/log\";\n\nconst EventTranspoTracker = (props) => {\n  const hasUser = props.hasUser;\n\n  // places routes and shuttles fill the dropdown menus\n  // places filter based on chosenRoute\n  // chosenPlace chosenRoute and chosenShuttle are the choices made from the dropdowns\n  const [dates, setDates] = useState([]);\n  const [shuttles, setShuttles] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [places, setPlaces] = useState([]);\n  const [entries, setEntries] = useState([]);\n  const [chosenDate, setChosenDate] = useState(\"\");\n  const [chosenShuttleId, setChosenShuttleId] = useState(\"\");\n  const [chosenShuttleName, setChosenShuttleName] = useState(\"\");\n  const [chosenRoute, setChosenRoute] = useState(\"\");\n  const [chosenPlaceId, setChosenPlaceId] = useState(\"\");\n  const [chosenPlaceName, setChosenPlaceName] = useState(\"\");\n\n  // get and sort all dropdowns\n  const getAllDropDowns = () => {\n    return (\n      apiManager.getAllType(\"dates\").then((r) => {\n        r.sort((a, b) => a.date.localeCompare(b.date));\n        setDates(r);\n      }),\n      apiManager.getAllType(\"shuttles\").then((r) => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setShuttles(r);\n      }),\n      apiManager.getAllType(\"routes\").then((r) => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setRoutes(r);\n      }),\n      apiManager.getAllType(\"places\").then((r) => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setPlaces(r);\n      })\n    );\n  };\n\n  const getEntries = () => {\n    apiManager.getAllType(\"entries\").then((r) => {\n      r.sort((a, b) => a.date.localeCompare(b.date));\n      setEntries(r);\n    });\n  };\n\n  // set chosePlace based on choice from dropdown menu\n  const handleChosenPlaceChange = (e) => {\n    setChosenPlaceId(e.target.value);\n    setChosenPlaceName(e.target.options[e.target.selectedIndex].dataset.name);\n    if (e.target.value !== \"\") {\n    } else {\n      apiManager.getAllType(\"routes\").then((r) => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setRoutes(r);\n      });\n    }\n  };\n\n  // // set choseroute based on choice from dropdown menu on form log and graph\n  const handleChosenRouteChange = (e) => {\n    const routeId = e.target.value;\n    setChosenRoute(routeId);\n    setChosenPlaceId(\"\");\n    setChosenPlaceName(\"\");\n    apiManager.getAllType(\"places\").then((r) => {\n      if (routeId !== \"\") {\n        setPlaces(\n          r\n            .filter((each) => each.route.name === routeId)\n            .sort((a, b) => a.name.localeCompare(b.name))\n        );\n      } else {\n        setPlaces(r.sort((a, b) => a.name.localeCompare(b.name)));\n      }\n    });\n  };\n\n  // set chosenShuttleId based on choice from dropdown menu\n  const handleChosenShuttleChange = (e) => {\n    setChosenShuttleId(e.target.value);\n    setChosenShuttleName(e.target.options[e.target.selectedIndex].dataset.name);\n  };\n\n  // set chosenDate based on choice from dropdown menu\n  const handleChosenDateChange = (e) => {\n    const dateId = e.target.value;\n    setChosenDate(dateId);\n  };\n\n  useEffect(() => {\n    getAllDropDowns();\n  }, []);\n\n  return (\n    <span>\n      <span>tracker</span>\n      <Route exact path=\"/\" render={() => <Redirect to=\"/entry/form\" />} />\n      <Route\n        exact\n        path=\"/entry/form\"\n        render={(props) =>\n          hasUser ? (\n            <EntryForm\n              places={places}\n              routes={routes}\n              shuttles={shuttles}\n              dates={dates}\n              chosenPlaceId={chosenPlaceId}\n              chosenRoute={chosenRoute}\n              chosenShuttleId={chosenShuttleId}\n              chosenDate={chosenDate}\n              handleChosenPlaceChange={handleChosenPlaceChange}\n              handleChosenRouteChange={handleChosenRouteChange}\n              handleChosenShuttleChange={handleChosenShuttleChange}\n              handleChosenDateChange={handleChosenDateChange}\n              {...props}\n            />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/entry/edit/form/:entryId(\\d+)\"\n        render={(props) =>\n          hasUser ? (\n            <EntryEditForm\n              places={places}\n              routes={routes}\n              shuttles={shuttles}\n              dates={dates}\n              chosenPlaceId={chosenPlaceId}\n              chosenRoute={chosenRoute}\n              chosenShuttleId={chosenShuttleId}\n              chosenDate={chosenDate}\n              handleChosenPlaceChange={handleChosenPlaceChange}\n              handleChosenRouteChange={handleChosenRouteChange}\n              handleChosenShuttleChange={handleChosenShuttleChange}\n              handleChosenDateChange={handleChosenDateChange}\n              {...props}\n            />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/log\"\n        render={(props) =>\n          hasUser ? (\n            <Log\n              getEntries={getEntries}\n              dates={dates}\n              shuttles={shuttles}\n              routes={routes}\n              places={places}\n              entries={entries}\n              chosenPlaceId={chosenPlaceId}\n              chosenPlaceName={chosenPlaceName}\n              chosenRoute={chosenRoute}\n              chosenShuttleId={chosenShuttleId}\n              chosenShuttleName={chosenShuttleName}\n              chosenDate={chosenDate}\n              handleChosenPlaceChange={handleChosenPlaceChange}\n              handleChosenRouteChange={handleChosenRouteChange}\n              handleChosenShuttleChange={handleChosenShuttleChange}\n              handleChosenDateChange={handleChosenDateChange}\n              {...props}\n            />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/graph\"\n        render={(props) =>\n          hasUser ? (\n            <RouteReport\n              getEntries={getEntries}\n              dates={dates}\n              shuttles={shuttles}\n              routes={routes}\n              places={places}\n              entries={entries}\n              chosenPlaceId={chosenPlaceId}\n              chosenPlaceName={chosenPlaceName}\n              chosenRoute={chosenRoute}\n              chosenShuttleId={chosenShuttleId}\n              chosenShuttleName={chosenShuttleName}\n              chosenDate={chosenDate}\n              handleChosenPlaceChange={handleChosenPlaceChange}\n              handleChosenRouteChange={handleChosenRouteChange}\n              handleChosenShuttleChange={handleChosenShuttleChange}\n              handleChosenDateChange={handleChosenDateChange}\n              {...props}\n            />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n    </span>\n  );\n};\n\nexport default EventTranspoTracker;\n"]},"metadata":{},"sourceType":"module"}