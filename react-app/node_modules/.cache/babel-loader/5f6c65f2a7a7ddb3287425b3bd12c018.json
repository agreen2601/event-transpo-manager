{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/placeForm.js\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\n\nconst PlaceForm = props => {\n  const routes = props.routes;\n  const [place, setPlace] = useState({\n    name: \"\"\n  });\n  const [chosenRoute, setChosenRoute] = useState(\"\");\n\n  const handleChosenRouteChange = e => {\n    const routeId = e.target.value;\n    setChosenRoute(routeId);\n  };\n\n  place.route_id = chosenRoute; // update state of place upon form field change\n\n  const handlePlaceChange = e => {\n    const stateToChange = { ...place\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setPlace(stateToChange);\n  }; // post place, reset fields to empty \"\", provide user \"success\" alert\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.postType(\"places\", place).then(() => {\n      document.getElementById(\"name\").value = \"\";\n      setPlace({\n        name: \"\"\n      });\n    });\n    alert(\"Success!\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Location Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    fullWidth: true,\n    required: true,\n    onChange: handlePlaceChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"id\",\n    native: true,\n    onChange: handleChosenRouteChange,\n    fullWidth: true,\n    required: true,\n    value: chosenRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Choose Route\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default PlaceForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/placeForm.js"],"names":["React","useState","Grid","Button","TextField","InputLabel","Typography","Select","apiManager","PlaceForm","props","routes","place","setPlace","name","chosenRoute","setChosenRoute","handleChosenRouteChange","e","routeId","target","value","route_id","handlePlaceChange","stateToChange","id","handleSubmit","preventDefault","postType","then","document","getElementById","alert","map","route","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\n\nconst PlaceForm = (props) => {\n  const routes = props.routes;\n  const [place, setPlace] = useState({\n    name: \"\",\n  });\n\n  const [chosenRoute, setChosenRoute] = useState(\"\");\n\n  const handleChosenRouteChange = (e) => {\n    const routeId = e.target.value;\n    setChosenRoute(routeId);\n  };\n\n  place.route_id = chosenRoute;\n\n  // update state of place upon form field change\n  const handlePlaceChange = (e) => {\n    const stateToChange = { ...place };\n    stateToChange[e.target.id] = e.target.value;\n    setPlace(stateToChange);\n  };\n\n  // post place, reset fields to empty \"\", provide user \"success\" alert\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager.postType(\"places\", place).then(() => {\n      document.getElementById(\"name\").value = \"\";\n      setPlace({\n        name: \"\",\n      });\n    });\n    alert(\"Success!\");\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Location Form\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Name: </InputLabel>\n            <TextField\n              id=\"name\"\n              fullWidth\n              required\n              onChange={handlePlaceChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Route:</InputLabel>\n            <Select\n              id=\"id\"\n              native\n              onChange={handleChosenRouteChange}\n              fullWidth\n              required\n              value={chosenRoute}\n            >\n              <option aria-label=\"None\" value=\"\">\n                Choose Route\n              </option>\n              {routes ? (\n                routes.map((route) => (\n                  <option key={route.id} value={route.id}>\n                    {route.name} {route.description}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PlaceForm;\n"]},"metadata":{},"sourceType":"module"}