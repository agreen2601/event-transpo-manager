{"ast":null,"code":"import baseurl from \"./baseurl\";\nexport default {\n  getAllType(type) {\n    return fetch(`${baseurl}/${type}`).then(r => r.json());\n  },\n\n  getSingleType(type, id) {\n    return fetch(`${baseurl}/${type}/${id}`).then(r => r.json());\n  },\n\n  postEntry(newEntry) {\n    return fetch(`${baseurl}/entries`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Token ${window.sessionStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(newEntry)\n    }).then(r => r.json());\n  },\n\n  updateEntry(entry) {\n    return fetch(`${baseurl}/entries/${entry.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Token ${window.sessionStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(entry)\n    });\n  },\n\n  deleteEntry(id) {\n    return fetch(`${baseurl}/entries/${id}`, {\n      method: \"DELETE\"\n    });\n  },\n\n  register(userToPost) {\n    return fetch(`${baseurl}/register/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userToPost)\n    }).then(result => result.json());\n  },\n\n  login(userToLogin) {\n    return fetch(`${baseurl}/login/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userToLogin)\n    }).then(result => result.json());\n  },\n\n  // manager\n  getAssignments() {\n    return fetch(`${remoteURL}/assignments/?_expand=route&_expand=vehicle&_expand=driver&_expand=date`).then(result => result.json());\n  },\n\n  getAssignmentById(id) {\n    return fetch(`${remoteURL}/assignments/${id}?_expand=route&_expand=vehicle&_expand=driver&_expand=date`).then(result => result.json());\n  },\n\n  getAssignmentsByDateRoute(dateId, routeId) {\n    return fetch(`${remoteURL}/assignments?dateId=${dateId}&routeId=${routeId}&_expand=driver&_expand=vehicle`).then(result => result.json());\n  },\n\n  getAssignmentByDateRouteDriver(dateId, routeId, driverId) {\n    return fetch(`${remoteURL}/assignments/?dateId=${dateId}&routeId=${routeId}&driverId=${driverId}&_expand=driver&_expand=vehicle`).then(result => result.json());\n  },\n\n  getType(type) {\n    return fetch(`${remoteURL}/${type}?_embed=assignments`).then(result => result.json());\n  },\n\n  getTypeWithId(type, id) {\n    return fetch(`${remoteURL}/${type}/${id}?_embed=assignments`).then(result => result.json());\n  },\n\n  getUsers() {\n    return fetch(`${remoteURL}/users`).then(result => result.json());\n  },\n\n  getFavorites(userId) {\n    return fetch(`${remoteURL}/favoriteRoutes?userId=${userId}&_expand=route`).then(result => result.json());\n  },\n\n  addType(type, newType) {\n    return fetch(`${remoteURL}/${type}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newType)\n    }).then(data => data.json());\n  },\n\n  updateType(type, editedType) {\n    return fetch(`${remoteURL}/${type}/${editedType.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedType)\n    }).then(data => data.json());\n  },\n\n  deleteTypeWithId(type, id) {\n    return fetch(`${remoteURL}/${type}/${id}`, {\n      method: \"DELETE\"\n    }).then(result => result.json);\n  }\n\n};","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/api/apiManager.js"],"names":["baseurl","getAllType","type","fetch","then","r","json","getSingleType","id","postEntry","newEntry","method","headers","Accept","Authorization","window","sessionStorage","getItem","body","JSON","stringify","updateEntry","entry","deleteEntry","register","userToPost","result","login","userToLogin","getAssignments","remoteURL","getAssignmentById","getAssignmentsByDateRoute","dateId","routeId","getAssignmentByDateRouteDriver","driverId","getType","getTypeWithId","getUsers","getFavorites","userId","addType","newType","data","updateType","editedType","deleteTypeWithId"],"mappings":"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","sourcesContent":["import baseurl from \"./baseurl\";\n\nexport default {\n  getAllType(type) {\n    return fetch(`${baseurl}/${type}`).then((r) => r.json());\n  },\n  getSingleType(type, id) {\n    return fetch(`${baseurl}/${type}/${id}`).then((r) => r.json());\n  },\n  postEntry(newEntry) {\n    return fetch(`${baseurl}/entries`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Token ${window.sessionStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify(newEntry),\n    }).then((r) => r.json());\n  },\n  updateEntry(entry) {\n    return fetch(`${baseurl}/entries/${entry.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Token ${window.sessionStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify(entry),\n    });\n  },\n  deleteEntry(id) {\n    return fetch(`${baseurl}/entries/${id}`, {\n      method: \"DELETE\",\n    });\n  },\n  register(userToPost) {\n    return fetch(`${baseurl}/register/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userToPost),\n    }).then((result) => result.json());\n  },\n  login(userToLogin) {\n    return fetch(`${baseurl}/login/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userToLogin),\n    }).then((result) => result.json());\n  },\n\n  // manager\n  \n  getAssignments() {\n    return fetch(\n      `${remoteURL}/assignments/?_expand=route&_expand=vehicle&_expand=driver&_expand=date`\n    ).then(result => result.json());\n  },\n  getAssignmentById(id) {\n    return fetch(\n      `${remoteURL}/assignments/${id}?_expand=route&_expand=vehicle&_expand=driver&_expand=date`\n    ).then(result => result.json());\n  },\n  getAssignmentsByDateRoute(dateId, routeId) {\n    return fetch(\n      `${remoteURL}/assignments?dateId=${dateId}&routeId=${routeId}&_expand=driver&_expand=vehicle`\n    ).then(result => result.json());\n  },\n  getAssignmentByDateRouteDriver(dateId, routeId, driverId) {\n    return fetch(\n      `${remoteURL}/assignments/?dateId=${dateId}&routeId=${routeId}&driverId=${driverId}&_expand=driver&_expand=vehicle`\n    ).then(result => result.json());\n  },\n  getType(type) {\n    return fetch(`${remoteURL}/${type}?_embed=assignments`).then(result =>\n      result.json()\n    );\n  },\n  getTypeWithId(type, id) {\n    return fetch(`${remoteURL}/${type}/${id}?_embed=assignments`).then(result =>\n      result.json()\n    );\n  },\n  getUsers() {\n    return fetch(`${remoteURL}/users`).then(result =>\n      result.json()\n    );\n  },\n  getFavorites(userId) {\n    return fetch(\n      `${remoteURL}/favoriteRoutes?userId=${userId}&_expand=route`\n    ).then(result => result.json());\n  },\n  addType(type, newType) {\n    return fetch(`${remoteURL}/${type}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newType)\n    }).then(data => data.json());\n  },\n  updateType(type, editedType) {\n    return fetch(`${remoteURL}/${type}/${editedType.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedType)\n    }).then(data => data.json());\n  },\n  deleteTypeWithId(type, id) {\n    return fetch(`${remoteURL}/${type}/${id}`, {\n      method: \"DELETE\"\n    }).then(result => result.json);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}