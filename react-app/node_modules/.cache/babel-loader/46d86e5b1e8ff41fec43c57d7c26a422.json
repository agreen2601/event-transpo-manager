{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentEditForm.js\";\nimport React, { useState, useEffect } from \"../../node_modules/react\";\nimport apiManager from \"../apiManager/apiManager\";\n\nconst AssignmentEditForm = props => {\n  const [assignment, setAssignment] = useState({\n    startTime: \"\",\n    endTime: \"\",\n    driverId: props.match.params.driverId,\n    vehicleId: props.match.params.vehicleId,\n    routeId: 3,\n    dateId: props.chosenDate\n  });\n  const [dates, setDates] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const handleAssignmentChange = event => {\n    const stateToChange = { ...assignment\n    };\n\n    if (event.target.id === \"startTime\" || event.target.id === \"endTime\") {\n      stateToChange[event.target.id] = event.target.value;\n    } else {\n      stateToChange[event.target.id] = parseInt(event.target.value);\n    }\n\n    setAssignment(stateToChange);\n  };\n\n  const getAssignment = assignId => {\n    apiManager.getAssignmentById(assignId).then(assignment => {\n      setAssignment(assignment);\n    });\n  };\n\n  const getAllDropDowns = () => {\n    return apiManager.getType(\"dates\").then(datesFromApi => {\n      datesFromApi.sort((a, b) => a.number > b.number ? -1 : 1);\n      setDates(datesFromApi);\n    }), apiManager.getType(\"routes\").then(routesFromApi => {\n      routesFromApi.sort((a, b) => a.number > b.number ? 1 : -1);\n      setRoutes(routesFromApi);\n    }), apiManager.getType(\"drivers\").then(driversFromApi => {\n      driversFromApi.sort((a, b) => a.name.localeCompare(b.name));\n      setDrivers(driversFromApi);\n    }), apiManager.getType(\"vehicles\").then(vehiclesFromApi => {\n      vehiclesFromApi.sort((a, b) => a.company.localeCompare(b.company));\n      setVehicles(vehiclesFromApi);\n    });\n  };\n\n  useEffect(() => {\n    getAssignment(props.match.params.assignmentId);\n    getAllDropDowns();\n  }, [props.match.params.assignmentId]);\n\n  const submit = () => {\n    const editedAssignment = {\n      id: props.match.params.assignmentId,\n      startTime: assignment.startTime,\n      endTime: assignment.endTime,\n      driverId: assignment.driverId,\n      vehicleId: assignment.vehicleId,\n      routeId: assignment.routeId,\n      dateId: assignment.dateId\n    };\n    apiManager.updateType(\"assignments\", editedAssignment).then(() => props.history.push(`/routeview`));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Edit Assignment\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Driver: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"driverId\",\n    onChange: handleAssignmentChange,\n    value: assignment.driverId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, drivers.map(driver => /*#__PURE__*/React.createElement(\"option\", {\n    className: \"driver_option\",\n    key: driver.id,\n    value: driver.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, driver.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Vehicle: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"vehicleId\",\n    onChange: handleAssignmentChange,\n    value: assignment.vehicleId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, vehicles.map(vehicle => /*#__PURE__*/React.createElement(\"option\", {\n    key: vehicle.id,\n    value: vehicle.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, vehicle.company, \" \", vehicle.number)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Route: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"routeId\",\n    onChange: handleAssignmentChange,\n    value: assignment.routeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, route.number)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"dateId\",\n    onChange: handleAssignmentChange,\n    value: assignment.dateId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: date.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, date.date)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Start Time: \"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: assignment.startTime,\n    type: \"time\",\n    onChange: handleAssignmentChange,\n    id: \"startTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"End Time: \"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: assignment.endTime,\n    type: \"time\",\n    onChange: handleAssignmentChange,\n    id: \"endTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AssignmentEditForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentEditForm.js"],"names":["React","useState","useEffect","apiManager","AssignmentEditForm","props","assignment","setAssignment","startTime","endTime","driverId","match","params","vehicleId","routeId","dateId","chosenDate","dates","setDates","routes","setRoutes","drivers","setDrivers","vehicles","setVehicles","handleAssignmentChange","event","stateToChange","target","id","value","parseInt","getAssignment","assignId","getAssignmentById","then","getAllDropDowns","getType","datesFromApi","sort","a","b","number","routesFromApi","driversFromApi","name","localeCompare","vehiclesFromApi","company","assignmentId","submit","editedAssignment","updateType","history","push","map","driver","vehicle","route","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,0BAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC;AAC3CO,IAAAA,SAAS,EAAE,EADgC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,QAAQ,EAAEL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBF,QAHc;AAI3CG,IAAAA,SAAS,EAAER,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,SAJa;AAK3CC,IAAAA,OAAO,EAAE,CALkC;AAM3CC,IAAAA,MAAM,EAAEV,KAAK,CAACW;AAN6B,GAAD,CAA5C;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMwB,sBAAsB,GAAGC,KAAK,IAAI;AACtC,UAAMC,aAAa,GAAG,EAAE,GAAGrB;AAAL,KAAtB;;AACA,QAAIoB,KAAK,CAACE,MAAN,CAAaC,EAAb,KAAoB,WAApB,IAAmCH,KAAK,CAACE,MAAN,CAAaC,EAAb,KAAoB,SAA3D,EAAsE;AACpEF,MAAAA,aAAa,CAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAb,GAAiCH,KAAK,CAACE,MAAN,CAAaE,KAA9C;AACD,KAFD,MAEO;AACLH,MAAAA,aAAa,CAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAb,GAAiCE,QAAQ,CAACL,KAAK,CAACE,MAAN,CAAaE,KAAd,CAAzC;AACD;;AACDvB,IAAAA,aAAa,CAACoB,aAAD,CAAb;AACD,GARD;;AAUA,QAAMK,aAAa,GAAIC,QAAD,IAAc;AAClC9B,IAAAA,UAAU,CACP+B,iBADH,CACqBD,QADrB,EAEGE,IAFH,CAEQ7B,UAAU,IAAI;AAClBC,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KAJH;AAKD,GAND;;AAQA,QAAM8B,eAAe,GAAG,MAAM;AAC5B,WACEjC,UAAU,CAACkC,OAAX,CAAmB,OAAnB,EAA4BF,IAA5B,CAAiCG,YAAY,IAAI;AAC/CA,MAAAA,YAAY,CAACC,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAb,GAAsB,CAAC,CAAvB,GAA2B,CAAxD;AACAxB,MAAAA,QAAQ,CAACoB,YAAD,CAAR;AACD,KAHD,GAIAnC,UAAU,CAACkC,OAAX,CAAmB,QAAnB,EAA6BF,IAA7B,CAAkCQ,aAAa,IAAI;AACjDA,MAAAA,aAAa,CAACJ,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAb,GAAsB,CAAtB,GAA0B,CAAC,CAAzD;AACAtB,MAAAA,SAAS,CAACuB,aAAD,CAAT;AACD,KAHD,CAJA,EAQAxC,UAAU,CAACkC,OAAX,CAAmB,SAAnB,EAA8BF,IAA9B,CAAmCS,cAAc,IAAI;AACnDA,MAAAA,cAAc,CAACL,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,IAAF,CAAOC,aAAP,CAAqBL,CAAC,CAACI,IAAvB,CAA9B;AACAvB,MAAAA,UAAU,CAACsB,cAAD,CAAV;AACD,KAHD,CARA,EAYAzC,UAAU,CAACkC,OAAX,CAAmB,UAAnB,EAA+BF,IAA/B,CAAoCY,eAAe,IAAI;AACrDA,MAAAA,eAAe,CAACR,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACQ,OAAF,CAAUF,aAAV,CAAwBL,CAAC,CAACO,OAA1B,CAA/B;AACAxB,MAAAA,WAAW,CAACuB,eAAD,CAAX;AACD,KAHD,CAbF;AAkBD,GAnBD;;AAqBA7C,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,aAAa,CAAC3B,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBqC,YAApB,CAAb;AACAb,IAAAA,eAAe;AAChB,GAHQ,EAGN,CAAC/B,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBqC,YAApB,CAHM,CAAT;;AAKA,QAAMC,MAAM,GAAG,MAAM;AACnB,UAAMC,gBAAgB,GAAG;AACvBtB,MAAAA,EAAE,EAAExB,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBqC,YADA;AAEvBzC,MAAAA,SAAS,EAAEF,UAAU,CAACE,SAFC;AAGvBC,MAAAA,OAAO,EAAEH,UAAU,CAACG,OAHG;AAIvBC,MAAAA,QAAQ,EAAEJ,UAAU,CAACI,QAJE;AAKvBG,MAAAA,SAAS,EAAEP,UAAU,CAACO,SALC;AAMvBC,MAAAA,OAAO,EAAER,UAAU,CAACQ,OANG;AAOvBC,MAAAA,MAAM,EAAET,UAAU,CAACS;AAPI,KAAzB;AASAZ,IAAAA,UAAU,CACPiD,UADH,CACc,aADd,EAC6BD,gBAD7B,EAEGhB,IAFH,CAEQ,MAAM9B,KAAK,CAACgD,OAAN,CAAcC,IAAd,CAAoB,YAApB,CAFd;AAGD,GAbD;;AAeA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEE;AAAU,IAAA,SAAS,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,QAAQ,EAAE7B,sBAFZ;AAGE,IAAA,KAAK,EAAEnB,UAAU,CAACI,QAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGW,OAAO,CAACkC,GAAR,CAAYC,MAAM,iBACjB;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,GAAG,EAAEA,MAAM,CAAC3B,EAFd;AAGE,IAAA,KAAK,EAAE2B,MAAM,CAAC3B,EAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG2B,MAAM,CAACX,IALV,CADD,CALH,CAFF,CADF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,QAAQ,EAAEpB,sBAFZ;AAGE,IAAA,KAAK,EAAEnB,UAAU,CAACO,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGU,QAAQ,CAACgC,GAAT,CAAaE,OAAO,iBACnB;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAAC5B,EAArB;AAAyB,IAAA,KAAK,EAAE4B,OAAO,CAAC5B,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG4B,OAAO,CAACT,OADX,OACqBS,OAAO,CAACf,MAD7B,CADD,CALH,CAFF,CApBF,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,QAAQ,EAAEjB,sBAFZ;AAGE,IAAA,KAAK,EAAEnB,UAAU,CAACQ,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGK,MAAM,CAACoC,GAAP,CAAWG,KAAK,iBACf;AAAQ,IAAA,GAAG,EAAEA,KAAK,CAAC7B,EAAnB;AAAuB,IAAA,KAAK,EAAE6B,KAAK,CAAC7B,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG6B,KAAK,CAAChB,MADT,CADD,CALH,CAFF,CAnCF,eAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,QAAQ,EAAEjB,sBAFZ;AAGE,IAAA,KAAK,EAAEnB,UAAU,CAACS,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGE,KAAK,CAACsC,GAAN,CAAUI,IAAI,iBACb;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAAC9B,EAAlB;AAAsB,IAAA,KAAK,EAAE8B,IAAI,CAAC9B,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG8B,IAAI,CAACA,IADR,CADD,CALH,CAFF,CAlDF,eAiEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,IAAA,YAAY,EAAErD,UAAU,CAACE,SAD3B;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEiB,sBAHZ;AAIE,IAAA,EAAE,EAAC,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjEF,eA2EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,YAAY,EAAEnB,UAAU,CAACG,OAD3B;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEgB,sBAHZ;AAIE,IAAA,EAAE,EAAC,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA3EF,eAqFE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEyB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArFF,CAFF,CADF,CADF;AAgGD,CAzKD;;AA2KA,eAAe9C,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"../../node_modules/react\";\nimport apiManager from \"../apiManager/apiManager\";\n\nconst AssignmentEditForm = props => {\n  const [assignment, setAssignment] = useState({\n    startTime: \"\",\n    endTime: \"\",\n    driverId: props.match.params.driverId,\n    vehicleId: props.match.params.vehicleId,\n    routeId: 3,\n    dateId: props.chosenDate\n  });\n  const [dates, setDates] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const handleAssignmentChange = event => {\n    const stateToChange = { ...assignment };\n    if (event.target.id === \"startTime\" || event.target.id === \"endTime\") {\n      stateToChange[event.target.id] = event.target.value;\n    } else {\n      stateToChange[event.target.id] = parseInt(event.target.value);\n    }\n    setAssignment(stateToChange);\n  };\n\n  const getAssignment = (assignId) => {\n    apiManager\n      .getAssignmentById(assignId)\n      .then(assignment => {\n        setAssignment(assignment);\n      });\n  };\n\n  const getAllDropDowns = () => {\n    return (\n      apiManager.getType(\"dates\").then(datesFromApi => {\n        datesFromApi.sort((a, b) => (a.number > b.number ? -1 : 1));\n        setDates(datesFromApi);\n      }),\n      apiManager.getType(\"routes\").then(routesFromApi => {\n        routesFromApi.sort((a, b) => (a.number > b.number ? 1 : -1));\n        setRoutes(routesFromApi);\n      }),\n      apiManager.getType(\"drivers\").then(driversFromApi => {\n        driversFromApi.sort((a, b) => a.name.localeCompare(b.name));\n        setDrivers(driversFromApi);\n      }),\n      apiManager.getType(\"vehicles\").then(vehiclesFromApi => {\n        vehiclesFromApi.sort((a, b) => a.company.localeCompare(b.company));\n        setVehicles(vehiclesFromApi);\n      })\n    );\n  };\n\n  useEffect(() => {\n    getAssignment(props.match.params.assignmentId);\n    getAllDropDowns();\n  }, [props.match.params.assignmentId]);\n\n  const submit = () => {\n    const editedAssignment = {\n      id: props.match.params.assignmentId,\n      startTime: assignment.startTime,\n      endTime: assignment.endTime,\n      driverId: assignment.driverId,\n      vehicleId: assignment.vehicleId,\n      routeId: assignment.routeId,\n      dateId: assignment.dateId\n    };\n    apiManager\n      .updateType(\"assignments\", editedAssignment)\n      .then(() => props.history.push(`/routeview`));\n  };\n\n  return (\n    <>\n      <form>\n      <h3>Edit Assignment</h3>\n        <fieldset className=\"form\">\n          <div>\n            <label>Driver: </label>\n            <select\n              id=\"driverId\"\n              onChange={handleAssignmentChange}\n              value={assignment.driverId}\n            >\n              {drivers.map(driver => (\n                <option\n                  className=\"driver_option\"\n                  key={driver.id}\n                  value={driver.id}\n                >\n                  {driver.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Vehicle: </label>\n            <select\n              id=\"vehicleId\"\n              onChange={handleAssignmentChange}\n              value={assignment.vehicleId}\n            >\n              {vehicles.map(vehicle => (\n                <option key={vehicle.id} value={vehicle.id}>\n                  {vehicle.company} {vehicle.number}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Route: </label>\n            <select\n              id=\"routeId\"\n              onChange={handleAssignmentChange}\n              value={assignment.routeId}\n            >\n              {routes.map(route => (\n                <option key={route.id} value={route.id}>\n                  {route.number}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Date: </label>\n            <select\n              id=\"dateId\"\n              onChange={handleAssignmentChange}\n              value={assignment.dateId}\n            >\n              {dates.map(date => (\n                <option key={date.id} value={date.id}>\n                  {date.date}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Start Time: </label>\n            <input\n              defaultValue={assignment.startTime}\n              type=\"time\"\n              onChange={handleAssignmentChange}\n              id=\"startTime\"\n            />\n          </div>\n\n          <div>\n            <label>End Time: </label>\n            <input\n              defaultValue={assignment.endTime}\n              type=\"time\"\n              onChange={handleAssignmentChange}\n              id=\"endTime\"\n            />\n          </div>\n\n          <button type=\"button\" onClick={submit}>\n            Submit\n          </button>\n        </fieldset>\n      </form>\n    </>\n  );\n};\n\nexport default AssignmentEditForm;\n"]},"metadata":{},"sourceType":"module"}