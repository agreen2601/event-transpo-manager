{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/entryForm.js\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\"; // \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\n\nconst EntryForm = props => {\n  const locations = props.locations;\n  const routes = props.routes;\n  const events = props.events;\n  const chosenLocationId = props.chosenLocationId;\n  const chosenRoute = props.chosenRoute;\n  const chosenEventId = props.chosenEventId;\n  const chosenDate = props.chosenDate;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const [entry, setEntry] = useState({\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    time: moment().format(\"HH:mm\")\n  }); // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n\n  entry.place_id = chosenLocationId;\n  entry.event_id = chosenEventId;\n  entry.date = chosenDate; // update state of entry upon form field change\n\n  const handleEntryChange = e => {\n    const stateToChange = { ...entry\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  }; // post entry, reset attendee count and vehicle number to empty \"\", provide user \"success\" alert\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isChecked === false) {\n      entry.date = moment().format(\"YYYY-MM-DD\");\n      entry.time = moment().format(\"HH:mm\");\n    } else {\n      entry.date = chosenDate;\n    }\n\n    setTimeout(() => {\n      apiManager.postEntry(entry).then(r => {\n        document.getElementById(\"attendee_count\").value = \"\";\n        document.getElementById(\"vehicle_number\").value = \"\";\n        setEntry({\n          attendee_count: \"\",\n          vehicle_number: \"\",\n          time: moment().format(\"HH:mm\")\n        });\n      });\n    }, 100);\n    alert(\"Success!\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Entry Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Event:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"event_id\",\n    native: true,\n    onChange: handleChosenEventChange,\n    fullWidth: true,\n    required: true,\n    value: chosenEventId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Choose Event\"), events ? events.map(event => /*#__PURE__*/React.createElement(\"option\", {\n    key: event.id,\n    value: parseInt(event.id),\n    \"data-name\": event.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, event.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"routeId\",\n    native: true,\n    onChange: handleChosenRouteChange,\n    fullWidth: true,\n    value: chosenRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Choose Route\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"place_id\",\n    native: true,\n    onChange: handleChosenLocationChange,\n    fullWidth: true,\n    required: true,\n    value: chosenLocationId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, \"Choose Locations\"), locations ? locations.map(place => /*#__PURE__*/React.createElement(\"option\", {\n    key: place.id,\n    value: parseInt(place.id),\n    \"data-name\": place.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, place.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Attendee Count:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"number\",\n    id: \"attendee_count\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Vehicle Number:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"vehicle_number\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isChecked,\n      onChange: handleIsCheckedChange,\n      name: \"checkedA\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }),\n    label: \"NOT LIVE? Click if not live to input past date and/or time.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  })), isChecked === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"date\",\n    type: \"date\",\n    fullWidth: true,\n    value: chosenDate,\n    onChange: handleChosenDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    type: \"time\",\n    fullWidth: true,\n    value: entry.time,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default EntryForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/entryForm.js"],"names":["React","useState","Grid","Button","TextField","InputLabel","Select","Typography","FormControlLabel","Checkbox","apiManager","moment","EntryForm","props","locations","routes","events","chosenLocationId","chosenRoute","chosenEventId","chosenDate","handleChosenLocationChange","handleChosenRouteChange","handleChosenEventChange","handleChosenDateChange","entry","setEntry","attendee_count","vehicle_number","time","format","place_id","event_id","date","handleEntryChange","e","stateToChange","target","id","value","isChecked","setIsChecked","handleIsCheckedChange","handleSubmit","preventDefault","setTimeout","postEntry","then","r","document","getElementById","alert","map","event","parseInt","name","route","description","place"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\n// \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\nconst EntryForm = (props) => {\n  const locations = props.locations;\n  const routes = props.routes;\n  const events = props.events;\n  const chosenLocationId = props.chosenLocationId;\n  const chosenRoute = props.chosenRoute;\n  const chosenEventId = props.chosenEventId;\n  const chosenDate = props.chosenDate;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const [entry, setEntry] = useState({\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    time: moment().format(\"HH:mm\"),\n  });\n\n  // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n  entry.place_id = chosenLocationId;\n  entry.event_id = chosenEventId;\n  entry.date = chosenDate;\n\n  // update state of entry upon form field change\n  const handleEntryChange = (e) => {\n    const stateToChange = { ...entry };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  const [isChecked, setIsChecked] = useState(false);\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  // post entry, reset attendee count and vehicle number to empty \"\", provide user \"success\" alert\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isChecked === false) {\n      entry.date = moment().format(\"YYYY-MM-DD\");\n      entry.time = moment().format(\"HH:mm\");\n    } else {\n      entry.date = chosenDate;\n    }\n    setTimeout(() => {\n      apiManager.postEntry(entry).then((r) => {\n        document.getElementById(\"attendee_count\").value = \"\";\n        document.getElementById(\"vehicle_number\").value = \"\";\n        setEntry({\n          attendee_count: \"\",\n          vehicle_number: \"\",\n          time: moment().format(\"HH:mm\"),\n        });\n      });\n    }, 100);\n    alert(\"Success!\");\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Entry Form\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Event:</InputLabel>\n            <Select\n              id=\"event_id\"\n              native\n              onChange={handleChosenEventChange}\n              fullWidth\n              required\n              value={chosenEventId}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Event\n              </option>\n              {events ? (\n                events.map((event) => (\n                  <option key={event.id} value={parseInt(event.id)} data-name={event.name}>\n                    {event.name}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Route:</InputLabel>\n            <Select\n              id=\"routeId\"\n              native\n              onChange={handleChosenRouteChange}\n              fullWidth\n              value={chosenRoute}\n            >\n              <option aria-label=\"None\" value=\"\">\n                Choose Route\n              </option>\n              {routes ? (\n                routes.map((route) => (\n                  <option key={route.id} value={route.name}>\n                    {route.name} {route.description}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Location:</InputLabel>\n            <Select\n              id=\"place_id\"\n              native\n              onChange={handleChosenLocationChange}\n              fullWidth\n              required\n              value={chosenLocationId}\n            >\n                  <option aria-label=\"None\" value=\"\" data-name=\"\">\n                  Choose Locations\n                </option>\n                {locations ? (\n                  locations.map((place) => (\n                    <option key={place.id} value={parseInt(place.id)} data-name={place.name}>\n                      {place.name}\n                    </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">\n              Attendee Count:{\" \"}\n            </InputLabel>\n            <TextField\n              required\n              type=\"number\"\n              id=\"attendee_count\"\n              fullWidth\n              onChange={handleEntryChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">\n              Vehicle Number:{\" \"}\n            </InputLabel>\n            <TextField\n              id=\"vehicle_number\"\n              fullWidth\n              onChange={handleEntryChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isChecked}\n                  onChange={handleIsCheckedChange}\n                  name=\"checkedA\"\n                  color=\"primary\"\n                />\n              }\n              label=\"NOT LIVE? Click if not live to input past date and/or time.\"\n            />\n          </Grid>\n          {isChecked === true ? (\n            <>\n              <Grid item xs={12} md={3}>\n                <InputLabel htmlFor=\"age-native-simple\">Date: </InputLabel>\n                <TextField\n                  id=\"date\"\n                  type=\"date\"\n                  fullWidth\n                  value={chosenDate}\n                  onChange={handleChosenDateChange}\n                />\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <InputLabel htmlFor=\"age-native-simple\">Time: </InputLabel>\n                <TextField\n                  id=\"time\"\n                  type=\"time\"\n                  fullWidth\n                  value={entry.time}\n                  onChange={handleEntryChange}\n                />\n              </Grid>\n            </>\n          ) : (\n            <></>\n          )}\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default EntryForm;\n"]},"metadata":{},"sourceType":"module"}