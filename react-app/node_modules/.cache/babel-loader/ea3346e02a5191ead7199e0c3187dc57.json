{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/entryForm.js\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\"; // \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\n\nconst EntryForm = props => {\n  const locations = props.locations;\n  const events = props.events;\n  const chosenLocation = props.chosenLocation;\n  const chosenEvent = props.chosenEvent;\n  const chosenDate = props.chosenDate;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const [entry, setEntry] = useState({\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    time: moment().format(\"H:m\")\n  }); // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n\n  entry.place_id = chosenLocation;\n  entry.event_id = chosenEvent;\n  entry.date = chosenDate; // update state of entry upon form field change\n\n  const handleEntryChange = e => {\n    const stateToChange = { ...entry\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  }; // post entry, reset attendee count and vehicle number to empty \"\", provide user \"success\" alert\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isChecked === false) {\n      entry.date = moment().format(\"YYYY-MM-DD\");\n      entry.time = moment().format(\"H:m\");\n    } else {\n      entry.date = chosenDate;\n    }\n\n    setTimeout(() => {\n      apiManager.postEntry(entry).then(r => {\n        document.getElementById(\"attendee_count\").value = \"\";\n        document.getElementById(\"vehicle_number\").value = \"\";\n        setEntry({\n          attendee_count: \"\",\n          vehicle_number: \"\",\n          time: moment().format(\"H:m\")\n        });\n      });\n    }, 100);\n    alert(\"Success!\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-form-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Entry Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"event_form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Event:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"event_id\",\n    native: true,\n    onChange: handleChosenEventChange,\n    fullWidth: true,\n    required: true,\n    value: chosenEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Choose Event\"), events ? events.map(event => /*#__PURE__*/React.createElement(\"option\", {\n    key: event.id,\n    value: parseInt(event.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, event.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"place_id\",\n    native: true,\n    onChange: handleChosenLocationChange,\n    fullWidth: true,\n    required: true,\n    value: chosenLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Choose Locations\"), locations ? locations.map(place => /*#__PURE__*/React.createElement(\"option\", {\n    key: place.id,\n    value: parseInt(place.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, place.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Attendee Count:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"number\",\n    id: \"attendee_count\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Vehicle Number:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"vehicle_number\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isChecked,\n      onChange: handleIsCheckedChange,\n      name: \"checkedA\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }),\n    label: \"NOT LIVE? Click if not live to input past date and/or time.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  })), isChecked === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"date\",\n    type: \"date\",\n    fullWidth: true,\n    value: chosenDate,\n    onChange: handleChosenDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    type: \"time\",\n    fullWidth: true,\n    value: entry.time,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default EntryForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/entryForm.js"],"names":["React","useState","Grid","Button","TextField","InputLabel","Select","Typography","FormControlLabel","Checkbox","apiManager","moment","EntryForm","props","locations","events","chosenLocation","chosenEvent","chosenDate","handleChosenLocationChange","handleChosenEventChange","handleChosenDateChange","entry","setEntry","attendee_count","vehicle_number","time","format","place_id","event_id","date","handleEntryChange","e","stateToChange","target","id","value","isChecked","setIsChecked","handleIsCheckedChange","handleSubmit","preventDefault","setTimeout","postEntry","then","r","document","getElementById","alert","map","event","parseInt","name","place"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\n// \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\nconst EntryForm = (props) => {\n  const locations = props.locations;\n  const events = props.events;\n  const chosenLocation = props.chosenLocation;\n  const chosenEvent = props.chosenEvent;\n  const chosenDate = props.chosenDate;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const [entry, setEntry] = useState({\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    time: moment().format(\"H:m\"),\n  });\n\n  // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n  entry.place_id = chosenLocation;\n  entry.event_id = chosenEvent;\n  entry.date = chosenDate;\n\n  // update state of entry upon form field change\n  const handleEntryChange = (e) => {\n    const stateToChange = { ...entry };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  const [isChecked, setIsChecked] = useState(false);\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  // post entry, reset attendee count and vehicle number to empty \"\", provide user \"success\" alert\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isChecked === false) {\n      entry.date = moment().format(\"YYYY-MM-DD\");\n      entry.time = moment().format(\"H:m\");\n    } else {\n      entry.date = chosenDate;\n    }\n    setTimeout(() => {\n      apiManager.postEntry(entry).then((r) => {\n        document.getElementById(\"attendee_count\").value = \"\";\n        document.getElementById(\"vehicle_number\").value = \"\";\n        setEntry({\n          attendee_count: \"\",\n          vehicle_number: \"\",\n          time: moment().format(\"H:m\"),\n        });\n      });\n    }, 100);\n    alert(\"Success!\");\n  };\n\n  return (\n    <>\n      <div className=\"event-form-page\">\n        <Typography component=\"h1\" variant=\"h5\">\n          Entry Form\n        </Typography>\n        <form className=\"event_form\" onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Event:</InputLabel>\n              <Select\n                id=\"event_id\"\n                native\n                onChange={handleChosenEventChange}\n                fullWidth\n                required\n                value={chosenEvent}\n              >\n                <option aria-label=\"None\" value=\"\">\n                  Choose Event\n                </option>\n                {events ? (\n                  events.map((event) => (\n                    <option key={event.id} value={parseInt(event.id)}>\n                      {event.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Location:</InputLabel>\n              <Select\n                id=\"place_id\"\n                native\n                onChange={handleChosenLocationChange}\n                fullWidth\n                required\n                value={chosenLocation}\n              >\n                <option aria-label=\"None\" value=\"\">\n                  Choose Locations\n                </option>\n                {locations ? (\n                  locations.map((place) => (\n                    <option key={place.id} value={parseInt(place.id)}>\n                      {place.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Attendee Count:{\" \"}\n              </InputLabel>\n              <TextField\n                required\n                type=\"number\"\n                id=\"attendee_count\"\n                fullWidth\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Vehicle Number:{\" \"}\n              </InputLabel>\n              <TextField\n                id=\"vehicle_number\"\n                fullWidth\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={isChecked}\n                    onChange={handleIsCheckedChange}\n                    name=\"checkedA\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"NOT LIVE? Click if not live to input past date and/or time.\"\n              />\n            </Grid>\n            {isChecked === true ? (\n              <>\n                <Grid item xs={12} md={3}>\n                  <InputLabel htmlFor=\"age-native-simple\">Date: </InputLabel>\n                  <TextField\n                    id=\"date\"\n                    type=\"date\"\n                    fullWidth\n                    value={chosenDate}\n                    onChange={handleChosenDateChange}\n                  />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                  <InputLabel htmlFor=\"age-native-simple\">Time: </InputLabel>\n                  <TextField\n                    id=\"time\"\n                    type=\"time\"\n                    fullWidth\n                    value={entry.time}\n                    onChange={handleEntryChange}\n                  />\n                </Grid>\n              </>\n            ) : (\n              <></>\n            )}\n          </Grid>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default EntryForm;\n"]},"metadata":{},"sourceType":"module"}