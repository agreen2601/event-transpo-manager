{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/RouteGraph.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport moment from \"moment\"; // import apiManager from \"../api/apiManager\";\n\nconst RouteGraph = props => {\n  const entries = props.entriesByDate;\n  const hour = moment().format(\"h\");\n  const roundedMinutes = (Math.round(parseInt(moment().format(\"mm\")) / 10) * 10 % 60).toString();\n  const time = `${hour}:${roundedMinutes}`;\n  console.log(entries[0].time); // entries.forEach((entry) =>\n  //   console.log(((Math.round(parseInt(entry.time) / 10) * 10) % 60).toString())\n  // );\n  // console.log(moment().format(\"YYYY-MM-DD\"));\n  // console.log(\"rounded time\", time);\n\n  const state = {\n    labels: entries.map(entry => entry.time.slice(0, -3)),\n    datasets: [{\n      backgroundColor: \"rgba(75,192,192,1)\",\n      borderColor: \"rgba(0,0,0,1)\",\n      borderWidth: 2,\n      data: entries.map(entry => entry.attendee_count)\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"Attendee counts over time\",\n        fontSize: 20\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RouteGraph;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/RouteGraph.js"],"names":["React","Bar","moment","RouteGraph","props","entries","entriesByDate","hour","format","roundedMinutes","Math","round","parseInt","toString","time","console","log","state","labels","map","entry","slice","datasets","backgroundColor","borderColor","borderWidth","data","attendee_count","title","display","text","fontSize","legend","scales","yAxes","ticks","beginAtZero"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,OAAO,GAAGD,KAAK,CAACE,aAAtB;AAEA,QAAMC,IAAI,GAAGL,MAAM,GAAGM,MAAT,CAAgB,GAAhB,CAAb;AACA,QAAMC,cAAc,GAAG,CACpBC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACV,MAAM,GAAGM,MAAT,CAAgB,IAAhB,CAAD,CAAR,GAAkC,EAA7C,IAAmD,EAApD,GACA,EAFqB,EAGrBK,QAHqB,EAAvB;AAKA,QAAMC,IAAI,GAAI,GAAEP,IAAK,IAAGE,cAAe,EAAvC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAAC,CAAD,CAAP,CAAWS,IAAvB,EAX4B,CAa5B;AACA;AACA;AAEA;AACA;;AAEA,QAAMG,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAEb,OAAO,CAACc,GAAR,CAAaC,KAAD,IAAWA,KAAK,CAACN,IAAN,CAAWO,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAvB,CADI;AAEZC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,eAAe,EAAE,oBADnB;AAEEC,MAAAA,WAAW,EAAE,eAFf;AAGEC,MAAAA,WAAW,EAAE,CAHf;AAIEC,MAAAA,IAAI,EAAErB,OAAO,CAACc,GAAR,CAAaC,KAAD,IAAWA,KAAK,CAACO,cAA7B;AAJR,KADQ;AAFE,GAAd;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEV,KADR;AAEE,IAAA,OAAO,EAAE;AACPW,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,2BAFD;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OADA;AAMPC,MAAAA,MAAM,EAAE;AACNH,QAAAA,OAAO,EAAE;AADH,OAND;AASPI,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR;AADT,SADK;AADD;AATD,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA0BD,CA1DD;;AA4DA,eAAejC,UAAf","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport moment from \"moment\";\n// import apiManager from \"../api/apiManager\";\n\nconst RouteGraph = (props) => {\n  const entries = props.entriesByDate;\n\n  const hour = moment().format(\"h\");\n  const roundedMinutes = (\n    (Math.round(parseInt(moment().format(\"mm\")) / 10) * 10) %\n    60\n  ).toString();\n\n  const time = `${hour}:${roundedMinutes}`;\n\n  console.log(entries[0].time);\n\n  // entries.forEach((entry) =>\n  //   console.log(((Math.round(parseInt(entry.time) / 10) * 10) % 60).toString())\n  // );\n\n  // console.log(moment().format(\"YYYY-MM-DD\"));\n  // console.log(\"rounded time\", time);\n\n  const state = {\n    labels: entries.map((entry) => entry.time.slice(0, -3)),\n    datasets: [\n      {\n        backgroundColor: \"rgba(75,192,192,1)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n        data: entries.map((entry) => entry.attendee_count),\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Bar\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text: \"Attendee counts over time\",\n            fontSize: 20,\n          },\n          legend: {\n            display: false,\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RouteGraph;\n"]},"metadata":{},"sourceType":"module"}