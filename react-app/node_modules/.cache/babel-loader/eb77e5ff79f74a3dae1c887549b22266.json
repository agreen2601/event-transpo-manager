{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/entryEditForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\"; // \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\n\nconst EntryEditForm = props => {\n  const events = props.events;\n  const locations = props.locations;\n  const chosenLocation = props.chosenLocation; // const chosenRoute = props.chosenRoute;\n\n  const chosenEvent = props.chosenEvent; // const chosenDate = props.chosenDate;\n\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const handleChosenLocationChange = props.handleChosenLocationChange; // const handleChosenDateChange = props.handleChosenDateChange\n\n  const [entry, setEntry] = useState({\n    event_id: \"\",\n    place_id: \"\",\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    date: \"\",\n    time: \"\"\n  });\n  console.log(entry); // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n\n  entry.place_id = chosenLocation; // entry.route_id = chosenRoute;\n\n  entry.event_id = chosenEvent; // entry.date = chosenDate;\n  // update state of entry upon form field change\n\n  const handleEntryChange = e => {\n    const stateToChange = { ...entry\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  useEffect(() => {\n    apiManager.getSingleType(\"entries\", props.match.params.entryId).then(entry => {\n      setEntry(entry);\n    });\n  }, [props.match.params.entryId]);\n  const editedEntry = {\n    id: props.match.params.entryId,\n    event_id: chosenEvent,\n    place_id: chosenLocation,\n    // route_id: chosenRoute,\n    date: entry.date,\n    attendee_count: entry.attendee_count,\n    vehicle_number: entry.vehicle_number,\n    time: entry.time\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.updateEntry(editedEntry).then(() => {\n      props.history.push(\"/location/log\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-form-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Edit Entry\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"event_form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Event:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"event_id\",\n    native: true,\n    onChange: handleChosenEventChange,\n    fullWidth: true,\n    required: true,\n    value: entry.event_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, events ? events.map(event => /*#__PURE__*/React.createElement(\"option\", {\n    key: event.id,\n    value: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, event.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"place_id\",\n    native: true,\n    onChange: handleChosenLocationChange,\n    fullWidth: true,\n    required: true,\n    value: entry.place_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, locations ? locations.map(place => /*#__PURE__*/React.createElement(\"option\", {\n    key: place.id,\n    value: parseInt(place.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, place.name)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"date\",\n    type: \"date\",\n    fullWidth: true,\n    value: entry.date,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    type: \"time\",\n    fullWidth: true,\n    value: entry.time,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Attendee Count:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"number\",\n    id: \"attendee_count\",\n    fullWidth: true,\n    onChange: handleEntryChange,\n    value: entry.attendee_count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Vehicle Number:\", \" \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"vehicle_number\",\n    fullWidth: true,\n    value: entry.vehicle_number,\n    onChange: handleEntryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n};\n\nexport default EntryEditForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/forms/entryEditForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Select","Typography","apiManager","EntryEditForm","props","events","locations","chosenLocation","chosenEvent","handleChosenEventChange","handleChosenLocationChange","entry","setEntry","event_id","place_id","attendee_count","vehicle_number","date","time","console","log","handleEntryChange","e","stateToChange","target","id","value","getSingleType","match","params","entryId","then","editedEntry","handleSubmit","preventDefault","updateEntry","history","push","map","event","name","place","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\";\n\n// \"locations\" and \"events\" fill the dropdowns, both \"handle...change\"s change the 3 \"chosen\"s (route dependent upon location work together)\nconst EntryEditForm = (props) => {\n  const events = props.events;\n  const locations = props.locations;\n  const chosenLocation = props.chosenLocation;\n  // const chosenRoute = props.chosenRoute;\n  const chosenEvent = props.chosenEvent;\n  // const chosenDate = props.chosenDate;\n  const handleChosenEventChange = props.handleChosenEventChange;\n  const handleChosenLocationChange = props.handleChosenLocationChange;\n  // const handleChosenDateChange = props.handleChosenDateChange\n  const [entry, setEntry] = useState({\n    event_id: \"\",\n    place_id: \"\",\n    attendee_count: \"\",\n    vehicle_number: \"\",\n    date: \"\",\n    time: \"\",\n  });\n\n  console.log(entry)\n\n  // set values for entry from state from dropdowns, which carry over from form to log and back without changing until user chooses new\n  entry.place_id = chosenLocation;\n  // entry.route_id = chosenRoute;\n  entry.event_id = chosenEvent;\n  // entry.date = chosenDate;\n\n  // update state of entry upon form field change\n  const handleEntryChange = (e) => {\n    const stateToChange = { ...entry };\n    stateToChange[e.target.id] = e.target.value;\n    setEntry(stateToChange);\n  };\n\n  useEffect(() => {\n    apiManager\n      .getSingleType(\"entries\", props.match.params.entryId)\n      .then((entry) => {\n        setEntry(entry);\n      });\n  }, [props.match.params.entryId]);\n\n  const editedEntry = {\n    id: props.match.params.entryId,\n    event_id: chosenEvent,\n    place_id: chosenLocation,\n    // route_id: chosenRoute,\n    date: entry.date,\n    attendee_count: entry.attendee_count,\n    vehicle_number: entry.vehicle_number,\n    time: entry.time,\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager.updateEntry(editedEntry).then(() => {\n      props.history.push(\"/location/log\");\n    });\n  };\n\n  return (\n    <>\n      <div className=\"event-form-page\">\n        <Typography component=\"h1\" variant=\"h5\">\n          Edit Entry\n        </Typography>\n        <form className=\"event_form\" onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Event:</InputLabel>\n              <Select\n                id=\"event_id\"\n                native\n                onChange={handleChosenEventChange}\n                fullWidth\n                required\n                value={entry.event_id}\n              >\n                {/* <option aria-label=\"None\" value=\"\">\n                  Choose Event\n                </option> */}\n                {events ? (\n                  events.map((event) => (\n                    <option key={event.id} value={event.id}>\n                      {event.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel>Location:</InputLabel>\n              <Select\n                id=\"place_id\"\n                native\n                onChange={handleChosenLocationChange}\n                fullWidth\n                required\n                value={entry.place_id}\n              >\n                {/* <option aria-label=\"None\" value=\"\">\n                  Choose Location\n                </option> */}\n                {locations ? (\n                  locations.map((place) => (\n                    <option key={place.id} value={parseInt(place.id)}>\n                      {place.name}\n                    </option>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">Date: </InputLabel>\n              <TextField\n                id=\"date\"\n                type=\"date\"\n                fullWidth\n                value={entry.date}\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">Time: </InputLabel>\n              <TextField\n                id=\"time\"\n                type=\"time\"\n                fullWidth\n                value={entry.time}\n                onChange={handleEntryChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Attendee Count:{\" \"}\n              </InputLabel>\n              <TextField\n                required\n                type=\"number\"\n                id=\"attendee_count\"\n                fullWidth\n                onChange={handleEntryChange}\n                value={entry.attendee_count}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Vehicle Number:{\" \"}\n              </InputLabel>\n              <TextField\n                id=\"vehicle_number\"\n                fullWidth\n                value={entry.vehicle_number}\n                onChange={handleEntryChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Submit\n            </Button>\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default EntryEditForm;\n"]},"metadata":{},"sourceType":"module"}