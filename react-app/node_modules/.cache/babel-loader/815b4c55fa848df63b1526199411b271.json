{"ast":null,"code":"// import React from \"react\";\n// import { Chart } from \"react-chartjs-2\";\n// const Test2 = (props) => {\n//   const entries = props.filteredEntries;\n//   const timeNumberfied = entries.map((entry) =>\n//     parseFloat(\n//       `${entry.time.split(\":\")[0]}.${\n//         (entry.time.split(\":\")[1] / 60).toString().split(\".\")[1]\n//       }`.slice(0, 5)\n//     )\n//   );\n//   // console.log(timeNumberfied)\n//   //   console.log(entries.map((entry) => (entry.time.split(\":\")[1] / 60).toString().split(\".\")[1]));\n//   //   console.log(entries.map((entry) => entry.time));\n//   const xData = timeNumberfied\n//   const yData = entries.map((entry) => entry.attendee_count);\n//   const combined = [];\n//   for (let i = 0; i < entries.length; i++) {\n//     const x = xData[i];\n//     const y = yData[i];\n//     const both = { x: x, y: y };\n//     combined.push(both);\n//   }\n//   //   console.log(\"combined\", combined)\n//   const state = {\n//     datasets: [\n//       {\n//         backgroundColor: \"rgba(75,192,192,1)\",\n//         borderColor: \"rgba(0,0,0,1)\",\n//         borderWidth: 2,\n//         data: combined,\n//       },\n//     ],\n//   };\n//   return (\n//     <div>\n//       <Chart\n//         data={state}\n//         options={{\n//           title: {\n//             display: true,\n//             text: \"Attendee counts over time\",\n//             fontSize: 20,\n//           },\n//           legend: {\n//             display: false,\n//           },\n//           scales: {\n//             // xAxes: [\n//             //   {\n//             //     labels: [-30, 30],\n//                 type: \"linear\",\n//             //     ticks: {\n//             //       max: -30,\n//             //       min: 40,\n//             //       stepSize: 10,\n//             //     },\n//             //   },\n//             // ],\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//         }}\n//       />\n//     </div>\n//   );\n// };\n// export default Test2;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/reports/test2.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from \"react\";\n// import { Chart } from \"react-chartjs-2\";\n\n// const Test2 = (props) => {\n//   const entries = props.filteredEntries;\n\n//   const timeNumberfied = entries.map((entry) =>\n//     parseFloat(\n//       `${entry.time.split(\":\")[0]}.${\n//         (entry.time.split(\":\")[1] / 60).toString().split(\".\")[1]\n//       }`.slice(0, 5)\n//     )\n//   );\n\n//   // console.log(timeNumberfied)\n\n//   //   console.log(entries.map((entry) => (entry.time.split(\":\")[1] / 60).toString().split(\".\")[1]));\n\n//   //   console.log(entries.map((entry) => entry.time));\n\n//   const xData = timeNumberfied\n//   const yData = entries.map((entry) => entry.attendee_count);\n//   const combined = [];\n//   for (let i = 0; i < entries.length; i++) {\n//     const x = xData[i];\n//     const y = yData[i];\n//     const both = { x: x, y: y };\n//     combined.push(both);\n//   }\n\n//   //   console.log(\"combined\", combined)\n\n//   const state = {\n//     datasets: [\n//       {\n//         backgroundColor: \"rgba(75,192,192,1)\",\n//         borderColor: \"rgba(0,0,0,1)\",\n//         borderWidth: 2,\n//         data: combined,\n//       },\n//     ],\n//   };\n\n//   return (\n//     <div>\n//       <Chart\n//         data={state}\n//         options={{\n//           title: {\n//             display: true,\n//             text: \"Attendee counts over time\",\n//             fontSize: 20,\n//           },\n//           legend: {\n//             display: false,\n//           },\n//           scales: {\n//             // xAxes: [\n//             //   {\n//             //     labels: [-30, 30],\n//                 type: \"linear\",\n//             //     ticks: {\n//             //       max: -30,\n//             //       min: 40,\n//             //       stepSize: 10,\n//             //     },\n//             //   },\n//             // ],\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Test2;\n"]},"metadata":{},"sourceType":"module"}