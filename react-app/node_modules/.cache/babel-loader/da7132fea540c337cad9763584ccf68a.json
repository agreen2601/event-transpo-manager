{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/driverForm.js\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverForm = props => {\n  const [driver, setDriver] = useState({\n    name: \"\",\n    phone_number: \"\",\n    local: true,\n    notes: \"\"\n  }); // update state of driver upon form field change\n\n  const handleDriverChange = e => {\n    const stateToChange = { ...driver\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setDriver(stateToChange);\n  }; // get all drivers, check if driver already in system, post if not, send to vehicle form\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.getType(\"drivers\").then(allDrivers => {\n      const driverA = allDrivers.find(driverA => driverA.name === driver.name);\n\n      if (driverA === undefined) {\n        if (driver.name !== \"\") {\n          apiManager.postType(\"drivers\", driver).then(result => props.setDriverId(result.id));\n        } // props.history.push(`/vehicle/form`);\n\n      } else {\n        alert(\"Driver already in database.\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Driver Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    fullWidth: true,\n    onChange: handleDriverChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Phone Number: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"phone_number\",\n    fullWidth: true,\n    onChange: handleDriverChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Notes: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"notes\",\n    fullWidth: true,\n    onChange: handleDriverChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n};\n\nexport default DriverForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/driverForm.js"],"names":["React","useState","Grid","Button","TextField","InputLabel","Typography","apiManager","DriverForm","props","driver","setDriver","name","phone_number","local","notes","handleDriverChange","e","stateToChange","target","id","value","handleSubmit","preventDefault","getType","then","allDrivers","driverA","find","undefined","postType","result","setDriverId","alert"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverForm = (props) => {\n    const [driver, setDriver] = useState({\n      name: \"\",\n      phone_number: \"\",\n      local: true,\n      notes: \"\",\n    });\n\n    // update state of driver upon form field change\n    const handleDriverChange = (e) => {\n      const stateToChange = { ...driver };\n      stateToChange[e.target.id] = e.target.value;\n      setDriver(stateToChange);\n    };\n\n    // get all drivers, check if driver already in system, post if not, send to vehicle form\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      apiManager.getType(\"drivers\").then((allDrivers) => {\n        const driverA = allDrivers.find(\n          (driverA) => driverA.name === driver.name\n        );\n        if (driverA === undefined) {\n          if (driver.name !== \"\") {\n            apiManager\n              .postType(\"drivers\", driver)\n              .then((result) => props.setDriverId(result.id));\n          }\n          // props.history.push(`/vehicle/form`);\n        } else {\n          alert(\"Driver already in database.\");\n        }\n      });\n    };\n\n    return (\n      <>\n        <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n          Driver Form\n        </Typography>\n        <form className=\"drop-downs\" onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">Name: </InputLabel>\n              <TextField id=\"name\" fullWidth onChange={handleDriverChange} />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">Phone Number: </InputLabel>\n              <TextField id=\"phone_number\" fullWidth onChange={handleDriverChange} />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <InputLabel htmlFor=\"age-native-simple\">Notes: </InputLabel>\n              <TextField\n                id=\"notes\"\n                fullWidth\n                onChange={handleDriverChange}\n              />\n            </Grid>\n          </Grid>\n          <div className=\"submit-button\">\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Submit\n            </Button>\n          </div>\n        </form>\n      </>\n    );\n  };\n\n  export default DriverForm;\n"]},"metadata":{},"sourceType":"module"}