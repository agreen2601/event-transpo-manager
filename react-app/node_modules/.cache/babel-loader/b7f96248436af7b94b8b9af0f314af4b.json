{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentEditForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\n\nconst AssignmentEditForm = props => {\n  const [assignment, setAssignment] = useState({\n    driver_id: props.match.params.driverId,\n    vehicle_id: props.match.params.vehicleId,\n    route_id: props.match.params.routeId\n  });\n  const [routes, setRoutes] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const getAssignment = assignId => {\n    apiManager.getSingleType(\"assignments\", assignId).then(assignment => {\n      setAssignment(assignment);\n    });\n  };\n\n  console.log(assignment);\n\n  const getAllDropDowns = () => {\n    return apiManager.getType(\"routes\").then(r => {\n      r.sort((a, b) => a.name > b.name ? 1 : -1);\n      setRoutes(r);\n    }), apiManager.getType(\"vehicles\").then(r => {\n      r.sort((a, b) => a.number > b.number ? 1 : -1).sort((a, b) => a.company.localeCompare(b.company));\n      setVehicles(r);\n    });\n  };\n\n  const handleAssignmentChange = e => {\n    const stateToChange = { ...assignment\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setAssignment(stateToChange);\n  };\n\n  useEffect(() => {\n    getAssignment(props.match.params.assignmentId);\n    getAllDropDowns();\n  }, [props.match.params.assignmentId]);\n  const editedAssignment = {\n    id: props.match.params.assignmentId,\n    start_time: assignment.start_time,\n    end_time: assignment.end_time,\n    driver_id: assignment.driver_id,\n    vehicle_id: assignment.vehicle_id,\n    route_id: assignment.route_id,\n    date_id: assignment.date_id\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.updateType(\"assignments\", editedAssignment).then(() => props.history.push(`/route/view`));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Edit Assignment for \", assignment.driver_id), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Vehicle:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"vehicle_id\",\n    native: true,\n    onChange: handleAssignmentChange,\n    fullWidth: true,\n    required: true,\n    value: assignment.vehicle_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Choose Vehicle\"), vehicles ? vehicles.map(vehicle => /*#__PURE__*/React.createElement(\"option\", {\n    key: vehicle.id,\n    value: parseInt(vehicle.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, vehicle.company, \" \", vehicle.number)) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Route:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"route_id\",\n    native: true,\n    onChange: handleAssignmentChange,\n    fullWidth: true,\n    required: true,\n    value: assignment.route_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Choose Route\"), routes ? routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: parseInt(route.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, route.name, \" \", route.description)) : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AssignmentEditForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentEditForm.js"],"names":["React","useState","useEffect","Grid","Button","InputLabel","Typography","Select","apiManager","AssignmentEditForm","props","assignment","setAssignment","driver_id","match","params","driverId","vehicle_id","vehicleId","route_id","routeId","routes","setRoutes","vehicles","setVehicles","getAssignment","assignId","getSingleType","then","console","log","getAllDropDowns","getType","r","sort","a","b","name","number","company","localeCompare","handleAssignmentChange","e","stateToChange","target","id","value","assignmentId","editedAssignment","start_time","end_time","date_id","handleSubmit","preventDefault","updateType","history","push","map","vehicle","parseInt","route","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\n\nconst AssignmentEditForm = (props) => {\n  const [assignment, setAssignment] = useState({\n    driver_id: props.match.params.driverId,\n    vehicle_id: props.match.params.vehicleId,\n    route_id: props.match.params.routeId,\n  });\n\n  const [routes, setRoutes] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const getAssignment = (assignId) => {\n    apiManager.getSingleType(\"assignments\", assignId).then((assignment) => {\n      setAssignment(assignment);\n    });\n  };\n\n  console.log(assignment)\n\n  const getAllDropDowns = () => {\n    return (\n      apiManager.getType(\"routes\").then((r) => {\n        r.sort((a, b) => (a.name > b.name ? 1 : -1));\n        setRoutes(r);\n      }),\n      apiManager.getType(\"vehicles\").then((r) => {\n        r.sort((a, b) => (a.number > b.number ? 1 : -1)).sort((a, b) =>\n          a.company.localeCompare(b.company)\n        );\n        setVehicles(r);\n      })\n    );\n  };\n\n  const handleAssignmentChange = (e) => {\n    const stateToChange = { ...assignment };\n    stateToChange[e.target.id] = e.target.value;\n    setAssignment(stateToChange);\n  };\n\n  useEffect(() => {\n    getAssignment(props.match.params.assignmentId);\n    getAllDropDowns();\n  }, [props.match.params.assignmentId]);\n\n  const editedAssignment = {\n    id: props.match.params.assignmentId,\n    start_time: assignment.start_time,\n    end_time: assignment.end_time,\n    driver_id: assignment.driver_id,\n    vehicle_id: assignment.vehicle_id,\n    route_id: assignment.route_id,\n    date_id: assignment.date_id,\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager\n      .updateType(\"assignments\", editedAssignment)\n      .then(() => props.history.push(`/route/view`));\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Edit Assignment for {assignment.driver_id}\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Vehicle:</InputLabel>\n            <Select\n              id=\"vehicle_id\"\n              native\n              onChange={handleAssignmentChange}\n              fullWidth\n              required\n              value={assignment.vehicle_id}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Vehicle\n              </option>\n              {vehicles ? (\n                vehicles.map((vehicle) => (\n                  <option key={vehicle.id} value={parseInt(vehicle.id)}>\n                    {vehicle.company} {vehicle.number}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel>Route:</InputLabel>\n            <Select\n              id=\"route_id\"\n              native\n              onChange={handleAssignmentChange}\n              fullWidth\n              required\n              value={assignment.route_id}\n            >\n              <option aria-label=\"None\" value=\"\" data-name=\"\">\n                Choose Route\n              </option>\n              {routes ? (\n                routes.map((route) => (\n                  <option key={route.id} value={parseInt(route.id)}>\n                    {route.name} {route.description}\n                  </option>\n                ))\n              ) : (\n                <></>\n              )}\n            </Select>\n          </Grid>\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AssignmentEditForm;\n"]},"metadata":{},"sourceType":"module"}