{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeView.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport RouteCard from \"./routeCard\";\n\nconst RouteView = props => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const chosenDate = props.chosenDate;\n  const chosenRoute = props.chosenRoute;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 6\n    },\n    paper: {\n      padding: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n  let routeName = \"\";\n  parseInt(route.name) < 10 ? routeName = route.name.slice(1) : routeName = route.name;\n  const routeColor = {\n    color: route.color,\n    fontWeight: \"600\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"date_id\",\n    native: true,\n    onChange: handleChosenDateChange,\n    fullWidth: true,\n    required: true,\n    value: chosenDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    \"data-name\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Choose Date\"), dates ? dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: parseInt(date.id),\n    \"data-name\": date.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, date.date)) : /*#__PURE__*/React.createElement(React.Fragment, null))), chosenDate !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, routes.map(route => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 2,\n    borderColor: route.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RouteCard, Object.assign({\n    key: route.id,\n    route: route,\n    chosenDate: chosenDate\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }))))))) : null);\n};\n\nexport default RouteView;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/routeView/routeView.js"],"names":["React","Grid","Box","Paper","InputLabel","Select","RouteCard","RouteView","props","dates","routes","chosenDate","chosenRoute","handleChosenDateChange","handleChosenRouteChange","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","classes","routeName","parseInt","route","name","slice","routeColor","color","fontWeight","map","date","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport RouteCard from \"./routeCard\";\n\nconst RouteView = (props) => {\n  const dates = props.dates;\n  const routes = props.routes;\n  const chosenDate = props.chosenDate;\n  const chosenRoute = props.chosenRoute;\n  const handleChosenDateChange = props.handleChosenDateChange;\n  const handleChosenRouteChange = props.handleChosenRouteChange;\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 6,\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n\n  let routeName = \"\";\n  parseInt(route.name) < 10\n    ? (routeName = route.name.slice(1))\n    : (routeName = route.name);\n\n    const routeColor = {\n      color: route.color,\n      fontWeight: \"600\"\n    };\n\n  return (\n    <>\n      <Grid item xs={12} md={3}>\n        <InputLabel>Date:</InputLabel>\n        <Select\n          id=\"date_id\"\n          native\n          onChange={handleChosenDateChange}\n          fullWidth\n          required\n          value={chosenDate}\n        >\n          <option aria-label=\"None\" value=\"\" data-name=\"\">\n            Choose Date\n          </option>\n          {dates ? (\n            dates.map((date) => (\n              <option\n                key={date.id}\n                value={parseInt(date.id)}\n                data-name={date.date}\n              >\n                {date.date}\n              </option>\n            ))\n          ) : (\n            <></>\n          )}\n        </Select>\n      </Grid>\n      {chosenDate !== \"\" ? (\n        <div className=\"date_card\">\n          {routes.map((route) => (\n            <Grid item xs={6}>\n              <Box border={2} borderColor={route.color}>\n                <Paper className={classes.paper}>\n                  <RouteCard\n                    key={route.id}\n                    route={route}\n                    chosenDate={chosenDate}\n                    {...props}\n                  />\n                </Paper>\n              </Box>\n            </Grid>\n          ))}\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default RouteView;\n"]},"metadata":{},"sourceType":"module"}