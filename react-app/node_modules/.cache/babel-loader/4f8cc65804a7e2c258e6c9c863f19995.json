{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/driverForm.js\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverForm = props => {\n  const [driver, setDriver] = useState({\n    name: \"\",\n    phone_number: \"\",\n    isLocal: true,\n    notes: \"\"\n  });\n  var [isChecked, setIsChecked] = useState(false);\n\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  }; // update state of driver upon form field change\n\n\n  const handleDriverChange = e => {\n    const stateToChange = { ...driver\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setDriver(stateToChange);\n  }; // get all drivers, check if driver already in system, post if not, send to vehicle form\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiManager.getAllType(\"drivers\").then(allDrivers => {\n      const driverA = allDrivers.find(driverA => driverA.name === driver.name);\n\n      if (driverA === undefined) {\n        apiManager.postType(\"drivers\", driver); // .then((result) => props.setDriverId(result.id));\n\n        props.history.push(`/vehicle/form`);\n      } else {\n        alert(\"Driver already in database.\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Driver Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"drop-downs\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    fullWidth: true,\n    required: true,\n    onChange: handleDriverChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Phone Number: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"phone_number\",\n    fullWidth: true,\n    required: true,\n    onChange: handleDriverChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isChecked,\n      onChange: handleIsCheckedChange,\n      name: \"checkedA\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }),\n    label: \"Local Driver?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Notes: \"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"notes\",\n    fullWidth: true,\n    onChange: handleDriverChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/vehicle/form\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Skip\")))));\n};\n\nexport default DriverForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/driverForm.js"],"names":["React","useState","Grid","Button","TextField","InputLabel","Typography","FormControlLabel","Checkbox","Link","apiManager","DriverForm","props","driver","setDriver","name","phone_number","isLocal","notes","isChecked","setIsChecked","handleIsCheckedChange","handleDriverChange","e","stateToChange","target","id","value","handleSubmit","preventDefault","getAllType","then","allDrivers","driverA","find","undefined","postType","history","push","alert","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport apiManager from \"../api/apiManager\";\n\nconst DriverForm = (props) => {\n  const [driver, setDriver] = useState({\n    name: \"\",\n    phone_number: \"\",\n    isLocal: true,\n    notes: \"\",\n  });\n\n  var [isChecked, setIsChecked] = useState(false);\n  const handleIsCheckedChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  // update state of driver upon form field change\n  const handleDriverChange = (e) => {\n    const stateToChange = { ...driver };\n    stateToChange[e.target.id] = e.target.value;\n    setDriver(stateToChange);\n  };\n\n  // get all drivers, check if driver already in system, post if not, send to vehicle form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    apiManager.getAllType(\"drivers\").then((allDrivers) => {\n      const driverA = allDrivers.find(\n        (driverA) => driverA.name === driver.name\n      );\n      if (driverA === undefined) {\n        apiManager.postType(\"drivers\", driver);\n        // .then((result) => props.setDriverId(result.id));\n        props.history.push(`/vehicle/form`);\n      } else {\n        alert(\"Driver already in database.\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\" className=\"page-header\">\n        Driver Form\n      </Typography>\n      <form className=\"drop-downs\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Name: </InputLabel>\n            <TextField\n              id=\"name\"\n              fullWidth\n              required\n              onChange={handleDriverChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Phone Number: </InputLabel>\n            <TextField\n              id=\"phone_number\"\n              fullWidth\n              required\n              onChange={handleDriverChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isChecked}\n                  onChange={handleIsCheckedChange}\n                  name=\"checkedA\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Local Driver?\"\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <InputLabel htmlFor=\"age-native-simple\">Notes: </InputLabel>\n            <TextField id=\"notes\" fullWidth onChange={handleDriverChange} />\n          </Grid>\n        </Grid>\n        <div className=\"submit-button\">\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </div>\n        <div className=\"submit-button\">\n          <Link to=\"/vehicle/form\" style={{ textDecoration: \"none\" }}>\n            <Button variant=\"contained\" color=\"primary\">\n              Skip\n            </Button>\n          </Link>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default DriverForm;\n"]},"metadata":{},"sourceType":"module"}