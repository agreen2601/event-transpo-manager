{"ast":null,"code":"import baseurl from \"./baseurl\";\nexport default {\n  getAllEntries() {\n    return fetch(`${baseurl}/entries`).then(r => r.json());\n  },\n\n  getEntriesByLocation(locationId) {\n    return fetch(`${baseurl}/entries?locationID=${locationId}`).then(r => r.json());\n  },\n\n  getAllLocations() {\n    return fetch(`${baseurl}/locations`).then(r => r.json());\n  },\n\n  getSingleLocation(locationID) {\n    return fetch(`${baseurl}/locations/${locationID}`);\n  },\n\n  postEntry(newEntry) {\n    return fetch(`${baseurl}/entries`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(newEntry)\n    }).then(r => r.json());\n  }\n\n};","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/final-capstone-react-app/src/api/apiManager.js"],"names":["baseurl","getAllEntries","fetch","then","r","json","getEntriesByLocation","locationId","getAllLocations","getSingleLocation","locationID","postEntry","newEntry","method","headers","body","JSON","stringify"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,eAAe;AACbC,EAAAA,aAAa,GAAG;AACd,WAAOC,KAAK,CAAE,GAAEF,OAAQ,UAAZ,CAAL,CAA4BG,IAA5B,CAAkCC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAAxC,CAAP;AACD,GAHY;;AAIbC,EAAAA,oBAAoB,CAACC,UAAD,EAAa;AAC/B,WAAOL,KAAK,CAAE,GAAEF,OAAQ,uBAAsBO,UAAW,EAA7C,CAAL,CAAqDJ,IAArD,CAA2DC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAAjE,CAAP;AACD,GANY;;AAObG,EAAAA,eAAe,GAAG;AAChB,WAAON,KAAK,CAAE,GAAEF,OAAQ,YAAZ,CAAL,CAA8BG,IAA9B,CAAoCC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAA1C,CAAP;AACD,GATY;;AAUbI,EAAAA,iBAAiB,CAACC,UAAD,EAAa;AAC5B,WAAOR,KAAK,CAAE,GAAEF,OAAQ,cAAaU,UAAW,EAApC,CAAZ;AACD,GAZY;;AAabC,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,WAAOV,KAAK,CAAE,GAAEF,OAAQ,UAAZ,EAAuB;AACjCa,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AAN2B,KAAvB,CAAL,CAOJT,IAPI,CAOEC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAPR,CAAP;AAQD;;AAtBY,CAAf","sourcesContent":["import baseurl from \"./baseurl\";\n\nexport default {\n  getAllEntries() {\n    return fetch(`${baseurl}/entries`).then((r) => r.json());\n  },\n  getEntriesByLocation(locationId) {\n    return fetch(`${baseurl}/entries?locationID=${locationId}`).then((r) => r.json())\n  },\n  getAllLocations() {\n    return fetch(`${baseurl}/locations`).then((r) => r.json());\n  },\n  getSingleLocation(locationID) {\n    return fetch(`${baseurl}/locations/${locationID}`)\n  },\n  postEntry(newEntry) {\n    return fetch(`${baseurl}/entries`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"Accept\": \"application/json\",\n      },\n      body: JSON.stringify(newEntry)\n    }).then((r) => r.json());\n  },\n};\n"]},"metadata":{},"sourceType":"module"}