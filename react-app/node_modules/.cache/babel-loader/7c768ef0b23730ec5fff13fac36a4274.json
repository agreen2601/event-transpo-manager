{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/appViews.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./navbar\";\nimport EventTranspoTracker from \"./eventTranspoTracker\";\nimport EventTranspoManager from \"./eventTranspoManager\";\nimport Login from \"./auth/login\";\nimport Register from \"./auth/register\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport Log from \"./reports/log\";\nimport \"./styles.css\";\n\nconst AppViews = props => {\n  const isAuthenticated = () => sessionStorage.getItem(\"token\") !== null;\n\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUserToken = resp => {\n    sessionStorage.setItem(\"token\", resp.token);\n    sessionStorage.setItem(\"userID\", resp.user_id);\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [mode, setMode] = useState(true);\n\n  const handleModeChange = () => {\n    setMode(!mode);\n  };\n\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, hasUser ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, Object.assign({\n    hasUser: hasUser,\n    clearUser: clearUser,\n    mode: mode,\n    handleModeChange: handleModeChange\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"tracker\"), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/form\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(EntryForm, Object.assign({\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      chosenPlaceId: chosenPlaceId,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/entry/edit/form/:entryId(\\\\d+)\",\n    render: props =>\n    /*#__PURE__*/\n    // hasUser ? (\n    React.createElement(EntryEditForm, Object.assign({\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      chosenPlaceId: chosenPlaceId,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    })) // ) : (\n    //   <Redirect to=\"/login\" />\n    // )\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/log\",\n    render: props =>\n    /*#__PURE__*/\n    // hasUser ? (\n    React.createElement(Log, Object.assign({\n      getEntries: getEntries,\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenPlaceId: chosenPlaceId,\n      chosenPlaceName: chosenPlaceName,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenShuttleName: chosenShuttleName,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    })) // ) : (\n    //   <Redirect to=\"/login\" />\n    // )\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/graph\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(RouteReport, Object.assign({\n      getEntries: getEntries,\n      places: places,\n      routes: routes,\n      shuttles: shuttles,\n      entries: entries,\n      uniqueDates: uniqueDates,\n      chosenPlaceId: chosenPlaceId,\n      chosenPlaceName: chosenPlaceName,\n      chosenRoute: chosenRoute,\n      chosenShuttleId: chosenShuttleId,\n      chosenShuttleName: chosenShuttleName,\n      chosenDate: chosenDate,\n      handleChosenPlaceChange: handleChosenPlaceChange,\n      handleChosenRouteChange: handleChosenRouteChange,\n      handleChosenShuttleChange: handleChosenShuttleChange,\n      handleChosenDateChange: handleChosenDateChange\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Login, Object.assign({\n      setUserToken: setUserToken\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    render: props => hasUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/entry/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Register, Object.assign({\n      setUserToken: setUserToken\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default AppViews;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/appViews.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Redirect","NavBar","EventTranspoTracker","EventTranspoManager","Login","Register","EntryForm","EntryEditForm","apiManager","RouteReport","Log","AppViews","props","isAuthenticated","sessionStorage","getItem","hasUser","setHasUser","setUserToken","resp","setItem","token","user_id","clearUser","clear","mode","setMode","handleModeChange","places","routes","shuttles","chosenPlaceId","chosenRoute","chosenShuttleId","chosenDate","handleChosenPlaceChange","handleChosenRouteChange","handleChosenShuttleChange","handleChosenDateChange","getEntries","entries","uniqueDates","chosenPlaceName","chosenShuttleName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,QAA/B,QAA+C,kBAA/C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,eAAe,GAAG,MAAMC,cAAc,CAACC,OAAf,CAAuB,OAAvB,MAAoC,IAAlE;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAACiB,eAAe,EAAhB,CAAtC;;AAEA,QAAMK,YAAY,GAAIC,IAAD,IAAU;AAC7BL,IAAAA,cAAc,CAACM,OAAf,CAAuB,OAAvB,EAAgCD,IAAI,CAACE,KAArC;AACAP,IAAAA,cAAc,CAACM,OAAf,CAAuB,QAAvB,EAAiCD,IAAI,CAACG,OAAtC;AACAL,IAAAA,UAAU,CAACJ,eAAe,EAAhB,CAAV;AACD,GAJD;;AAMA,QAAMU,SAAS,GAAG,MAAM;AACtBT,IAAAA,cAAc,CAACU,KAAf;AACAP,IAAAA,UAAU,CAACJ,eAAe,EAAhB,CAAV;AACD,GAHD;;AAKA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAM+B,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0CACGT,OAAO,gBACN,uDACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,SAAS,EAAEO,SAFb;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,gBAAgB,EAAEE;AAJpB,KAKMf,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,eAUE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,MAAM,EAAGA,KAAD,IACNI,OAAO,gBACL,oBAAC,SAAD;AACE,MAAA,MAAM,EAAEY,MADV;AAEE,MAAA,MAAM,EAAEC,MAFV;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,aAAa,EAAEC,aAJjB;AAKE,MAAA,WAAW,EAAEC,WALf;AAME,MAAA,eAAe,EAAEC,eANnB;AAOE,MAAA,UAAU,EAAEC,UAPd;AAQE,MAAA,uBAAuB,EAAEC,uBAR3B;AASE,MAAA,uBAAuB,EAAEC,uBAT3B;AAUE,MAAA,yBAAyB,EAAEC,yBAV7B;AAWE,MAAA,sBAAsB,EAAEC;AAX1B,OAYM1B,KAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADK,gBAgBL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAkCE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,iCAFP;AAGE,IAAA,MAAM,EACHA,KAAD;AAAA;AACE;AACA,wBAAC,aAAD;AACE,MAAA,MAAM,EAAEgB,MADV;AAEE,MAAA,MAAM,EAAEC,MAFV;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,aAAa,EAAEC,aAJjB;AAKE,MAAA,WAAW,EAAEC,WALf;AAME,MAAA,eAAe,EAAEC,eANnB;AAOE,MAAA,UAAU,EAAEC,UAPd;AAQE,MAAA,uBAAuB,EAAEC,uBAR3B;AASE,MAAA,uBAAuB,EAAEC,uBAT3B;AAUE,MAAA,yBAAyB,EAAEC,yBAV7B;AAWE,MAAA,sBAAsB,EAAEC;AAX1B,OAYM1B,KAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHE,CAkBJ;AACA;AACA;AAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,eA4DE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EACHA,KAAD;AAAA;AACE;AACA,wBAAC,GAAD;AACE,MAAA,UAAU,EAAE2B,UADd;AAEE,MAAA,MAAM,EAAEX,MAFV;AAGE,MAAA,MAAM,EAAEC,MAHV;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,OAAO,EAAEU,OALX;AAME,MAAA,WAAW,EAAEC,WANf;AAOE,MAAA,aAAa,EAAEV,aAPjB;AAQE,MAAA,eAAe,EAAEW,eARnB;AASE,MAAA,WAAW,EAAEV,WATf;AAUE,MAAA,eAAe,EAAEC,eAVnB;AAWE,MAAA,iBAAiB,EAAEU,iBAXrB;AAYE,MAAA,UAAU,EAAET,UAZd;AAaE,MAAA,uBAAuB,EAAEC,uBAb3B;AAcE,MAAA,uBAAuB,EAAEC,uBAd3B;AAeE,MAAA,yBAAyB,EAAEC,yBAf7B;AAgBE,MAAA,sBAAsB,EAAEC;AAhB1B,OAiBM1B,KAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHE,CAuBJ;AACA;AACA;AA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5DF,eA2FE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAGA,KAAD,IACNI,OAAO,gBACL,oBAAC,WAAD;AACE,MAAA,UAAU,EAAEuB,UADd;AAEE,MAAA,MAAM,EAAEX,MAFV;AAGE,MAAA,MAAM,EAAEC,MAHV;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,OAAO,EAAEU,OALX;AAME,MAAA,WAAW,EAAEC,WANf;AAOE,MAAA,aAAa,EAAEV,aAPjB;AAQE,MAAA,eAAe,EAAEW,eARnB;AASE,MAAA,WAAW,EAAEV,WATf;AAUE,MAAA,eAAe,EAAEC,eAVnB;AAWE,MAAA,iBAAiB,EAAEU,iBAXrB;AAYE,MAAA,UAAU,EAAET,UAZd;AAaE,MAAA,uBAAuB,EAAEC,uBAb3B;AAcE,MAAA,uBAAuB,EAAEC,uBAd3B;AAeE,MAAA,yBAAyB,EAAEC,yBAf7B;AAgBE,MAAA,sBAAsB,EAAEC;AAhB1B,OAiBM1B,KAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADK,gBAqBL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3FF,CADM,gBA2HN,uDACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,MAAM,EAAE,mBAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAGA,KAAD,IACNI,OAAO,gBACL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,gBAGL,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAEE;AAArB,OAAuCN,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAcE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,MAAM,EAAGA,KAAD,IACNI,OAAO,gBACL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,gBAGL,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAEE;AAAxB,OAA0CN,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CA5HJ,CADF,CADF;AA4JD,CAhLD;;AAkLA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./navbar\";\nimport EventTranspoTracker from \"./eventTranspoTracker\";\nimport EventTranspoManager from \"./eventTranspoManager\";\nimport Login from \"./auth/login\";\nimport Register from \"./auth/register\";\nimport EntryForm from \"./forms/entryForm\";\nimport EntryEditForm from \"./forms/entryEditForm\";\nimport apiManager from \"./api/apiManager\";\nimport RouteReport from \"./reports/routeReport\";\nimport Log from \"./reports/log\";\nimport \"./styles.css\";\n\nconst AppViews = (props) => {\n  const isAuthenticated = () => sessionStorage.getItem(\"token\") !== null;\n  const [hasUser, setHasUser] = useState(isAuthenticated());\n\n  const setUserToken = (resp) => {\n    sessionStorage.setItem(\"token\", resp.token);\n    sessionStorage.setItem(\"userID\", resp.user_id);\n    setHasUser(isAuthenticated());\n  };\n\n  const clearUser = () => {\n    sessionStorage.clear();\n    setHasUser(isAuthenticated());\n  };\n\n  const [mode, setMode] = useState(true);\n  const handleModeChange = () => {\n    setMode(!mode);\n  };\n\n  return (\n    <BrowserRouter>\n      <>\n        {hasUser ? (\n          <>\n            <NavBar\n              hasUser={hasUser}\n              clearUser={clearUser}\n              mode={mode}\n              handleModeChange={handleModeChange}\n              {...props}\n            />\n            <div>tracker</div>\n            {/* <Route exact path=\"/\" render={() => <Redirect to=\"/entry/form\" />} /> */}\n            <Route\n              exact\n              path=\"/entry/form\"\n              render={(props) =>\n                hasUser ? (\n                  <EntryForm\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/entry/edit/form/:entryId(\\d+)\"\n              render={\n                (props) => (\n                  // hasUser ? (\n                  <EntryEditForm\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                )\n                // ) : (\n                //   <Redirect to=\"/login\" />\n                // )\n              }\n            />\n            <Route\n              exact\n              path=\"/log\"\n              render={\n                (props) => (\n                  // hasUser ? (\n                  <Log\n                    getEntries={getEntries}\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    entries={entries}\n                    uniqueDates={uniqueDates}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenPlaceName={chosenPlaceName}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenShuttleName={chosenShuttleName}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                )\n                // ) : (\n                //   <Redirect to=\"/login\" />\n                // )\n              }\n            />\n            <Route\n              exact\n              path=\"/graph\"\n              render={(props) =>\n                hasUser ? (\n                  <RouteReport\n                    getEntries={getEntries}\n                    places={places}\n                    routes={routes}\n                    shuttles={shuttles}\n                    entries={entries}\n                    uniqueDates={uniqueDates}\n                    chosenPlaceId={chosenPlaceId}\n                    chosenPlaceName={chosenPlaceName}\n                    chosenRoute={chosenRoute}\n                    chosenShuttleId={chosenShuttleId}\n                    chosenShuttleName={chosenShuttleName}\n                    chosenDate={chosenDate}\n                    handleChosenPlaceChange={handleChosenPlaceChange}\n                    handleChosenRouteChange={handleChosenRouteChange}\n                    handleChosenShuttleChange={handleChosenShuttleChange}\n                    handleChosenDateChange={handleChosenDateChange}\n                    {...props}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) =>\n                hasUser ? (\n                  <Redirect to=\"/entry/form\" />\n                ) : (\n                  <Login setUserToken={setUserToken} {...props} />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={(props) =>\n                hasUser ? (\n                  <Redirect to=\"/entry/form\" />\n                ) : (\n                  <Register setUserToken={setUserToken} {...props} />\n                )\n              }\n            />\n          </>\n        )}\n      </>\n    </BrowserRouter>\n  );\n};\n\nexport default AppViews;\n"]},"metadata":{},"sourceType":"module"}