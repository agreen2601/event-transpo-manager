{"ast":null,"code":"var _jsxFileName = \"/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentEditForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\nconst AssignmentEditForm = props => {\n  const [assignment, setAssignment] = useState({\n    startTime: \"\",\n    endTime: \"\",\n    driverId: props.match.params.driverId,\n    vehicleId: props.match.params.vehicleId,\n    routeId: props.match.params.routeId,\n    dateId: props.chosenDate\n  });\n  const [dates, setDates] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const getAssignment = assignId => {\n    apiManager.getSingleType(\"assignments\", assignId).then(assignment => {\n      setAssignment(assignment);\n    });\n  };\n\n  console.log(assignment);\n\n  const getAllDropDowns = () => {\n    return apiManager.getType(\"dates\").then(r => {\n      r.sort((a, b) => a.date > b.date ? 1 : -1);\n      setDates(r);\n    }), apiManager.getType(\"routes\").then(r => {\n      r.sort((a, b) => a.name > b.name ? 1 : -1);\n      setRoutes(r);\n    }), apiManager.getType(\"drivers\").then(r => {\n      r.sort((a, b) => a.name.localeCompare(b.name));\n      setDrivers(r);\n    }), apiManager.getType(\"vehicles\").then(r => {\n      r.sort((a, b) => a.number > b.number ? 1 : -1).sort((a, b) => a.company.localeCompare(b.company));\n      setVehicles(r);\n    });\n  };\n\n  const handleAssignmentChange = e => {\n    const stateToChange = { ...assignment\n    };\n    stateToChange[e.target.id] = e.target.value;\n    setAssignment(stateToChange);\n  };\n\n  useEffect(() => {\n    getAssignment(props.match.params.assignmentId);\n    getAllDropDowns();\n  }, [props.match.params.assignmentId]);\n\n  const submit = () => {\n    const editedAssignment = {\n      id: props.match.params.assignmentId,\n      startTime: assignment.startTime,\n      endTime: assignment.endTime,\n      driverId: assignment.driverId,\n      vehicleId: assignment.vehicleId,\n      routeId: assignment.routeId,\n      dateId: assignment.dateId\n    };\n    apiManager.updateType(\"assignments\", editedAssignment).then(() => props.history.push(`/routeview`));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Edit Assignment\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Driver: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"driverId\",\n    onChange: handleAssignmentChange,\n    value: assignment.driverId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, drivers.map(driver => /*#__PURE__*/React.createElement(\"option\", {\n    className: \"driver_option\",\n    key: driver.id,\n    value: driver.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, driver.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Vehicle: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"vehicleId\",\n    onChange: handleAssignmentChange,\n    value: assignment.vehicleId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, vehicles.map(vehicle => /*#__PURE__*/React.createElement(\"option\", {\n    key: vehicle.id,\n    value: vehicle.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, vehicle.company, \" \", vehicle.number)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Route: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"routeId\",\n    onChange: handleAssignmentChange,\n    value: assignment.routeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, routes.map(route => /*#__PURE__*/React.createElement(\"option\", {\n    key: route.id,\n    value: route.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, route.number)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"dateId\",\n    onChange: handleAssignmentChange,\n    value: assignment.dateId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n    key: date.id,\n    value: date.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, date.date)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Start Time: \"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: assignment.startTime,\n    type: \"time\",\n    onChange: handleAssignmentChange,\n    id: \"startTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"End Time: \"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: assignment.endTime,\n    type: \"time\",\n    onChange: handleAssignmentChange,\n    id: \"endTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AssignmentEditForm;","map":{"version":3,"sources":["/Users/MainTechPiece/workspace/event-transpo-manager/react-app/src/forms/assignmentEditForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","InputLabel","Typography","Select","apiManager","moment","AssignmentEditForm","props","assignment","setAssignment","startTime","endTime","driverId","match","params","vehicleId","routeId","dateId","chosenDate","dates","setDates","routes","setRoutes","drivers","setDrivers","vehicles","setVehicles","getAssignment","assignId","getSingleType","then","console","log","getAllDropDowns","getType","r","sort","a","b","date","name","localeCompare","number","company","handleAssignmentChange","e","stateToChange","target","id","value","assignmentId","submit","editedAssignment","updateType","history","push","map","driver","vehicle","route"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport apiManager from \"../api/apiManager\";\nimport moment from \"moment\";\n\nconst AssignmentEditForm = props => {\n  const [assignment, setAssignment] = useState({\n    startTime: \"\",\n    endTime: \"\",\n    driverId: props.match.params.driverId,\n    vehicleId: props.match.params.vehicleId,\n    routeId: props.match.params.routeId,\n    dateId: props.chosenDate\n  });\n\n  const [dates, setDates] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  const getAssignment = (assignId) => {\n    apiManager\n      .getSingleType(\"assignments\", assignId)\n      .then(assignment => {\n        setAssignment(assignment);\n      });\n  };\n\n  console.log(assignment)\n\n  const getAllDropDowns = () => {\n    return (\n      apiManager.getType(\"dates\").then((r) => {\n        r.sort((a, b) => (a.date > b.date ? 1 : -1));\n        setDates(r);\n      }),\n      apiManager.getType(\"routes\").then((r) => {\n        r.sort((a, b) => (a.name > b.name ? 1 : -1));\n        setRoutes(r);\n      }),\n      apiManager.getType(\"drivers\").then((r) => {\n        r.sort((a, b) => a.name.localeCompare(b.name));\n        setDrivers(r);\n      }),\n      apiManager.getType(\"vehicles\").then((r) => {\n        r.sort((a, b) => (a.number > b.number ? 1 : -1)).sort((a, b) =>\n          a.company.localeCompare(b.company)\n        );\n        setVehicles(r);\n      })\n    );\n  };\n\n  const handleAssignmentChange = (e) => {\n    const stateToChange = { ...assignment };\n    stateToChange[e.target.id] = e.target.value;\n    setAssignment(stateToChange);\n  };\n\n  useEffect(() => {\n    getAssignment(props.match.params.assignmentId);\n    getAllDropDowns();\n  }, [props.match.params.assignmentId]);\n\n  const submit = () => {\n    const editedAssignment = {\n      id: props.match.params.assignmentId,\n      startTime: assignment.startTime,\n      endTime: assignment.endTime,\n      driverId: assignment.driverId,\n      vehicleId: assignment.vehicleId,\n      routeId: assignment.routeId,\n      dateId: assignment.dateId\n    };\n    apiManager\n      .updateType(\"assignments\", editedAssignment)\n      .then(() => props.history.push(`/routeview`));\n  };\n\n  return (\n    <>\n      <form>\n      <h3>Edit Assignment</h3>\n        <fieldset className=\"form\">\n          <div>\n            <label>Driver: </label>\n            <select\n              id=\"driverId\"\n              onChange={handleAssignmentChange}\n              value={assignment.driverId}\n            >\n              {drivers.map(driver => (\n                <option\n                  className=\"driver_option\"\n                  key={driver.id}\n                  value={driver.id}\n                >\n                  {driver.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Vehicle: </label>\n            <select\n              id=\"vehicleId\"\n              onChange={handleAssignmentChange}\n              value={assignment.vehicleId}\n            >\n              {vehicles.map(vehicle => (\n                <option key={vehicle.id} value={vehicle.id}>\n                  {vehicle.company} {vehicle.number}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Route: </label>\n            <select\n              id=\"routeId\"\n              onChange={handleAssignmentChange}\n              value={assignment.routeId}\n            >\n              {routes.map(route => (\n                <option key={route.id} value={route.id}>\n                  {route.number}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Date: </label>\n            <select\n              id=\"dateId\"\n              onChange={handleAssignmentChange}\n              value={assignment.dateId}\n            >\n              {dates.map(date => (\n                <option key={date.id} value={date.id}>\n                  {date.date}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label>Start Time: </label>\n            <input\n              defaultValue={assignment.startTime}\n              type=\"time\"\n              onChange={handleAssignmentChange}\n              id=\"startTime\"\n            />\n          </div>\n\n          <div>\n            <label>End Time: </label>\n            <input\n              defaultValue={assignment.endTime}\n              type=\"time\"\n              onChange={handleAssignmentChange}\n              id=\"endTime\"\n            />\n          </div>\n\n          <button type=\"button\" onClick={submit}>\n            Submit\n          </button>\n        </fieldset>\n      </form>\n    </>\n  );\n};\n\nexport default AssignmentEditForm;\n"]},"metadata":{},"sourceType":"module"}